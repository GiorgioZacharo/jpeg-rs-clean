
*** Running vivado
    with args -log design_1_wrapper.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace


****** Vivado v2017.4 (64-bit)
  **** SW Build 2086221 on Fri Dec 15 20:54:30 MST 2017
  **** IP Build 2085800 on Fri Dec 15 22:25:07 MST 2017
    ** Copyright 1986-2017 Xilinx, Inc. All Rights Reserved.

source design_1_wrapper.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/giorgio/workspace/jpeg-rs-clean/syn/chenIDCT'.
INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/giorgio/workspace/jpeg-rs-clean/syn/decode_start'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/home/tools/Xilinx/Vivado/2017.4/data/ip'.
add_files: Time (s): cpu = 00:00:12 ; elapsed = 00:00:32 . Memory (MB): peak = 1583.023 ; gain = 332.000 ; free physical = 14582 ; free virtual = 27159
Command: link_design -top design_1_wrapper -part xczu9eg-ffvb1156-2-e
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_ChenIDct_0_0/design_1_ChenIDct_0_0.dcp' for cell 'design_1_i/ChenIDct_0'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_decode_start_f2r_vectorPh_s2e_forBody96Preheader_0_0/design_1_decode_start_f2r_vectorPh_s2e_forBody96Preheader_0_0.dcp' for cell 'design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_proc_sys_reset_0_0/design_1_proc_sys_reset_0_0.dcp' for cell 'design_1_i/proc_sys_reset_0'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_xlconcat_0_0/design_1_xlconcat_0_0.dcp' for cell 'design_1_i/xlconcat_0'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_zynq_ultra_ps_e_0_0/design_1_zynq_ultra_ps_e_0_0.dcp' for cell 'design_1_i/zynq_ultra_ps_e_0'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_xbar_1/design_1_xbar_1.dcp' for cell 'design_1_i/axi_interconnect_master/xbar'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_ds_0/design_1_auto_ds_0.dcp' for cell 'design_1_i/axi_interconnect_master/s00_couplers/auto_ds'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_pc_0/design_1_auto_pc_0.dcp' for cell 'design_1_i/axi_interconnect_master/s00_couplers/auto_pc'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_s00_mmu_0/design_1_s00_mmu_0.dcp' for cell 'design_1_i/axi_interconnect_slave/s00_mmu'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_s01_mmu_0/design_1_s01_mmu_0.dcp' for cell 'design_1_i/axi_interconnect_slave/s01_mmu'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_s02_mmu_0/design_1_s02_mmu_0.dcp' for cell 'design_1_i/axi_interconnect_slave/s02_mmu'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_xbar_0/design_1_xbar_0.dcp' for cell 'design_1_i/axi_interconnect_slave/xbar'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0.dcp' for cell 'design_1_i/axi_interconnect_slave/s00_couplers/auto_us'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_us_1/design_1_auto_us_1.dcp' for cell 'design_1_i/axi_interconnect_slave/s01_couplers/auto_us'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_us_2/design_1_auto_us_2.dcp' for cell 'design_1_i/axi_interconnect_slave/s02_couplers/auto_us'
INFO: [Netlist 29-17] Analyzing 1639 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 1 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2017.4
INFO: [Device 21-403] Loading part xczu9eg-ffvb1156-2-e
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_zynq_ultra_ps_e_0_0/design_1_zynq_ultra_ps_e_0_0.xdc] for cell 'design_1_i/zynq_ultra_ps_e_0/inst'
Finished Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_zynq_ultra_ps_e_0_0/design_1_zynq_ultra_ps_e_0_0.xdc] for cell 'design_1_i/zynq_ultra_ps_e_0/inst'
Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_proc_sys_reset_0_0/design_1_proc_sys_reset_0_0_board.xdc] for cell 'design_1_i/proc_sys_reset_0/U0'
Finished Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_proc_sys_reset_0_0/design_1_proc_sys_reset_0_0_board.xdc] for cell 'design_1_i/proc_sys_reset_0/U0'
Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_proc_sys_reset_0_0/design_1_proc_sys_reset_0_0.xdc] for cell 'design_1_i/proc_sys_reset_0/U0'
Finished Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_proc_sys_reset_0_0/design_1_proc_sys_reset_0_0.xdc] for cell 'design_1_i/proc_sys_reset_0/U0'
INFO: [Project 1-538] Using original IP XDC constraints instead of the XDC constraints in dcp '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_ds_0/design_1_auto_ds_0.dcp'
Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_ds_0/design_1_auto_ds_0_clocks.xdc] for cell 'design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst'
Finished Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_ds_0/design_1_auto_ds_0_clocks.xdc] for cell 'design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst'
Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_us_2/design_1_auto_us_2_clocks.xdc] for cell 'design_1_i/axi_interconnect_slave/s02_couplers/auto_us/inst'
Finished Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_us_2/design_1_auto_us_2_clocks.xdc] for cell 'design_1_i/axi_interconnect_slave/s02_couplers/auto_us/inst'
Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_us_1/design_1_auto_us_1_clocks.xdc] for cell 'design_1_i/axi_interconnect_slave/s01_couplers/auto_us/inst'
Finished Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_us_1/design_1_auto_us_1_clocks.xdc] for cell 'design_1_i/axi_interconnect_slave/s01_couplers/auto_us/inst'
Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0_clocks.xdc] for cell 'design_1_i/axi_interconnect_slave/s00_couplers/auto_us/inst'
Finished Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0_clocks.xdc] for cell 'design_1_i/axi_interconnect_slave/s00_couplers/auto_us/inst'
Sourcing Tcl File [/home/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
INFO: [Timing 38-35] Done setting XDC timing constraints. [/home/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl:2]
all_registers: Time (s): cpu = 00:00:27 ; elapsed = 00:00:16 . Memory (MB): peak = 2909.773 ; gain = 666.113 ; free physical = 13048 ; free virtual = 25705
Finished Sourcing Tcl File [/home/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
Sourcing Tcl File [/home/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
Finished Sourcing Tcl File [/home/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
Sourcing Tcl File [/home/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
Finished Sourcing Tcl File [/home/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 199 instances were transformed.
  DSP48E2 => DSP48E2 (DSP_ALU, DSP_A_B_DATA, DSP_C_DATA, DSP_MULTIPLIER, DSP_M_DATA, DSP_OUTPUT, DSP_PREADD_DATA, DSP_PREADD): 192 instances
  RAM32M16 => RAM32M16 (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 7 instances

28 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:55 ; elapsed = 00:01:00 . Memory (MB): peak = 2909.781 ; gain = 1326.758 ; free physical = 13289 ; free virtual = 25869
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xczu9eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu9eg'
INFO: [Common 17-1223] The version limit for your license is '2018.05' and will expire in 22 days. A version limit expiration means that, although you may be able to continue to use the current version of tools or IP with this license, you will not be eligible for any updates or new releases.
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 2981.816 ; gain = 64.039 ; free physical = 13277 ; free virtual = 25858
INFO: [Timing 38-35] Done setting XDC timing constraints.

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 32 inverter(s) to 4966 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 13db3ac70

Time (s): cpu = 00:00:11 ; elapsed = 00:00:05 . Memory (MB): peak = 2981.816 ; gain = 0.000 ; free physical = 13260 ; free virtual = 25841
INFO: [Opt 31-389] Phase Retarget created 218 cells and removed 1453 cells

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 7 inverter(s) to 9 load pin(s).
Phase 2 Constant propagation | Checksum: 179b53138

Time (s): cpu = 00:00:14 ; elapsed = 00:00:08 . Memory (MB): peak = 2981.816 ; gain = 0.000 ; free physical = 13259 ; free virtual = 25840
INFO: [Opt 31-389] Phase Constant propagation created 1048 cells and removed 3961 cells

Phase 3 Sweep
Phase 3 Sweep | Checksum: bec5b3ba

Time (s): cpu = 00:00:17 ; elapsed = 00:00:11 . Memory (MB): peak = 2981.816 ; gain = 0.000 ; free physical = 13257 ; free virtual = 25838
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 1155 cells

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: bec5b3ba

Time (s): cpu = 00:00:20 ; elapsed = 00:00:14 . Memory (MB): peak = 2981.816 ; gain = 0.000 ; free physical = 13259 ; free virtual = 25840
INFO: [Opt 31-389] Phase BUFG optimization created 0 cells and removed 0 cells

Phase 5 Shift Register Optimization
Phase 5 Shift Register Optimization | Checksum: bec5b3ba

Time (s): cpu = 00:00:21 ; elapsed = 00:00:15 . Memory (MB): peak = 2981.816 ; gain = 0.000 ; free physical = 13258 ; free virtual = 25839
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Starting Connectivity Check Task

Time (s): cpu = 00:00:00.09 ; elapsed = 00:00:00.09 . Memory (MB): peak = 2981.816 ; gain = 0.000 ; free physical = 13253 ; free virtual = 25834
Ending Logic Optimization Task | Checksum: a0d442b1

Time (s): cpu = 00:00:22 ; elapsed = 00:00:16 . Memory (MB): peak = 2981.816 ; gain = 0.000 ; free physical = 13253 ; free virtual = 25834

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=6.290 | TNS=0.000 |
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 4 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Pwropt 34-201] Structural ODC has moved 0 WE to EN ports
Number of BRAM Ports augmented: 0 newly gated: 3 Total Ports: 8
Ending PowerOpt Patch Enables Task | Checksum: a6e1f81b

Time (s): cpu = 00:00:00.29 ; elapsed = 00:00:00.29 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 12153 ; free virtual = 24875
Ending Power Optimization Task | Checksum: a6e1f81b

Time (s): cpu = 00:01:57 ; elapsed = 00:01:36 . Memory (MB): peak = 4865.789 ; gain = 1883.973 ; free physical = 12193 ; free virtual = 24915
INFO: [Common 17-83] Releasing license: Implementation
50 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:02:45 ; elapsed = 00:02:01 . Memory (MB): peak = 4865.789 ; gain = 1956.008 ; free physical = 12194 ; free virtual = 24916
INFO: [Common 17-1381] The checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/impl_1/design_1_wrapper_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:11 ; elapsed = 00:00:14 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 12162 ; free virtual = 24911
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
Command: report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Coretcl 2-168] The results of DRC are in file /home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/impl_1/design_1_wrapper_drc_opted.rpt.
report_drc completed successfully
INFO: [Chipscope 16-241] No debug cores found in the current design.
Before running the implement_debug_core command, either use the Set Up Debug wizard (GUI mode)
or use the create_debug_core and connect_debug_core Tcl commands to insert debug cores into the design.
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xczu9eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu9eg'
INFO: [Common 17-1223] The version limit for your license is '2018.05' and will expire in 22 days. A version limit expiration means that, although you may be able to continue to use the current version of tools or IP with this license, you will not be eligible for any updates or new releases.
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 8 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00.08 ; elapsed = 00:00:00.09 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 12173 ; free virtual = 24909
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 546353c0

Time (s): cpu = 00:00:00.12 ; elapsed = 00:00:00.12 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 12173 ; free virtual = 24909
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00.09 ; elapsed = 00:00:00.09 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 12188 ; free virtual = 24920

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
INFO: [Timing 38-35] Done setting XDC timing constraints.
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: e75a6f25

Time (s): cpu = 00:00:49 ; elapsed = 00:00:16 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 12057 ; free virtual = 24790

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: f5ab725f

Time (s): cpu = 00:01:29 ; elapsed = 00:00:31 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11937 ; free virtual = 24671

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: f5ab725f

Time (s): cpu = 00:01:29 ; elapsed = 00:00:31 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11937 ; free virtual = 24670
Phase 1 Placer Initialization | Checksum: f5ab725f

Time (s): cpu = 00:01:30 ; elapsed = 00:00:31 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11937 ; free virtual = 24670

Phase 2 Global Placement
Phase 2 Global Placement | Checksum: 1d86ec5af

Time (s): cpu = 00:02:40 ; elapsed = 00:01:06 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11823 ; free virtual = 24562

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 1d86ec5af

Time (s): cpu = 00:02:41 ; elapsed = 00:01:06 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11827 ; free virtual = 24565

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 124c80f9f

Time (s): cpu = 00:02:51 ; elapsed = 00:01:12 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11823 ; free virtual = 24562

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 16d0ecbc1

Time (s): cpu = 00:02:52 ; elapsed = 00:01:12 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11825 ; free virtual = 24564

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 132931049

Time (s): cpu = 00:02:52 ; elapsed = 00:01:13 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11825 ; free virtual = 24564

Phase 3.5 Small Shape Clustering
Phase 3.5 Small Shape Clustering | Checksum: 140386d31

Time (s): cpu = 00:02:56 ; elapsed = 00:01:16 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11793 ; free virtual = 24530

Phase 3.6 DP Optimization
Phase 3.6 DP Optimization | Checksum: 16fa71d8d

Time (s): cpu = 00:03:14 ; elapsed = 00:01:22 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11786 ; free virtual = 24522

Phase 3.7 Flow Legalize Slice Clusters
Phase 3.7 Flow Legalize Slice Clusters | Checksum: cf652243

Time (s): cpu = 00:03:16 ; elapsed = 00:01:24 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11786 ; free virtual = 24522

Phase 3.8 Slice Area Swap
Phase 3.8 Slice Area Swap | Checksum: 17dfa96c5

Time (s): cpu = 00:03:18 ; elapsed = 00:01:25 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11757 ; free virtual = 24493

Phase 3.9 Commit Slice Clusters
Phase 3.9 Commit Slice Clusters | Checksum: 16e4c0fc7

Time (s): cpu = 00:03:31 ; elapsed = 00:01:29 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11769 ; free virtual = 24504

Phase 3.10 Re-assign LUT pins
Phase 3.10 Re-assign LUT pins | Checksum: f63bc7b3

Time (s): cpu = 00:03:33 ; elapsed = 00:01:31 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11772 ; free virtual = 24507

Phase 3.11 Pipeline Register Optimization
Phase 3.11 Pipeline Register Optimization | Checksum: f63bc7b3

Time (s): cpu = 00:03:34 ; elapsed = 00:01:32 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11781 ; free virtual = 24516
Phase 3 Detail Placement | Checksum: f63bc7b3

Time (s): cpu = 00:03:34 ; elapsed = 00:01:32 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11781 ; free virtual = 24516

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 1741cb093

Phase 4.1.1.1 BUFG Insertion
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 8 CPUs
INFO: [Place 46-35] Processed net design_1_i/proc_sys_reset_0/U0/peripheral_aresetn[0], inserted BUFG to drive 3705 loads.
INFO: [Place 46-35] Processed net design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/ap_CS_fsm_state38, inserted BUFG to drive 1824 loads.
INFO: [Place 46-35] Processed net design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/ap_CS_fsm_state39, inserted BUFG to drive 1184 loads.
INFO: [Place 46-35] Processed net design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/ap_NS_fsm190_out, inserted BUFG to drive 1051 loads.
INFO: [Place 46-31] BUFG insertion identified 4 candidate nets, 4 success, 0 skipped for placement/routing, 0 skipped for timing, 0 skipped for netlist change reason.
Phase 4.1.1.1 BUFG Insertion | Checksum: 1b08a02a9

Time (s): cpu = 00:04:35 ; elapsed = 00:01:50 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11800 ; free virtual = 24536
INFO: [Place 30-746] Post Placement Timing Summary WNS=5.195. For the most accurate timing information please run report_timing.
Phase 4.1.1 Post Placement Optimization | Checksum: 20ee809b8

Time (s): cpu = 00:04:35 ; elapsed = 00:01:50 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11801 ; free virtual = 24537
Phase 4.1 Post Commit Optimization | Checksum: 20ee809b8

Time (s): cpu = 00:04:36 ; elapsed = 00:01:51 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11801 ; free virtual = 24537

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 20ee809b8

Time (s): cpu = 00:04:37 ; elapsed = 00:01:51 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11813 ; free virtual = 24549

Phase 4.3 Placer Reporting
Phase 4.3 Placer Reporting | Checksum: 2671a1b7e

Time (s): cpu = 00:04:45 ; elapsed = 00:02:00 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11791 ; free virtual = 24531

Phase 4.4 Final Placement Cleanup
Phase 4.4 Final Placement Cleanup | Checksum: 21fdfd81f

Time (s): cpu = 00:04:46 ; elapsed = 00:02:00 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11792 ; free virtual = 24532
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 21fdfd81f

Time (s): cpu = 00:04:46 ; elapsed = 00:02:01 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11792 ; free virtual = 24532
Ending Placer Task | Checksum: 1219578d4

Time (s): cpu = 00:04:46 ; elapsed = 00:02:01 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11905 ; free virtual = 24645
INFO: [Common 17-83] Releasing license: Implementation
77 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:04:55 ; elapsed = 00:02:06 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11905 ; free virtual = 24645
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:07 ; elapsed = 00:00:03 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11804 ; free virtual = 24622
INFO: [Common 17-1381] The checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/impl_1/design_1_wrapper_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:15 ; elapsed = 00:00:14 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11884 ; free virtual = 24641
INFO: [runtcl-4] Executing : report_io -file design_1_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00.20 ; elapsed = 00:00:00.28 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11858 ; free virtual = 24615
INFO: [runtcl-4] Executing : report_utilization -file design_1_wrapper_utilization_placed.rpt -pb design_1_wrapper_utilization_placed.pb
report_utilization: Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11885 ; free virtual = 24642
INFO: [runtcl-4] Executing : report_control_sets -verbose -file design_1_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00.17 ; elapsed = 00:00:00.24 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11883 ; free virtual = 24640
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xczu9eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu9eg'
INFO: [Common 17-1223] The version limit for your license is '2018.05' and will expire in 22 days. A version limit expiration means that, although you may be able to continue to use the current version of tools or IP with this license, you will not be eligible for any updates or new releases.
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 8 CPUs
Checksum: PlaceDB: 170ce811 ConstDB: 0 ShapeSum: b2567efd RouteDB: 583211c6

Phase 1 Build RT Design
Phase 1 Build RT Design | Checksum: 101aa1248

Time (s): cpu = 00:01:08 ; elapsed = 00:00:49 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11641 ; free virtual = 24398
Post Restoration Checksum: NetGraph: 7ea191ce NumContArr: 3de57aaf Constraints: cc3fe1ca Timing: 0

Phase 2 Router Initialization

Phase 2.1 Create Timer
Phase 2.1 Create Timer | Checksum: 188c6ee47

Time (s): cpu = 00:01:11 ; elapsed = 00:00:52 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11623 ; free virtual = 24380

Phase 2.2 Fix Topology Constraints
Phase 2.2 Fix Topology Constraints | Checksum: 188c6ee47

Time (s): cpu = 00:01:11 ; elapsed = 00:00:52 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11560 ; free virtual = 24317

Phase 2.3 Pre Route Cleanup
Phase 2.3 Pre Route Cleanup | Checksum: 188c6ee47

Time (s): cpu = 00:01:11 ; elapsed = 00:00:52 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11560 ; free virtual = 24317

Phase 2.4 Global Clock Net Routing
 Number of Nodes with overlaps = 0
Phase 2.4 Global Clock Net Routing | Checksum: 19c9b2a2f

Time (s): cpu = 00:01:13 ; elapsed = 00:00:54 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11546 ; free virtual = 24304

Phase 2.5 Update Timing
Phase 2.5 Update Timing | Checksum: 1e4e001b8

Time (s): cpu = 00:02:19 ; elapsed = 00:01:12 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11539 ; free virtual = 24296
INFO: [Route 35-416] Intermediate Timing Summary | WNS=5.388  | TNS=0.000  | WHS=-0.085 | THS=-7.336 |

Phase 2 Router Initialization | Checksum: 17a9c815f

Time (s): cpu = 00:02:59 ; elapsed = 00:01:19 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11521 ; free virtual = 24278

Phase 3 Initial Routing
Phase 3 Initial Routing | Checksum: 179dce7ae

Time (s): cpu = 00:03:22 ; elapsed = 00:01:26 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11495 ; free virtual = 24253

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 7741
 Number of Nodes with overlaps = 711
 Number of Nodes with overlaps = 97
 Number of Nodes with overlaps = 5
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=4.770  | TNS=0.000  | WHS=-0.006 | THS=-0.014 |

Phase 4.1 Global Iteration 0 | Checksum: 24ff43766

Time (s): cpu = 00:05:39 ; elapsed = 00:01:59 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11490 ; free virtual = 24250

Phase 4.2 Additional Iteration for Hold
Phase 4.2 Additional Iteration for Hold | Checksum: 238af47ab

Time (s): cpu = 00:05:39 ; elapsed = 00:02:00 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11490 ; free virtual = 24250
Phase 4 Rip-up And Reroute | Checksum: 238af47ab

Time (s): cpu = 00:05:39 ; elapsed = 00:02:00 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11490 ; free virtual = 24250

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp

Phase 5.1.1 Update Timing
Phase 5.1.1 Update Timing | Checksum: 232dbba90

Time (s): cpu = 00:06:07 ; elapsed = 00:02:06 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11497 ; free virtual = 24254
INFO: [Route 35-416] Intermediate Timing Summary | WNS=4.770  | TNS=0.000  | WHS=0.010  | THS=0.000  |

Phase 5.1 Delay CleanUp | Checksum: 232dbba90

Time (s): cpu = 00:06:07 ; elapsed = 00:02:06 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11503 ; free virtual = 24261

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 232dbba90

Time (s): cpu = 00:06:07 ; elapsed = 00:02:07 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11503 ; free virtual = 24261
Phase 5 Delay and Skew Optimization | Checksum: 232dbba90

Time (s): cpu = 00:06:07 ; elapsed = 00:02:07 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11503 ; free virtual = 24261

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 1e3359796

Time (s): cpu = 00:06:29 ; elapsed = 00:02:12 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11505 ; free virtual = 24263
INFO: [Route 35-416] Intermediate Timing Summary | WNS=4.770  | TNS=0.000  | WHS=0.010  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 2b31f3db4

Time (s): cpu = 00:06:29 ; elapsed = 00:02:13 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11505 ; free virtual = 24263
Phase 6 Post Hold Fix | Checksum: 2b31f3db4

Time (s): cpu = 00:06:29 ; elapsed = 00:02:13 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11505 ; free virtual = 24263

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 1.82922 %
  Global Horizontal Routing Utilization  = 2.12914 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 26e4f0ea8

Time (s): cpu = 00:06:30 ; elapsed = 00:02:13 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11503 ; free virtual = 24260

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 26e4f0ea8

Time (s): cpu = 00:06:30 ; elapsed = 00:02:13 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11502 ; free virtual = 24259

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 26e4f0ea8

Time (s): cpu = 00:06:33 ; elapsed = 00:02:16 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11497 ; free virtual = 24255

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=4.770  | TNS=0.000  | WHS=0.010  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 10 Post Router Timing | Checksum: 26e4f0ea8

Time (s): cpu = 00:06:33 ; elapsed = 00:02:16 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11501 ; free virtual = 24259
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:06:33 ; elapsed = 00:02:16 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11585 ; free virtual = 24343

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
98 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:06:43 ; elapsed = 00:02:21 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11586 ; free virtual = 24343
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:08 ; elapsed = 00:00:03 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11477 ; free virtual = 24330
INFO: [Common 17-1381] The checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/impl_1/design_1_wrapper_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:16 ; elapsed = 00:00:14 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11560 ; free virtual = 24338
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
Command: report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Coretcl 2-168] The results of DRC are in file /home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/impl_1/design_1_wrapper_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:24 ; elapsed = 00:00:06 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11521 ; free virtual = 24300
INFO: [runtcl-4] Executing : report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 8 threads
INFO: [Coretcl 2-1520] The results of Report Methodology are in file /home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/impl_1/design_1_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:01:29 ; elapsed = 00:00:21 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11256 ; free virtual = 24035
INFO: [runtcl-4] Executing : report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
Command: report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
110 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:01:02 ; elapsed = 00:00:33 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11186 ; free virtual = 23976
INFO: [runtcl-4] Executing : report_route_status -file design_1_wrapper_route_status.rpt -pb design_1_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -file design_1_wrapper_timing_summary_routed.rpt -rpx design_1_wrapper_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -2, Temperature grade: E, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 8 CPUs
INFO: [runtcl-4] Executing : report_incremental_reuse -file design_1_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-545] No incremental reuse to report, no incremental placement and routing data was found.
INFO: [runtcl-4] Executing : report_clock_utilization -file design_1_wrapper_clock_utilization_routed.rpt
report_clock_utilization: Time (s): cpu = 00:00:41 ; elapsed = 00:00:41 . Memory (MB): peak = 4865.789 ; gain = 0.000 ; free physical = 11169 ; free virtual = 23960
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xczu9eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu9eg'
INFO: [Common 17-1223] The version limit for your license is '2018.05' and will expire in 22 days. A version limit expiration means that, although you may be able to continue to use the current version of tools or IP with this license, you will not be eligible for any updates or new releases.
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 8 threads
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U11/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U11/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U11/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U11/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U13/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U13/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U13/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U13/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U14/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U14/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U14/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U14/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U15/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U15/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U15/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U15/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U16/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U16/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U16/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U16/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U19/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U19/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U19/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U19/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U21/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U21/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U21/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U21/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U22/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U22/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U22/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U22/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U23/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U23/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U23/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U23/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U27/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U27/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U27/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U27/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U29/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U29/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U29/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U29/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U3/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U3/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U3/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U3/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U30/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U30/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U30/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U30/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U31/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U31/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U31/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U31/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U32/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U32/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U32/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U32/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U5/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U5/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U5/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U5/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U6/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U6/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U6/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U6/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U7/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U7/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U7/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U7/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U10/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U10/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U10/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U10/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U18/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U18/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U18/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U18/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U2/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U2/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U2/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U2/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U20/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U20/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U20/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U20/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U26/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U26/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U26/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U26/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U4/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U4/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U4/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U4/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U1/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U1/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U1/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U1/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U17/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U17/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U17/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U17/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U24/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U24/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U24/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U24/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U8/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U8/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U8/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U8/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U12/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U12/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U12/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U12/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U25/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U25/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U25/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U25/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U28/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U28/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U28/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U28/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U9/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U9/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U9/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U9/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U1/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U1/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U1/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U1/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U12/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U12/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U12/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U12/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U13/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U13/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U13/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U13/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U16/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U16/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U16/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U16/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U17/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U17/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U17/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U17/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U20/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U20/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U20/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U20/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U21/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U21/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U21/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U21/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U24/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U24/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U24/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U24/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U25/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U25/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U25/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U25/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U28/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U28/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U28/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U28/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U29/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U29/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U29/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U29/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U32/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U32/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U32/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U32/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U33/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U33/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U33/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U33/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U36/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U36/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U36/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U36/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U37/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U37/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U37/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U37/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U4/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U4/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U4/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U4/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U40/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U40/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U40/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U40/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U41/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U41/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U41/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U41/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
INFO: [Common 17-14] Message 'DRC DPIP-2' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U11/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U11/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U13/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U13/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U14/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U14/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U15/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U15/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U16/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U16/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U19/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U19/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U21/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U21/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U22/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U22/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U23/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U23/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U27/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U27/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U29/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U29/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U3/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U3/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U30/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U30/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U31/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U31/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U32/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U32/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U5/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U5/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U6/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U6/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U7/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U7/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U10/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U10/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U18/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U18/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U2/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U2/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U20/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U20/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U26/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U26/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U4/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U4/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U1/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U1/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U17/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U17/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U24/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U24/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U8/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U8/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U12/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U12/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U25/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U25/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U28/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U28/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U9/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U9/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U1/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U1/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U12/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U12/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U13/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U13/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U16/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U16/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U17/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U17/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U20/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U20/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U21/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U21/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U24/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U24/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U25/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U25/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U28/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U28/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U29/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U29/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U32/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U32/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U33/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U33/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U36/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U36/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U37/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U37/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U4/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U4/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U40/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U40/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U41/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U41/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U44/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U44/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U45/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U45/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U48/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U48/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U49/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U49/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U5/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U5/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U52/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U52/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U53/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U53/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U56/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U56/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U57/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U57/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U60/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U60/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U61/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U61/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U64/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U64/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U8/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U8/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U9/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U9/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U10/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U10/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U14/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U14/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U18/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U18/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U2/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U2/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U22/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U22/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U26/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U26/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U30/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U30/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U34/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U34/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U38/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U38/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U42/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U42/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U46/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U46/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U50/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U50/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U54/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U54/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U58/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U58/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U6/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U6/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U62/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U62/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U11/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U11/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U15/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U15/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U19/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U19/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U23/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U23/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U27/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U27/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U3/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U3/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U31/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U31/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U35/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U35/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U39/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U39/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U43/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U43/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U47/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U47/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U51/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U51/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U55/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U55/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U59/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U59/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U63/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U63/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U7/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U7/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U11/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U11/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U11/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U11/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U13/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U13/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U13/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U13/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U14/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U14/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U14/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U14/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U15/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U15/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U15/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U15/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U16/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U16/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U16/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U16/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U19/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U19/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U19/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U19/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U21/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U21/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U21/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U21/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U22/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U22/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U22/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U22/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U23/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U23/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U23/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U23/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U27/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U27/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U27/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U27/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U29/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U29/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U29/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U29/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U3/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U3/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U3/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U3/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U30/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U30/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U30/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U30/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U31/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U31/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U31/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U31/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U32/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U32/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U32/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U32/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U5/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U5/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U5/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U5/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U6/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U6/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U6/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U6/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U7/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U7/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U7/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U7/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U10/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U10/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U10/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U10/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U18/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U18/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U18/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U18/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U2/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U2/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U2/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U2/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U20/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U20/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U20/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U20/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U26/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U26/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U26/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U26/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U4/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U4/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U4/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U4/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U1/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U1/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U1/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U1/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U17/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U17/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U17/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U17/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U24/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U24/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U24/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U24/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U8/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U8/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U8/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U8/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U12/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U12/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U12/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U12/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U25/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U25/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U25/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U25/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U28/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U28/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U28/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U28/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U9/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U9/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U9/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U9/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U1/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U1/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U1/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U1/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U12/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U12/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U12/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U12/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U13/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U13/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U13/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U13/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U16/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U16/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U16/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U16/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U17/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U17/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U17/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U17/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U20/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U20/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U20/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U20/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U21/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U21/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U21/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U21/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U24/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U24/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U24/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U24/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U25/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U25/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U25/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U25/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U28/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U28/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U28/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U28/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U29/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U29/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U29/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U29/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U32/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U32/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U32/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U32/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U33/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U33/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U33/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U33/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U36/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U36/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U36/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U36/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U37/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U37/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U37/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U37/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U4/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U4/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U4/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U4/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U40/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U40/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U40/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U40/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U41/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U41/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U41/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U41/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Common 17-14] Message 'DRC DPOP-4' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/ap_NS_fsm190_out_bufg_place is a gated clock net sourced by a combinational pin design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/ap_CS_fsm[30]_i_1/O, cell design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/ap_CS_fsm[30]_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC RTSTAT-10] No routable loads: 15 net(s) have no routable loads. The problem bus(es) and/or net(s) are design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/user_valid, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/user_valid, and design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/user_valid.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 482 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Project 1-821] Please set project.enableDesignId to be 'true'.
INFO: [Designutils 20-2272] Running write_bitstream with 8 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./design_1_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-118] WebTalk data collection is enabled (User setting is ON. Install Setting is ON.).
INFO: [Common 17-186] '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/impl_1/usage_statistics_webtalk.xml' has been successfully sent to Xilinx on Wed May  9 11:47:58 2018. For additional details about this file, please refer to the WebTalk help file at /home/tools/Xilinx/Vivado/2017.4/doc/webtalk_introduction.html.
INFO: [Common 17-83] Releasing license: Implementation
131 Infos, 298 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:47 ; elapsed = 00:02:39 . Memory (MB): peak = 5257.398 ; gain = 391.609 ; free physical = 11089 ; free virtual = 23916
INFO: [Common 17-206] Exiting Vivado at Wed May  9 11:47:58 2018...

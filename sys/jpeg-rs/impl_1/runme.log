
*** Running vivado
    with args -log design_1_wrapper.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace


****** Vivado v2017.4 (64-bit)
  **** SW Build 2086221 on Fri Dec 15 20:54:30 MST 2017
  **** IP Build 2085800 on Fri Dec 15 22:25:07 MST 2017
    ** Copyright 1986-2017 Xilinx, Inc. All Rights Reserved.

source design_1_wrapper.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/giorgio/workspace/jpeg-rs-clean/syn/chenIDCT'.
INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/giorgio/workspace/jpeg-rs-clean/syn/decode_start'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/home/tools/Xilinx/Vivado/2017.4/data/ip'.
add_files: Time (s): cpu = 00:00:12 ; elapsed = 00:00:33 . Memory (MB): peak = 1582.020 ; gain = 331.000 ; free physical = 3861 ; free virtual = 12444
Command: link_design -top design_1_wrapper -part xczu9eg-ffvb1156-2-e
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_ChenIDct_0_1/design_1_ChenIDct_0_1.dcp' for cell 'design_1_i/ChenIDct_0'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_decode_start_f2r_vectorPh_s2e_forBody96Preheader_0_0/design_1_decode_start_f2r_vectorPh_s2e_forBody96Preheader_0_0.dcp' for cell 'design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_proc_sys_reset_0_0/design_1_proc_sys_reset_0_0.dcp' for cell 'design_1_i/proc_sys_reset_0'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_xlconcat_0_0/design_1_xlconcat_0_0.dcp' for cell 'design_1_i/xlconcat_0'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_zynq_ultra_ps_e_0_0/design_1_zynq_ultra_ps_e_0_0.dcp' for cell 'design_1_i/zynq_ultra_ps_e_0'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_xbar_1/design_1_xbar_1.dcp' for cell 'design_1_i/axi_interconnect_master/xbar'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_ds_0/design_1_auto_ds_0.dcp' for cell 'design_1_i/axi_interconnect_master/s00_couplers/auto_ds'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_pc_0/design_1_auto_pc_0.dcp' for cell 'design_1_i/axi_interconnect_master/s00_couplers/auto_pc'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_s00_mmu_0/design_1_s00_mmu_0.dcp' for cell 'design_1_i/axi_interconnect_slave/s00_mmu'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_s01_mmu_0/design_1_s01_mmu_0.dcp' for cell 'design_1_i/axi_interconnect_slave/s01_mmu'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_s02_mmu_0/design_1_s02_mmu_0.dcp' for cell 'design_1_i/axi_interconnect_slave/s02_mmu'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_xbar_0/design_1_xbar_0.dcp' for cell 'design_1_i/axi_interconnect_slave/xbar'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0.dcp' for cell 'design_1_i/axi_interconnect_slave/s00_couplers/auto_us'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_us_1/design_1_auto_us_1.dcp' for cell 'design_1_i/axi_interconnect_slave/s01_couplers/auto_us'
INFO: [Project 1-454] Reading design checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_us_2/design_1_auto_us_2.dcp' for cell 'design_1_i/axi_interconnect_slave/s02_couplers/auto_us'
INFO: [Netlist 29-17] Analyzing 1639 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 1 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2017.4
INFO: [Device 21-403] Loading part xczu9eg-ffvb1156-2-e
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_zynq_ultra_ps_e_0_0/design_1_zynq_ultra_ps_e_0_0.xdc] for cell 'design_1_i/zynq_ultra_ps_e_0/inst'
Finished Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_zynq_ultra_ps_e_0_0/design_1_zynq_ultra_ps_e_0_0.xdc] for cell 'design_1_i/zynq_ultra_ps_e_0/inst'
Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_proc_sys_reset_0_0/design_1_proc_sys_reset_0_0_board.xdc] for cell 'design_1_i/proc_sys_reset_0/U0'
Finished Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_proc_sys_reset_0_0/design_1_proc_sys_reset_0_0_board.xdc] for cell 'design_1_i/proc_sys_reset_0/U0'
Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_proc_sys_reset_0_0/design_1_proc_sys_reset_0_0.xdc] for cell 'design_1_i/proc_sys_reset_0/U0'
Finished Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_proc_sys_reset_0_0/design_1_proc_sys_reset_0_0.xdc] for cell 'design_1_i/proc_sys_reset_0/U0'
INFO: [Project 1-538] Using original IP XDC constraints instead of the XDC constraints in dcp '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_ds_0/design_1_auto_ds_0.dcp'
Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_ds_0/design_1_auto_ds_0_clocks.xdc] for cell 'design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst'
Finished Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_ds_0/design_1_auto_ds_0_clocks.xdc] for cell 'design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst'
Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_us_2/design_1_auto_us_2_clocks.xdc] for cell 'design_1_i/axi_interconnect_slave/s02_couplers/auto_us/inst'
Finished Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_us_2/design_1_auto_us_2_clocks.xdc] for cell 'design_1_i/axi_interconnect_slave/s02_couplers/auto_us/inst'
Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_us_1/design_1_auto_us_1_clocks.xdc] for cell 'design_1_i/axi_interconnect_slave/s01_couplers/auto_us/inst'
Finished Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_us_1/design_1_auto_us_1_clocks.xdc] for cell 'design_1_i/axi_interconnect_slave/s01_couplers/auto_us/inst'
Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0_clocks.xdc] for cell 'design_1_i/axi_interconnect_slave/s00_couplers/auto_us/inst'
Finished Parsing XDC File [/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/jpeg-rs.srcs/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0_clocks.xdc] for cell 'design_1_i/axi_interconnect_slave/s00_couplers/auto_us/inst'
Sourcing Tcl File [/home/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
INFO: [Timing 38-35] Done setting XDC timing constraints. [/home/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl:2]
all_registers: Time (s): cpu = 00:00:27 ; elapsed = 00:00:17 . Memory (MB): peak = 2908.770 ; gain = 666.113 ; free physical = 2335 ; free virtual = 10995
Finished Sourcing Tcl File [/home/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
Sourcing Tcl File [/home/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
Finished Sourcing Tcl File [/home/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
Sourcing Tcl File [/home/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
Finished Sourcing Tcl File [/home/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 199 instances were transformed.
  DSP48E2 => DSP48E2 (DSP_ALU, DSP_A_B_DATA, DSP_C_DATA, DSP_MULTIPLIER, DSP_M_DATA, DSP_OUTPUT, DSP_PREADD_DATA, DSP_PREADD): 192 instances
  RAM32M16 => RAM32M16 (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 7 instances

28 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:56 ; elapsed = 00:01:02 . Memory (MB): peak = 2908.777 ; gain = 1326.758 ; free physical = 2564 ; free virtual = 11147
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xczu9eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu9eg'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:04 ; elapsed = 00:00:03 . Memory (MB): peak = 2980.812 ; gain = 64.039 ; free physical = 2550 ; free virtual = 11135
INFO: [Timing 38-35] Done setting XDC timing constraints.

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 32 inverter(s) to 4966 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 1668e392a

Time (s): cpu = 00:00:11 ; elapsed = 00:00:06 . Memory (MB): peak = 2980.812 ; gain = 0.000 ; free physical = 2530 ; free virtual = 11119
INFO: [Opt 31-389] Phase Retarget created 218 cells and removed 1453 cells

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 7 inverter(s) to 9 load pin(s).
Phase 2 Constant propagation | Checksum: 12df3c33b

Time (s): cpu = 00:00:14 ; elapsed = 00:00:08 . Memory (MB): peak = 2980.812 ; gain = 0.000 ; free physical = 2529 ; free virtual = 11119
INFO: [Opt 31-389] Phase Constant propagation created 1048 cells and removed 3961 cells

Phase 3 Sweep
Phase 3 Sweep | Checksum: 1783224bc

Time (s): cpu = 00:00:17 ; elapsed = 00:00:12 . Memory (MB): peak = 2980.812 ; gain = 0.000 ; free physical = 2524 ; free virtual = 11114
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 1155 cells

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: 1783224bc

Time (s): cpu = 00:00:20 ; elapsed = 00:00:14 . Memory (MB): peak = 2980.812 ; gain = 0.000 ; free physical = 2525 ; free virtual = 11115
INFO: [Opt 31-389] Phase BUFG optimization created 0 cells and removed 0 cells

Phase 5 Shift Register Optimization
Phase 5 Shift Register Optimization | Checksum: 1783224bc

Time (s): cpu = 00:00:21 ; elapsed = 00:00:16 . Memory (MB): peak = 2980.812 ; gain = 0.000 ; free physical = 2526 ; free virtual = 11117
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Starting Connectivity Check Task

Time (s): cpu = 00:00:00.09 ; elapsed = 00:00:00.09 . Memory (MB): peak = 2980.812 ; gain = 0.000 ; free physical = 2522 ; free virtual = 11112
Ending Logic Optimization Task | Checksum: cc5c26dd

Time (s): cpu = 00:00:23 ; elapsed = 00:00:17 . Memory (MB): peak = 2980.812 ; gain = 0.000 ; free physical = 2522 ; free virtual = 11112

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=6.290 | TNS=0.000 |
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 4 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Pwropt 34-201] Structural ODC has moved 0 WE to EN ports
Number of BRAM Ports augmented: 0 newly gated: 3 Total Ports: 8
Ending PowerOpt Patch Enables Task | Checksum: 13e6a3d23

Time (s): cpu = 00:00:00.31 ; elapsed = 00:00:00.34 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1530 ; free virtual = 10136
Ending Power Optimization Task | Checksum: 13e6a3d23

Time (s): cpu = 00:01:57 ; elapsed = 00:01:37 . Memory (MB): peak = 4865.785 ; gain = 1884.973 ; free physical = 1570 ; free virtual = 10176
INFO: [Common 17-83] Releasing license: Implementation
49 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:02:46 ; elapsed = 00:02:03 . Memory (MB): peak = 4865.785 ; gain = 1957.008 ; free physical = 1570 ; free virtual = 10176
INFO: [Common 17-1381] The checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/impl_1/design_1_wrapper_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:11 ; elapsed = 00:00:14 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1557 ; free virtual = 10173
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
Command: report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Coretcl 2-168] The results of DRC are in file /home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/impl_1/design_1_wrapper_drc_opted.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:12 ; elapsed = 00:00:05 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1547 ; free virtual = 10169
INFO: [Chipscope 16-241] No debug cores found in the current design.
Before running the implement_debug_core command, either use the Set Up Debug wizard (GUI mode)
or use the create_debug_core and connect_debug_core Tcl commands to insert debug cores into the design.
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xczu9eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu9eg'
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 8 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00.11 ; elapsed = 00:00:00.11 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1545 ; free virtual = 10167
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 546353c0

Time (s): cpu = 00:00:00.15 ; elapsed = 00:00:00.19 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1545 ; free virtual = 10167
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00.09 ; elapsed = 00:00:00.09 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1555 ; free virtual = 10178

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
INFO: [Timing 38-35] Done setting XDC timing constraints.
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: e75a6f25

Time (s): cpu = 00:00:49 ; elapsed = 00:00:17 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1420 ; free virtual = 10046

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: f5ab725f

Time (s): cpu = 00:01:29 ; elapsed = 00:00:31 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1302 ; free virtual = 9932

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: f5ab725f

Time (s): cpu = 00:01:30 ; elapsed = 00:00:32 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1302 ; free virtual = 9932
Phase 1 Placer Initialization | Checksum: f5ab725f

Time (s): cpu = 00:01:30 ; elapsed = 00:00:32 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1302 ; free virtual = 9932

Phase 2 Global Placement
Phase 2 Global Placement | Checksum: 1e6d96477

Time (s): cpu = 00:02:39 ; elapsed = 00:01:07 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1180 ; free virtual = 9814

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 1e6d96477

Time (s): cpu = 00:02:40 ; elapsed = 00:01:07 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1180 ; free virtual = 9813

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 214b333f6

Time (s): cpu = 00:02:50 ; elapsed = 00:01:13 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1175 ; free virtual = 9810

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 1ef205e25

Time (s): cpu = 00:02:51 ; elapsed = 00:01:13 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1174 ; free virtual = 9809

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 167f989d3

Time (s): cpu = 00:02:52 ; elapsed = 00:01:13 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1174 ; free virtual = 9809

Phase 3.5 Small Shape Clustering
Phase 3.5 Small Shape Clustering | Checksum: 1a353a100

Time (s): cpu = 00:02:55 ; elapsed = 00:01:17 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1139 ; free virtual = 9774

Phase 3.6 DP Optimization
Phase 3.6 DP Optimization | Checksum: 1a2a29b81

Time (s): cpu = 00:03:13 ; elapsed = 00:01:23 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1134 ; free virtual = 9769

Phase 3.7 Flow Legalize Slice Clusters
Phase 3.7 Flow Legalize Slice Clusters | Checksum: 1cff2bf0d

Time (s): cpu = 00:03:15 ; elapsed = 00:01:25 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1135 ; free virtual = 9771

Phase 3.8 Slice Area Swap
Phase 3.8 Slice Area Swap | Checksum: 186c2b75d

Time (s): cpu = 00:03:17 ; elapsed = 00:01:27 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1107 ; free virtual = 9742

Phase 3.9 Commit Slice Clusters
Phase 3.9 Commit Slice Clusters | Checksum: 14960a8bc

Time (s): cpu = 00:03:30 ; elapsed = 00:01:31 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1119 ; free virtual = 9754

Phase 3.10 Re-assign LUT pins
Phase 3.10 Re-assign LUT pins | Checksum: 15bcdbd8e

Time (s): cpu = 00:03:32 ; elapsed = 00:01:33 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1121 ; free virtual = 9756

Phase 3.11 Pipeline Register Optimization
Phase 3.11 Pipeline Register Optimization | Checksum: 15bcdbd8e

Time (s): cpu = 00:03:33 ; elapsed = 00:01:33 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1130 ; free virtual = 9765
Phase 3 Detail Placement | Checksum: 15bcdbd8e

Time (s): cpu = 00:03:33 ; elapsed = 00:01:34 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1130 ; free virtual = 9765

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 205ab3032

Phase 4.1.1.1 BUFG Insertion
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 8 CPUs
INFO: [Place 46-35] Processed net design_1_i/proc_sys_reset_0/U0/peripheral_aresetn[0], inserted BUFG to drive 3705 loads.
INFO: [Place 46-35] Processed net design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/ap_CS_fsm_state38, inserted BUFG to drive 1824 loads.
INFO: [Place 46-35] Processed net design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/ap_CS_fsm_state39, inserted BUFG to drive 1184 loads.
INFO: [Place 46-35] Processed net design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/ap_NS_fsm190_out, inserted BUFG to drive 1051 loads.
INFO: [Place 46-31] BUFG insertion identified 4 candidate nets, 4 success, 0 skipped for placement/routing, 0 skipped for timing, 0 skipped for netlist change reason.
Phase 4.1.1.1 BUFG Insertion | Checksum: 148daa358

Time (s): cpu = 00:04:34 ; elapsed = 00:01:52 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1131 ; free virtual = 9767
INFO: [Place 30-746] Post Placement Timing Summary WNS=5.411. For the most accurate timing information please run report_timing.
Phase 4.1.1 Post Placement Optimization | Checksum: 1c507c8c7

Time (s): cpu = 00:04:34 ; elapsed = 00:01:52 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1132 ; free virtual = 9768
Phase 4.1 Post Commit Optimization | Checksum: 1c507c8c7

Time (s): cpu = 00:04:35 ; elapsed = 00:01:53 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1132 ; free virtual = 9768

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 1c507c8c7

Time (s): cpu = 00:04:35 ; elapsed = 00:01:53 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1144 ; free virtual = 9780

Phase 4.3 Placer Reporting
Phase 4.3 Placer Reporting | Checksum: 274f8e283

Time (s): cpu = 00:04:44 ; elapsed = 00:02:02 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1124 ; free virtual = 9759

Phase 4.4 Final Placement Cleanup
Phase 4.4 Final Placement Cleanup | Checksum: 22dbe9f24

Time (s): cpu = 00:04:45 ; elapsed = 00:02:02 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1124 ; free virtual = 9759
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 22dbe9f24

Time (s): cpu = 00:04:45 ; elapsed = 00:02:03 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1124 ; free virtual = 9759
Ending Placer Task | Checksum: 19cb268b5

Time (s): cpu = 00:04:45 ; elapsed = 00:02:03 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1241 ; free virtual = 9877
INFO: [Common 17-83] Releasing license: Implementation
75 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:04:53 ; elapsed = 00:02:08 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1241 ; free virtual = 9877
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:07 ; elapsed = 00:00:03 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1139 ; free virtual = 9853
INFO: [Common 17-1381] The checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/impl_1/design_1_wrapper_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:16 ; elapsed = 00:00:15 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1218 ; free virtual = 9871
INFO: [runtcl-4] Executing : report_io -file design_1_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00.24 ; elapsed = 00:00:00.35 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1191 ; free virtual = 9845
INFO: [runtcl-4] Executing : report_utilization -file design_1_wrapper_utilization_placed.rpt -pb design_1_wrapper_utilization_placed.pb
report_utilization: Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1217 ; free virtual = 9870
INFO: [runtcl-4] Executing : report_control_sets -verbose -file design_1_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00.15 ; elapsed = 00:00:00.23 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 1216 ; free virtual = 9870
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xczu9eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu9eg'
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 8 CPUs
Checksum: PlaceDB: 3a6acffc ConstDB: 0 ShapeSum: b2567efd RouteDB: aff119bc

Phase 1 Build RT Design
Phase 1 Build RT Design | Checksum: 9ca979c6

Time (s): cpu = 00:01:10 ; elapsed = 00:00:51 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 952 ; free virtual = 9613
Post Restoration Checksum: NetGraph: d5b075f NumContArr: dee7ad78 Constraints: cd6553fb Timing: 0

Phase 2 Router Initialization

Phase 2.1 Create Timer
Phase 2.1 Create Timer | Checksum: 1b9a808d2

Time (s): cpu = 00:01:12 ; elapsed = 00:00:54 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 938 ; free virtual = 9600

Phase 2.2 Fix Topology Constraints
Phase 2.2 Fix Topology Constraints | Checksum: 1b9a808d2

Time (s): cpu = 00:01:13 ; elapsed = 00:00:54 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 876 ; free virtual = 9540

Phase 2.3 Pre Route Cleanup
Phase 2.3 Pre Route Cleanup | Checksum: 1b9a808d2

Time (s): cpu = 00:01:13 ; elapsed = 00:00:54 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 876 ; free virtual = 9540

Phase 2.4 Global Clock Net Routing
 Number of Nodes with overlaps = 0
Phase 2.4 Global Clock Net Routing | Checksum: 71911081

Time (s): cpu = 00:01:15 ; elapsed = 00:00:56 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 846 ; free virtual = 9511

Phase 2.5 Update Timing
Phase 2.5 Update Timing | Checksum: 194bf5323

Time (s): cpu = 00:02:20 ; elapsed = 00:01:14 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 852 ; free virtual = 9517
INFO: [Route 35-416] Intermediate Timing Summary | WNS=5.609  | TNS=0.000  | WHS=-0.072 | THS=-6.822 |

Phase 2 Router Initialization | Checksum: 16881091b

Time (s): cpu = 00:03:00 ; elapsed = 00:01:21 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 830 ; free virtual = 9496

Phase 3 Initial Routing
Phase 3 Initial Routing | Checksum: 152304e7a

Time (s): cpu = 00:03:24 ; elapsed = 00:01:28 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 806 ; free virtual = 9472

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 8258
 Number of Nodes with overlaps = 755
 Number of Nodes with overlaps = 73
 Number of Nodes with overlaps = 12
 Number of Nodes with overlaps = 6
 Number of Nodes with overlaps = 5
 Number of Nodes with overlaps = 2
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=4.657  | TNS=0.000  | WHS=-0.018 | THS=-0.018 |

Phase 4.1 Global Iteration 0 | Checksum: 1bc454cb7

Time (s): cpu = 00:06:30 ; elapsed = 00:02:45 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 800 ; free virtual = 9465

Phase 4.2 Additional Iteration for Hold
Phase 4.2 Additional Iteration for Hold | Checksum: 26ed0a72b

Time (s): cpu = 00:06:31 ; elapsed = 00:02:45 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 800 ; free virtual = 9465
Phase 4 Rip-up And Reroute | Checksum: 26ed0a72b

Time (s): cpu = 00:06:31 ; elapsed = 00:02:45 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 800 ; free virtual = 9465

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp

Phase 5.1.1 Update Timing
Phase 5.1.1 Update Timing | Checksum: 143c23e62

Time (s): cpu = 00:06:58 ; elapsed = 00:02:52 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 805 ; free virtual = 9470
INFO: [Route 35-416] Intermediate Timing Summary | WNS=4.657  | TNS=0.000  | WHS=0.010  | THS=0.000  |

Phase 5.1 Delay CleanUp | Checksum: 143c23e62

Time (s): cpu = 00:06:58 ; elapsed = 00:02:52 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 812 ; free virtual = 9477

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 143c23e62

Time (s): cpu = 00:06:58 ; elapsed = 00:02:52 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 812 ; free virtual = 9477
Phase 5 Delay and Skew Optimization | Checksum: 143c23e62

Time (s): cpu = 00:06:58 ; elapsed = 00:02:52 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 812 ; free virtual = 9477

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 13be7b2c3

Time (s): cpu = 00:07:20 ; elapsed = 00:02:58 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 811 ; free virtual = 9477
INFO: [Route 35-416] Intermediate Timing Summary | WNS=4.657  | TNS=0.000  | WHS=0.010  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 12dd1d17a

Time (s): cpu = 00:07:20 ; elapsed = 00:02:58 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 811 ; free virtual = 9477
Phase 6 Post Hold Fix | Checksum: 12dd1d17a

Time (s): cpu = 00:07:20 ; elapsed = 00:02:58 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 811 ; free virtual = 9477

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 1.96526 %
  Global Horizontal Routing Utilization  = 2.18789 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 1775aa8cf

Time (s): cpu = 00:07:21 ; elapsed = 00:02:59 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 808 ; free virtual = 9474

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 1775aa8cf

Time (s): cpu = 00:07:21 ; elapsed = 00:02:59 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 807 ; free virtual = 9472

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 1775aa8cf

Time (s): cpu = 00:07:24 ; elapsed = 00:03:02 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 803 ; free virtual = 9468

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=4.657  | TNS=0.000  | WHS=0.010  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 10 Post Router Timing | Checksum: 1775aa8cf

Time (s): cpu = 00:07:24 ; elapsed = 00:03:02 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 808 ; free virtual = 9473
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:07:24 ; elapsed = 00:03:02 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 896 ; free virtual = 9561

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
95 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:07:35 ; elapsed = 00:03:07 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 896 ; free virtual = 9561
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:08 ; elapsed = 00:00:03 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 785 ; free virtual = 9545
INFO: [Common 17-1381] The checkpoint '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/impl_1/design_1_wrapper_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:16 ; elapsed = 00:00:15 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 868 ; free virtual = 9554
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
Command: report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Coretcl 2-168] The results of DRC are in file /home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/impl_1/design_1_wrapper_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:23 ; elapsed = 00:00:06 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 825 ; free virtual = 9512
INFO: [runtcl-4] Executing : report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 8 threads
INFO: [Coretcl 2-1520] The results of Report Methodology are in file /home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/impl_1/design_1_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:01:28 ; elapsed = 00:00:21 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 554 ; free virtual = 9241
INFO: [runtcl-4] Executing : report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
Command: report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
107 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:01:02 ; elapsed = 00:00:34 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 539 ; free virtual = 9238
INFO: [runtcl-4] Executing : report_route_status -file design_1_wrapper_route_status.rpt -pb design_1_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -file design_1_wrapper_timing_summary_routed.rpt -rpx design_1_wrapper_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -2, Temperature grade: E, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 8 CPUs
INFO: [runtcl-4] Executing : report_incremental_reuse -file design_1_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-545] No incremental reuse to report, no incremental placement and routing data was found.
INFO: [runtcl-4] Executing : report_clock_utilization -file design_1_wrapper_clock_utilization_routed.rpt
report_clock_utilization: Time (s): cpu = 00:00:42 ; elapsed = 00:00:43 . Memory (MB): peak = 4865.785 ; gain = 0.000 ; free physical = 584 ; free virtual = 9260
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xczu9eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu9eg'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 8 threads
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U11/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U11/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U11/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U11/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U13/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U13/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U13/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U13/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U14/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U14/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U14/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U14/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U15/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U15/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U15/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U15/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U16/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U16/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U16/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U16/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U19/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U19/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U19/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U19/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U21/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U21/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U21/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U21/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U22/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U22/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U22/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U22/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U23/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U23/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U23/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U23/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U27/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U27/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U27/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U27/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U29/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U29/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U29/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U29/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U3/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U3/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U3/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U3/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U30/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U30/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U30/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U30/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U31/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U31/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U31/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U31/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U32/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U32/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U32/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U32/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U5/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U5/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U5/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U5/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U6/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U6/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U6/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U6/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U7/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U7/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U7/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U7/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U10/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U10/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U10/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U10/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U18/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U18/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U18/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U18/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U2/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U2/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U2/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U2/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U20/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U20/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U20/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U20/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U26/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U26/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U26/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U26/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U4/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U4/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U4/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U4/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U1/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U1/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U1/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U1/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U17/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U17/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U17/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U17/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U24/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U24/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U24/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U24/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U8/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U8/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U8/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U8/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U12/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U12/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U12/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U12/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U25/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U25/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U25/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U25/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U28/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U28/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U28/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U28/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U9/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0 input design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U9/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U9/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product input design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U9/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U1/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U1/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U1/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U1/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U12/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U12/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U12/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U12/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U13/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U13/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U13/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U13/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U16/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U16/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U16/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U16/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U17/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U17/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U17/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U17/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U20/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U20/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U20/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U20/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U21/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U21/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U21/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U21/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U24/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U24/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U24/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U24/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U25/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U25/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U25/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U25/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U28/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U28/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U28/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U28/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U29/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U29/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U29/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U29/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U32/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U32/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U32/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U32/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U33/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U33/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U33/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U33/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U36/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U36/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U36/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U36/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U37/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U37/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U37/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U37/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U4/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U4/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U4/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U4/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U40/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U40/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U40/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U40/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U41/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U41/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U41/decode_start_f2r_bkb_MulnS_0_U/tmp_product input design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U41/decode_start_f2r_bkb_MulnS_0_U/tmp_product/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
INFO: [Common 17-14] Message 'DRC DPIP-2' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U11/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U11/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U13/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U13/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U14/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U14/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U15/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U15/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U16/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U16/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U19/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U19/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U21/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U21/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U22/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U22/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U23/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U23/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U27/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U27/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U29/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U29/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U3/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U3/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U30/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U30/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U31/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U31/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U32/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U32/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U5/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U5/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U6/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U6/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U7/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U7/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U10/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U10/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U18/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U18/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U2/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U2/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U20/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U20/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U26/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U26/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U4/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U4/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U1/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U1/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U17/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U17/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U24/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U24/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U8/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U8/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U12/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U12/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U25/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U25/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U28/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U28/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U9/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product output design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U9/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U1/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U1/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U12/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U12/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U13/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U13/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U16/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U16/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U17/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U17/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U20/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U20/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U21/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U21/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U24/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U24/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U25/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U25/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U28/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U28/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U29/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U29/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U32/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U32/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U33/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U33/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U36/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U36/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U37/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U37/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U4/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U4/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U40/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U40/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U41/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U41/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U44/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U44/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U45/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U45/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U48/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U48/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U49/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U49/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U5/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U5/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U52/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U52/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U53/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U53/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U56/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U56/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U57/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U57/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U60/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U60/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U61/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U61/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U64/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U64/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U8/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U8/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U9/decode_start_f2r_bkb_MulnS_0_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U9/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U10/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U10/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U14/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U14/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U18/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U18/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U2/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U2/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U22/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U22/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U26/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U26/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U30/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U30/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U34/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U34/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U38/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U38/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U42/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U42/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U46/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U46/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U50/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U50/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U54/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U54/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U58/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U58/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U6/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U6/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U62/decode_start_f2r_cud_MulnS_1_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_cud_U62/decode_start_f2r_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U11/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U11/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U15/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U15/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U19/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U19/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U23/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U23/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U27/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U27/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U3/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U3/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U31/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U31/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U35/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U35/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U39/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U39/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U43/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U43/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U47/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U47/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U51/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U51/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U55/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U55/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U59/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U59/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U63/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U63/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U7/decode_start_f2r_dEe_MulnS_2_U/tmp_product output design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_dEe_U7/decode_start_f2r_dEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U11/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U11/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U11/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U11/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U13/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U13/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U13/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U13/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U14/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U14/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U14/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U14/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U15/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U15/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U15/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U15/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U16/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U16/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U16/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U16/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U19/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U19/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U19/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U19/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U21/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U21/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U21/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U21/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U22/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U22/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U22/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U22/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U23/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U23/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U23/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U23/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U27/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U27/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U27/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U27/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U29/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U29/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U29/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U29/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U3/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U3/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U3/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U3/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U30/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U30/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U30/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U30/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U31/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U31/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U31/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U31/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U32/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U32/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U32/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U32/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U5/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U5/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U5/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U5/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U6/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U6/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U6/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U6/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U7/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U7/ChenIDct_mul_10nsdEe_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U7/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10nsdEe_U7/ChenIDct_mul_10nsdEe_MulnS_2_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U10/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U10/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U10/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U10/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U18/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U18/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U18/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U18/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U2/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U2/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U2/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U2/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U20/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U20/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U20/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U20/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U26/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U26/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U26/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U26/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U4/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U4/ChenIDct_mul_10s_cud_MulnS_1_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U4/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_10s_cud_U4/ChenIDct_mul_10s_cud_MulnS_1_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U1/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U1/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U1/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U1/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U17/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U17/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U17/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U17/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U24/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U24/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U24/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U24/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U8/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U8/ChenIDct_mul_8ns_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U8/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_8ns_bkb_U8/ChenIDct_mul_8ns_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U12/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U12/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U12/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U12/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U25/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U25/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U25/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U25/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U28/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U28/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U28/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U28/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U9/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0 multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U9/ChenIDct_mul_9ns_eOg_MulnS_3_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U9/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product multiplier stage design_1_i/ChenIDct_0/inst/ChenIDct_mul_9ns_eOg_U9/ChenIDct_mul_9ns_eOg_MulnS_3_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U1/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U1/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U1/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U1/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U12/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U12/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U12/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U12/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U13/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U13/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U13/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U13/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U16/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U16/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U16/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U16/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U17/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U17/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U17/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U17/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U20/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U20/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U20/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U20/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U21/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U21/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U21/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U21/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U24/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U24/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U24/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U24/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U25/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U25/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U25/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U25/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U28/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U28/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U28/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U28/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U29/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U29/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U29/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U29/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U32/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U32/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U32/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U32/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U33/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U33/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U33/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U33/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U36/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U36/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U36/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U36/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U37/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U37/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U37/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U37/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U4/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U4/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U4/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U4/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U40/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U40/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U40/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U40/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U41/decode_start_f2r_bkb_MulnS_0_U/p_reg__0 multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U41/decode_start_f2r_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U41/decode_start_f2r_bkb_MulnS_0_U/tmp_product multiplier stage design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/decode_start_f2r_bkb_U41/decode_start_f2r_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Common 17-14] Message 'DRC DPOP-4' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/ap_NS_fsm190_out_bufg_place is a gated clock net sourced by a combinational pin design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/ap_CS_fsm[30]_i_1/O, cell design_1_i/decode_start_f2r_vectorPh_s2e_forBody96Preheader_0/inst/ap_CS_fsm[30]_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC RTSTAT-10] No routable loads: 15 net(s) have no routable loads. The problem bus(es) and/or net(s) are design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/user_valid, design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/user_valid, and design_1_i/axi_interconnect_master/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/user_valid.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 482 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Project 1-821] Please set project.enableDesignId to be 'true'.
INFO: [Designutils 20-2272] Running write_bitstream with 8 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./design_1_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-118] WebTalk data collection is enabled (User setting is ON. Install Setting is ON.).
INFO: [Common 17-186] '/home/giorgio/workspace/jpeg-rs-clean/sys/jpeg-rs/impl_1/usage_statistics_webtalk.xml' has been successfully sent to Xilinx on Tue May  1 18:21:14 2018. For additional details about this file, please refer to the WebTalk help file at /home/tools/Xilinx/Vivado/2017.4/doc/webtalk_introduction.html.
INFO: [Common 17-83] Releasing license: Implementation
127 Infos, 298 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:49 ; elapsed = 00:02:42 . Memory (MB): peak = 5255.285 ; gain = 389.500 ; free physical = 616 ; free virtual = 9211
INFO: [Common 17-206] Exiting Vivado at Tue May  1 18:21:15 2018...

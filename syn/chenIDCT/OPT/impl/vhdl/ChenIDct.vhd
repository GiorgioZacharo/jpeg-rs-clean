-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ChenIDct is
generic (
    C_M_AXI_BUS_SRC_DST_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_BUS_SRC_DST_ID_WIDTH : INTEGER := 1;
    C_M_AXI_BUS_SRC_DST_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BUS_SRC_DST_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_BUS_SRC_DST_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BUS_SRC_DST_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BUS_SRC_DST_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_BUS_SRC_DST_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_BUS_CTRL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_BUS_CTRL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_BUS_SRC_DST_USER_VALUE : INTEGER := 0;
    C_M_AXI_BUS_SRC_DST_PROT_VALUE : INTEGER := 0;
    C_M_AXI_BUS_SRC_DST_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_BUS_SRC_DST_AWVALID : OUT STD_LOGIC;
    m_axi_BUS_SRC_DST_AWREADY : IN STD_LOGIC;
    m_axi_BUS_SRC_DST_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_BUS_SRC_DST_ADDR_WIDTH-1 downto 0);
    m_axi_BUS_SRC_DST_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_BUS_SRC_DST_ID_WIDTH-1 downto 0);
    m_axi_BUS_SRC_DST_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_BUS_SRC_DST_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_BUS_SRC_DST_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_BUS_SRC_DST_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_BUS_SRC_DST_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_BUS_SRC_DST_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_BUS_SRC_DST_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_BUS_SRC_DST_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_BUS_SRC_DST_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_BUS_SRC_DST_AWUSER_WIDTH-1 downto 0);
    m_axi_BUS_SRC_DST_WVALID : OUT STD_LOGIC;
    m_axi_BUS_SRC_DST_WREADY : IN STD_LOGIC;
    m_axi_BUS_SRC_DST_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_BUS_SRC_DST_DATA_WIDTH-1 downto 0);
    m_axi_BUS_SRC_DST_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_BUS_SRC_DST_DATA_WIDTH/8-1 downto 0);
    m_axi_BUS_SRC_DST_WLAST : OUT STD_LOGIC;
    m_axi_BUS_SRC_DST_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_BUS_SRC_DST_ID_WIDTH-1 downto 0);
    m_axi_BUS_SRC_DST_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_BUS_SRC_DST_WUSER_WIDTH-1 downto 0);
    m_axi_BUS_SRC_DST_ARVALID : OUT STD_LOGIC;
    m_axi_BUS_SRC_DST_ARREADY : IN STD_LOGIC;
    m_axi_BUS_SRC_DST_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_BUS_SRC_DST_ADDR_WIDTH-1 downto 0);
    m_axi_BUS_SRC_DST_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_BUS_SRC_DST_ID_WIDTH-1 downto 0);
    m_axi_BUS_SRC_DST_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_BUS_SRC_DST_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_BUS_SRC_DST_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_BUS_SRC_DST_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_BUS_SRC_DST_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_BUS_SRC_DST_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_BUS_SRC_DST_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_BUS_SRC_DST_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_BUS_SRC_DST_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_BUS_SRC_DST_ARUSER_WIDTH-1 downto 0);
    m_axi_BUS_SRC_DST_RVALID : IN STD_LOGIC;
    m_axi_BUS_SRC_DST_RREADY : OUT STD_LOGIC;
    m_axi_BUS_SRC_DST_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_BUS_SRC_DST_DATA_WIDTH-1 downto 0);
    m_axi_BUS_SRC_DST_RLAST : IN STD_LOGIC;
    m_axi_BUS_SRC_DST_RID : IN STD_LOGIC_VECTOR (C_M_AXI_BUS_SRC_DST_ID_WIDTH-1 downto 0);
    m_axi_BUS_SRC_DST_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUS_SRC_DST_RUSER_WIDTH-1 downto 0);
    m_axi_BUS_SRC_DST_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_BUS_SRC_DST_BVALID : IN STD_LOGIC;
    m_axi_BUS_SRC_DST_BREADY : OUT STD_LOGIC;
    m_axi_BUS_SRC_DST_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_BUS_SRC_DST_BID : IN STD_LOGIC_VECTOR (C_M_AXI_BUS_SRC_DST_ID_WIDTH-1 downto 0);
    m_axi_BUS_SRC_DST_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUS_SRC_DST_BUSER_WIDTH-1 downto 0);
    s_axi_BUS_CTRL_AWVALID : IN STD_LOGIC;
    s_axi_BUS_CTRL_AWREADY : OUT STD_LOGIC;
    s_axi_BUS_CTRL_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_BUS_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_BUS_CTRL_WVALID : IN STD_LOGIC;
    s_axi_BUS_CTRL_WREADY : OUT STD_LOGIC;
    s_axi_BUS_CTRL_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_BUS_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_BUS_CTRL_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_BUS_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_BUS_CTRL_ARVALID : IN STD_LOGIC;
    s_axi_BUS_CTRL_ARREADY : OUT STD_LOGIC;
    s_axi_BUS_CTRL_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_BUS_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_BUS_CTRL_RVALID : OUT STD_LOGIC;
    s_axi_BUS_CTRL_RREADY : IN STD_LOGIC;
    s_axi_BUS_CTRL_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_BUS_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_BUS_CTRL_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_BUS_CTRL_BVALID : OUT STD_LOGIC;
    s_axi_BUS_CTRL_BREADY : IN STD_LOGIC;
    s_axi_BUS_CTRL_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of ChenIDct is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "ChenIDct,hls_ip_2017_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvb1156-2-i,HLS_INPUT_CLOCK=3.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.625000,HLS_SYN_LAT=584,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=128,HLS_SYN_FF=13222,HLS_SYN_LUT=12141}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (66 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (66 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (66 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (66 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (66 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (66 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (66 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (66 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (66 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (66 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv40_64 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000001100100";
    constant ap_const_lv41_1FFFFFFFE0A : STD_LOGIC_VECTOR (40 downto 0) := "11111111111111111111111111111111000001010";
    constant ap_const_lv41_1AA : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000110101010";
    constant ap_const_lv41_1FFFFFFFEE4 : STD_LOGIC_VECTOR (40 downto 0) := "11111111111111111111111111111111011100100";
    constant ap_const_lv41_11C : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000100011100";
    constant ap_const_lv41_1F6 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000111110110";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv41_16A : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000101101010";
    constant ap_const_lv41_C4 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000011000100";
    constant ap_const_lv41_1FFFFFFFE27 : STD_LOGIC_VECTOR (40 downto 0) := "11111111111111111111111111111111000100111";
    constant ap_const_lv41_1D9 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000111011001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_FFFFFFF8 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111000";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal x : STD_LOGIC_VECTOR (63 downto 0);
    signal y : STD_LOGIC_VECTOR (63 downto 0);
    signal BUS_SRC_DST_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal BUS_SRC_DST_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal exitcond2_reg_6579 : STD_LOGIC_VECTOR (0 downto 0);
    signal BUS_SRC_DST_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal exitcond8_fu_4033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal BUS_SRC_DST_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal BUS_SRC_DST_blk_n_W : STD_LOGIC;
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal exitcond3_reg_7307 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp2_iter1_exitcond3_reg_7307 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal exitcond4_reg_7330 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal ap_block_pp4_stage0 : BOOLEAN;
    signal exitcond5_reg_7824 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond1_reg_6565 : STD_LOGIC_VECTOR (0 downto 0);
    signal BUS_SRC_DST_AWVALID : STD_LOGIC;
    signal BUS_SRC_DST_AWREADY : STD_LOGIC;
    signal BUS_SRC_DST_WVALID : STD_LOGIC;
    signal BUS_SRC_DST_WREADY : STD_LOGIC;
    signal BUS_SRC_DST_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal BUS_SRC_DST_ARVALID : STD_LOGIC;
    signal BUS_SRC_DST_ARREADY : STD_LOGIC;
    signal BUS_SRC_DST_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal BUS_SRC_DST_RVALID : STD_LOGIC;
    signal BUS_SRC_DST_RREADY : STD_LOGIC;
    signal BUS_SRC_DST_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal BUS_SRC_DST_RLAST : STD_LOGIC;
    signal BUS_SRC_DST_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal BUS_SRC_DST_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal BUS_SRC_DST_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal BUS_SRC_DST_BVALID : STD_LOGIC;
    signal BUS_SRC_DST_BREADY : STD_LOGIC;
    signal BUS_SRC_DST_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal BUS_SRC_DST_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal BUS_SRC_DST_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_reg_483 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_pp0_iter1_indvar_reg_483 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state9_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar1_reg_495 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_pp1_iter1_indvar1_reg_495 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state19_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state20_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal indvar2_reg_530 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar3_reg_936 : STD_LOGIC_VECTOR (5 downto 0);
    signal inp3_buf_15_1_1_reg_947 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_15_0_1_reg_958 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_14_1_1_reg_969 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_14_0_1_reg_980 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_13_1_1_reg_991 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_13_0_1_reg_1002 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_12_1_1_reg_1013 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_12_0_1_reg_1024 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_11_1_1_reg_1035 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_11_0_1_reg_1046 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_10_1_1_reg_1057 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_10_0_1_reg_1068 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_9_1_1_reg_1079 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_9_0_1_reg_1090 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_8_1_1_reg_1101 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_8_0_1_reg_1112 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_7_1_1_reg_1123 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_7_0_1_reg_1134 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_6_1_1_reg_1145 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_6_0_1_reg_1156 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_5_1_1_reg_1167 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_5_0_1_reg_1178 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_4_1_1_reg_1189 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_4_0_1_reg_1200 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_3_1_1_reg_1211 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_3_0_1_reg_1222 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_2_1_1_reg_1233 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_2_0_1_reg_1244 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_1_1_1_reg_1255 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_1_0_1_reg_1266 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_0_1_1_reg_1277 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_0_0_1_reg_1288 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar4_reg_3422 : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_3433 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state64_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state65_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state66_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal inp1_buf_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_3438 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal inp1_buf_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal reg_3443 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp2_buf_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_3448 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal inp2_buf_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_state48_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state49_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state50_pp2_stage0_iter2 : BOOLEAN;
    signal ap_sig_ioackin_BUS_SRC_DST_WREADY : STD_LOGIC;
    signal ap_block_state50_io : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal BUS_SRC_DST_addr_reg_6551 : STD_LOGIC_VECTOR (63 downto 0);
    signal BUS_SRC_DST_addr_1_reg_6559 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond1_fu_3494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_exitcond1_reg_6565 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next_fu_3500_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_next_reg_6569 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal BUS_SRC_DST_addr_1_r_1_reg_6574 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond2_fu_3511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp1_iter1_exitcond2_reg_6579 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next1_fu_3517_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_next1_reg_6583 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal i_cast1_fu_3528_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_cast1_reg_6588 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal i_3_fu_3538_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_3_reg_6596 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_fu_3544_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_reg_6601 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond9_fu_3532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_3550_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_reg_6606 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_3559_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_reg_6616 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_fu_3569_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_reg_6626 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_3577_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_reg_6636 : STD_LOGIC_VECTOR (63 downto 0);
    signal inp1_buf_load_5_reg_6646 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal inp1_buf_load_7_reg_6651 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_3582_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_reg_6656 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal tmp_6_fu_3593_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_reg_6666 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_fu_3601_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_reg_6671 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_cast_fu_3650_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_24_cast_fu_3660_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_9_fu_3702_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_reg_6713 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_3710_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_reg_6723 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_3630_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_15_reg_6733 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_3644_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_16_reg_6738 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_3654_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_18_reg_6743 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_3664_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_19_reg_6748 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_3670_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_21_reg_6753 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_3676_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_22_reg_6758 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_3682_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_24_reg_6763 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_3688_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_25_reg_6768 : STD_LOGIC_VECTOR (39 downto 0);
    signal c0_reg_6773 : STD_LOGIC_VECTOR (31 downto 0);
    signal c1_reg_6779 : STD_LOGIC_VECTOR (31 downto 0);
    signal c2_reg_6785 : STD_LOGIC_VECTOR (31 downto 0);
    signal c3_reg_6791 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_3791_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_reg_6797 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_3797_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_reg_6802 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal tmp_44_cast_fu_3824_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_46_cast_fu_3834_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal a0_6_fu_3856_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a0_6_reg_6824 : STD_LOGIC_VECTOR (31 downto 0);
    signal a3_6_fu_3868_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a3_6_reg_6830 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_fu_3872_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_reg_6836 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_3878_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_reg_6841 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal a1_1_reg_6851 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3828_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_31_reg_6857 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_3838_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_32_reg_6862 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_3844_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_34_reg_6867 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_3850_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_35_reg_6872 : STD_LOGIC_VECTOR (40 downto 0);
    signal a0_1_reg_6887 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal a3_1_reg_6893 : STD_LOGIC_VECTOR (31 downto 0);
    signal b1_1_fu_3959_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b1_1_reg_6899 : STD_LOGIC_VECTOR (31 downto 0);
    signal b2_1_fu_3964_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b2_1_reg_6905 : STD_LOGIC_VECTOR (31 downto 0);
    signal c1_1_reg_6911 : STD_LOGIC_VECTOR (31 downto 0);
    signal c2_1_reg_6917 : STD_LOGIC_VECTOR (31 downto 0);
    signal b0_1_fu_3989_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b0_1_reg_6923 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal b3_1_fu_3993_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b3_1_reg_6929 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_4007_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_reg_6935 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_fu_4011_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_reg_6940 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_fu_4025_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_reg_6945 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal tmp_48_fu_4029_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_reg_6950 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_ioackin_BUS_SRC_DST_AWREADY : STD_LOGIC;
    signal ap_block_state36_io : BOOLEAN;
    signal i_4_fu_4039_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_4_reg_6959 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_50_fu_4049_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_50_reg_6964 : STD_LOGIC_VECTOR (5 downto 0);
    signal aptr_assign_15_sum1_fu_4057_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal aptr_assign_15_sum1_reg_6970 : STD_LOGIC_VECTOR (5 downto 0);
    signal aptr_1_reg_6975 : STD_LOGIC_VECTOR (5 downto 0);
    signal aptr_assign_13_sum2_fu_4068_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal aptr_assign_13_sum2_reg_6980 : STD_LOGIC_VECTOR (5 downto 0);
    signal aptr_3_reg_6985 : STD_LOGIC_VECTOR (5 downto 0);
    signal aptr_assign_13_sum2_s_fu_4079_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal aptr_assign_13_sum2_s_reg_6990 : STD_LOGIC_VECTOR (6 downto 0);
    signal a1_3_reg_6996 : STD_LOGIC_VECTOR (31 downto 0);
    signal aptr_5_reg_7001 : STD_LOGIC_VECTOR (5 downto 0);
    signal aptr_7_reg_7006 : STD_LOGIC_VECTOR (5 downto 0);
    signal aptr_reg_7011 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal aptr_2_reg_7016 : STD_LOGIC_VECTOR (5 downto 0);
    signal a2_3_reg_7021 : STD_LOGIC_VECTOR (31 downto 0);
    signal a3_3_reg_7026 : STD_LOGIC_VECTOR (31 downto 0);
    signal b0_2_reg_7032 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal b2_2_reg_7038 : STD_LOGIC_VECTOR (31 downto 0);
    signal aptr_4_reg_7043 : STD_LOGIC_VECTOR (5 downto 0);
    signal aptr_6_reg_7048 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_78_cast_fu_4167_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_80_cast_fu_4176_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_64_fu_4209_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_64_reg_7085 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_fu_4214_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_reg_7090 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_4149_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_52_reg_7095 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal grp_fu_4161_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_53_reg_7100 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_4170_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_55_reg_7105 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_4179_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_56_reg_7110 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_4185_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_58_reg_7115 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_4191_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_59_reg_7120 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_4197_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_61_reg_7125 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_4203_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_62_reg_7130 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_100_cast_fu_4228_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_102_cast_fu_4237_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal c0_2_reg_7152 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal c1_2_reg_7158 : STD_LOGIC_VECTOR (31 downto 0);
    signal c2_2_reg_7164 : STD_LOGIC_VECTOR (31 downto 0);
    signal c3_2_reg_7170 : STD_LOGIC_VECTOR (31 downto 0);
    signal a0_4_reg_7176 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_4231_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_68_reg_7182 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_4241_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_69_reg_7187 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_4247_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_71_reg_7192 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_4253_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_72_reg_7197 : STD_LOGIC_VECTOR (40 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal a2_4_reg_7207 : STD_LOGIC_VECTOR (31 downto 0);
    signal b0_3_fu_4370_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b0_3_reg_7213 : STD_LOGIC_VECTOR (31 downto 0);
    signal b3_3_fu_4375_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b3_3_reg_7219 : STD_LOGIC_VECTOR (31 downto 0);
    signal a0_7_fu_4380_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a0_7_reg_7225 : STD_LOGIC_VECTOR (31 downto 0);
    signal a3_7_fu_4392_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a3_7_reg_7231 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_74_fu_4396_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_74_reg_7237 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_76_fu_4402_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_76_reg_7242 : STD_LOGIC_VECTOR (31 downto 0);
    signal a1_4_reg_7247 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal tmp_82_fu_4446_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_reg_7263 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_85_fu_4450_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_85_reg_7268 : STD_LOGIC_VECTOR (31 downto 0);
    signal b1_3_fu_4454_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b1_3_reg_7273 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal b2_3_fu_4458_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b2_3_reg_7279 : STD_LOGIC_VECTOR (31 downto 0);
    signal c1_3_reg_7285 : STD_LOGIC_VECTOR (31 downto 0);
    signal c2_3_reg_7291 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_fu_4492_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_reg_7297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal tmp_84_fu_4496_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_84_reg_7302 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond3_fu_4500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next2_fu_4506_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal exitcond7_fu_4517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal i_5_fu_4523_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_5_reg_7325 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond4_fu_4529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp3_iter1_exitcond4_reg_7330 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next3_fu_4535_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal tmp_87_fu_4541_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_87_reg_7339 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp3_iter1_tmp_87_reg_7339 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_88_reg_7343 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp3_iter1_tmp_88_reg_7343 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_4809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal tmp_89_fu_4815_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_89_reg_7383 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_reg_7419 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_reg_7424 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_94_reg_7429 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_96_reg_7434 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_97_reg_7439 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_98_reg_7444 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_100_reg_7449 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_101_reg_7454 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_102_reg_7459 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_104_reg_7464 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_105_reg_7469 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_106_reg_7474 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_108_reg_7479 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_109_reg_7484 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_110_reg_7489 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_112_reg_7494 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_113_reg_7499 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_114_reg_7504 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_116_reg_7509 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_117_reg_7514 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_118_reg_7519 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_122_reg_7524 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_120_reg_7529 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_121_reg_7534 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_128_reg_7539 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_123_reg_7544 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_124_reg_7549 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_135_reg_7554 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_126_reg_7559 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_127_reg_7564 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_140_reg_7569 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_129_reg_7574 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_130_reg_7579 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_146_reg_7584 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_132_reg_7589 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_136_reg_7594 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_151_reg_7599 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_138_reg_7604 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_139_reg_7609 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_153_reg_7614 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_141_reg_7619 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_142_reg_7624 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_155_reg_7629 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_144_reg_7634 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_145_reg_7639 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_157_reg_7644 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_147_reg_7649 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_148_reg_7654 : STD_LOGIC_VECTOR (27 downto 0);
    signal k_s_fu_5847_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal k_s_reg_7659 : STD_LOGIC_VECTOR (5 downto 0);
    signal inp3_buf_0_1_4_fu_5876_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal inp3_buf_0_1_8_fu_5883_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_1_1_4_fu_5913_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_1_1_8_fu_5920_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_2_1_4_fu_5950_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_2_1_8_fu_5957_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_3_1_4_fu_5987_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_3_1_8_fu_5994_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_4_1_4_fu_6024_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_4_1_8_fu_6031_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_5_1_4_fu_6061_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_5_1_8_fu_6068_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_6_1_4_fu_6098_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_6_1_8_fu_6105_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_7_1_4_fu_6135_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_7_1_8_fu_6142_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_8_1_4_fu_6172_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_8_1_8_fu_6179_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_9_1_4_fu_6209_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_9_1_8_fu_6216_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_10_1_4_fu_6246_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_10_1_8_fu_6253_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_11_1_4_fu_6283_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_11_1_8_fu_6290_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_12_1_4_fu_6320_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_12_1_8_fu_6327_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_13_1_4_fu_6357_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_13_1_8_fu_6364_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_14_1_4_fu_6394_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_14_1_8_fu_6401_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_15_1_4_fu_6431_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_15_1_24_fu_6438_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond5_fu_6445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state70_pp4_stage0_iter0 : BOOLEAN;
    signal ap_block_state71_pp4_stage0_iter1 : BOOLEAN;
    signal ap_block_state71_io : BOOLEAN;
    signal ap_block_pp4_stage0_11001 : BOOLEAN;
    signal indvar_next4_fu_6451_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal tmp_149_fu_6481_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_149_reg_7833 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state9 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state19 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state48 : STD_LOGIC;
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal ap_block_pp4_stage0_subdone : BOOLEAN;
    signal ap_condition_pp4_exit_iter0_state70 : STD_LOGIC;
    signal inp1_buf_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal inp1_buf_ce0 : STD_LOGIC;
    signal inp1_buf_we0 : STD_LOGIC;
    signal inp1_buf_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal inp1_buf_ce1 : STD_LOGIC;
    signal inp2_buf_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal inp2_buf_ce0 : STD_LOGIC;
    signal inp2_buf_we0 : STD_LOGIC;
    signal inp2_buf_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp2_buf_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal inp2_buf_ce1 : STD_LOGIC;
    signal inp2_buf_we1 : STD_LOGIC;
    signal inp2_buf_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_indvar_phi_fu_487_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_indvar1_phi_fu_499_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_reg_507 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal i_1_reg_519 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal inp3_buf_15_1_3_reg_3027 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_15_1_reg_541 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal inp3_buf_15_0_3_reg_3039 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_15_0_reg_553 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_14_1_3_reg_3051 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_14_1_reg_565 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_14_0_3_reg_3063 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_14_0_reg_577 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_13_1_3_reg_3075 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_13_1_reg_589 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_13_0_3_reg_3087 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_13_0_reg_601 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_12_1_3_reg_3099 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_12_1_reg_613 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_12_0_3_reg_3111 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_12_0_reg_625 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_11_1_3_reg_3123 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_11_1_reg_637 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_11_0_3_reg_3135 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_11_0_reg_649 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_10_1_3_reg_3147 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_10_1_reg_661 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_10_0_3_reg_3159 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_10_0_reg_673 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_9_1_3_reg_3171 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_9_1_reg_685 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_9_0_3_reg_3183 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_9_0_reg_697 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_8_1_3_reg_3195 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_8_1_reg_709 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_8_0_3_reg_3207 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_8_0_reg_721 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_7_1_3_reg_3219 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_7_1_reg_733 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_7_0_3_reg_3231 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_7_0_reg_745 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_6_1_3_reg_3243 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_6_1_reg_757 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_6_0_3_reg_3255 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_6_0_reg_769 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_5_1_3_reg_3267 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_5_1_reg_781 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_5_0_3_reg_3279 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_5_0_reg_793 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_4_1_3_reg_3291 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_4_1_reg_805 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_4_0_3_reg_3303 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_4_0_reg_817 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_3_1_3_reg_3315 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_3_1_reg_829 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_3_0_3_reg_3327 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_3_0_reg_841 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_2_1_3_reg_3339 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_2_1_reg_853 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_2_0_3_reg_3351 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_2_0_reg_865 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_1_1_3_reg_3363 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_1_1_reg_877 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_1_0_3_reg_3375 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_1_0_reg_889 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_0_1_3_reg_3387 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_0_1_reg_901 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_0_0_s_reg_3399 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_0_0_reg_913 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_2_reg_925 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_inp3_buf_15_1_2_phi_fu_1303_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_15_0_s_phi_fu_1357_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_14_1_2_phi_fu_1411_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_14_0_s_phi_fu_1465_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_13_1_2_phi_fu_1519_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_13_0_s_phi_fu_1573_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_12_1_2_phi_fu_1627_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_12_0_s_phi_fu_1681_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_11_1_2_phi_fu_1735_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_11_0_s_phi_fu_1789_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_10_1_2_phi_fu_1843_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_10_0_s_phi_fu_1897_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_9_1_2_phi_fu_1951_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_9_0_s_phi_fu_2005_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_8_1_2_phi_fu_2059_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_8_0_s_phi_fu_2113_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_7_1_2_phi_fu_2167_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_7_0_s_phi_fu_2221_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_6_1_2_phi_fu_2275_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_6_0_s_phi_fu_2329_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_5_1_2_phi_fu_2383_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_5_0_s_phi_fu_2437_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_4_1_2_phi_fu_2491_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_4_0_s_phi_fu_2545_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_3_1_2_phi_fu_2599_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_3_0_s_phi_fu_2653_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_2_1_2_phi_fu_2707_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_2_0_s_phi_fu_2761_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_1_1_2_phi_fu_2815_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_1_0_s_phi_fu_2869_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_0_1_2_phi_fu_2923_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_inp3_buf_0_0_2_phi_fu_2977_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_15_1_5_fu_4793_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_15_1_2_reg_1299 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_15_1_7_fu_4801_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_15_0_s_reg_1353 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_14_1_2_reg_1407 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_14_1_5_fu_4553_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_14_0_s_reg_1461 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_15_1_22_fu_4561_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_13_1_2_reg_1515 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_13_1_5_fu_4569_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_13_0_s_reg_1569 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_15_1_21_fu_4577_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_12_1_2_reg_1623 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_12_1_5_fu_4585_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_12_0_s_reg_1677 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_15_1_20_fu_4593_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_11_1_2_reg_1731 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_11_1_5_fu_4601_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_11_0_s_reg_1785 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_15_1_19_fu_4609_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_10_1_2_reg_1839 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_10_1_5_fu_4617_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_10_0_s_reg_1893 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_15_1_18_fu_4625_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_9_1_2_reg_1947 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_9_1_5_fu_4633_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_9_0_s_reg_2001 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_15_1_17_fu_4641_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_8_1_2_reg_2055 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_8_1_5_fu_4649_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_8_0_s_reg_2109 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_15_1_16_fu_4657_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_7_1_2_reg_2163 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_7_1_5_fu_4665_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_7_0_s_reg_2217 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_15_1_15_fu_4673_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_6_1_2_reg_2271 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_6_1_5_fu_4681_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_6_0_s_reg_2325 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_15_1_14_fu_4689_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_5_1_2_reg_2379 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_5_1_5_fu_4697_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_5_0_s_reg_2433 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_15_1_13_fu_4705_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_4_1_2_reg_2487 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_4_1_5_fu_4713_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_4_0_s_reg_2541 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_15_1_12_fu_4721_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_3_1_2_reg_2595 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_3_1_5_fu_4729_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_3_0_s_reg_2649 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_15_1_11_fu_4737_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_2_1_2_reg_2703 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_2_1_5_fu_4745_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_2_0_s_reg_2757 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_15_1_10_fu_4753_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_1_1_2_reg_2811 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_1_1_5_fu_4761_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_1_0_s_reg_2865 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_15_1_9_fu_4769_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_0_1_2_reg_2919 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_0_1_5_fu_4777_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_inp3_buf_0_0_2_reg_2973 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_15_1_8_fu_4785_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal k1_reg_3411 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_3506_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_3523_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal aptr_assign_15_sum1_1_fu_4063_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal aptr_assign_13_sum2_1_fu_4074_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal aptr_assign_11_sum_c_fu_4088_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal aptr_assign_9_sum3_c_fu_4098_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_51_fu_4103_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal aptr_assign_14_sum_c_fu_4116_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal aptr_assign_12_sum_c_fu_4126_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal aptr_assign_10_sum_c_fu_4136_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_fu_4512_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_3464_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_3484_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_BUS_SRC_DST_ARREADY : STD_LOGIC := '0';
    signal ap_sig_ioackin_BUS_SRC_DST_ARREADY : STD_LOGIC;
    signal ap_reg_ioackin_BUS_SRC_DST_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_BUS_SRC_DST_WREADY : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_01001 : BOOLEAN;
    signal ap_block_pp4_stage0_01001 : BOOLEAN;
    signal tmp_42_fu_3997_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_fu_4002_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_fu_4015_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_fu_4020_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_78_fu_4436_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_81_fu_4441_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_79_fu_4482_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_80_fu_4487_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y3_fu_3454_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal x1_fu_3474_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_cast_fu_3555_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_3564_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_14_cast_fu_3574_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal a0_fu_3587_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3630_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal a3_fu_3617_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3644_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal a2_fu_3612_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3654_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_3654_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a1_fu_3606_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3664_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_3664_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3670_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_3670_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3676_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_3676_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3682_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_3688_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_3694_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_12_cast_fu_3707_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_17_cast_fu_3727_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_17_fu_3730_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_20_fu_3745_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_23_fu_3759_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_33_cast_fu_3773_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_26_fu_3776_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal b1_fu_3721_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b0_fu_3715_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3818_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal b2_fu_3803_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3828_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_3828_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b3_fu_3809_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3838_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_3838_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3844_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_3844_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3850_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_3850_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_2_fu_3864_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a1_2_fu_3860_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3887_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_3818_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_3906_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_3915_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_3887_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_33_fu_3931_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_36_fu_3945_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal a2_1_fu_3935_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3906_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_3915_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_49_fu_4045_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal aptr_assign_11_sum_fu_4082_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal aptr_assign_9_sum3_fu_4093_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal aptr_assign_15_sum1_s_fu_4107_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal aptr_assign_14_sum_fu_4110_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal aptr_assign_12_sum_fu_4121_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal aptr_assign_10_sum_fu_4131_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_4149_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_4161_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_4170_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_4170_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_4179_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_4179_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_4185_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_4185_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_4191_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_4191_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_4197_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_4203_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_4222_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_4231_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_4231_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_4241_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_4241_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_4247_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_4247_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_4253_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_4253_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_73_cast_fu_4259_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_54_fu_4262_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_57_fu_4277_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_60_fu_4291_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_89_cast_fu_4305_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_63_fu_4308_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_4222_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_4336_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_70_fu_4342_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_73_fu_4356_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal a3_4_fu_4360_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_5_fu_4388_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a1_5_fu_4384_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_4336_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_4421_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_4430_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_4421_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_4430_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal inp3_buf_load_0_phi_fu_4823_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_90_fu_4831_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_131_cast_cast_fu_4839_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_91_fu_4847_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_fu_4861_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_load_113_ph_fu_4887_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_95_fu_4895_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_139_cast_cast_fu_4903_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_136_1_fu_4911_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_1_fu_4925_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_load_2_phi_fu_4951_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_99_fu_4959_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_142_cast_cast_fu_4967_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_136_2_fu_4975_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_2_fu_4989_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_load_3_phi_fu_5015_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_103_fu_5023_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_145_cast_cast_fu_5031_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_136_3_fu_5039_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_3_fu_5053_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_load_4_phi_fu_5079_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_107_fu_5087_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_148_cast_cast_fu_5095_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_136_4_fu_5103_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_4_fu_5117_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_load_5_phi_fu_5143_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_111_fu_5151_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_151_cast_cast_fu_5159_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_136_5_fu_5167_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_5_fu_5181_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_load_6_phi_fu_5207_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_115_fu_5215_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_154_cast_cast_fu_5223_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_136_6_fu_5231_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_6_fu_5245_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_load_7_phi_fu_5271_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_119_fu_5279_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_157_cast_cast_fu_5287_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_136_7_fu_5295_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_7_fu_5309_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_load_8_phi_fu_5335_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_125_fu_5343_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_160_cast_cast_fu_5351_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_136_8_fu_5359_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_8_fu_5373_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_load_9_phi_fu_5399_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_131_fu_5407_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_163_cast_cast_fu_5415_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_136_9_fu_5423_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_9_fu_5437_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_load_10_phi_fu_5463_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_137_fu_5471_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_166_cast_cast_fu_5479_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_136_s_fu_5487_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_s_fu_5501_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_load_11_phi_fu_5527_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_143_fu_5535_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_169_cast_cast_fu_5543_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_136_10_fu_5551_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_10_fu_5565_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_load_12_phi_fu_5591_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_150_fu_5599_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_172_cast_cast_fu_5607_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_136_11_fu_5615_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_11_fu_5629_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_load_13_phi_fu_5655_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_152_fu_5663_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_175_cast_cast_fu_5671_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_136_12_fu_5679_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_12_fu_5693_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_load_14_phi_fu_5719_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_154_fu_5727_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_178_cast_cast_fu_5735_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_136_13_fu_5743_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_13_fu_5757_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal inp3_buf_load_15_phi_fu_5783_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_156_fu_5791_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_181_cast_cast_fu_5799_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_136_14_fu_5807_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_14_fu_5821_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_cast_fu_5853_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_neg_t_fu_5856_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_lshr_f_cast_fu_5862_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_0_1_9_fu_5865_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_0_0_3_cas_fu_5872_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_1_cast_fu_5890_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_neg_t_1_fu_5893_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_lshr_f_1_cast_fu_5899_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_1_1_9_fu_5902_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_1_0_2_cas_fu_5909_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_2_cast_fu_5927_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_neg_t_2_fu_5930_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_lshr_f_2_cast_fu_5936_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_2_1_9_fu_5939_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_2_0_2_cas_fu_5946_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_3_cast_fu_5964_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_neg_t_3_fu_5967_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_lshr_f_3_cast_fu_5973_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_3_1_9_fu_5976_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_3_0_2_cas_fu_5983_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_4_cast_fu_6001_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_neg_t_4_fu_6004_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_lshr_f_4_cast_fu_6010_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_4_1_9_fu_6013_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_4_0_2_cas_fu_6020_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_5_cast_fu_6038_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_neg_t_5_fu_6041_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_lshr_f_5_cast_fu_6047_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_5_1_9_fu_6050_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_5_0_2_cas_fu_6057_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_6_cast_fu_6075_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_neg_t_6_fu_6078_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_lshr_f_6_cast_fu_6084_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_6_1_9_fu_6087_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_6_0_2_cas_fu_6094_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_7_cast_fu_6112_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_neg_t_7_fu_6115_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_lshr_f_7_cast_fu_6121_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_7_1_9_fu_6124_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_7_0_2_cas_fu_6131_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_8_cast_fu_6149_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_neg_t_8_fu_6152_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_lshr_f_8_cast_fu_6158_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_8_1_9_fu_6161_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_8_0_2_cas_fu_6168_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_9_cast_fu_6186_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_neg_t_9_fu_6189_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_lshr_f_9_cast_fu_6195_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_9_1_9_fu_6198_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_9_0_2_cas_fu_6205_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_cast_44_fu_6223_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_neg_t_s_fu_6226_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_lshr_f_cast_45_fu_6232_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_10_1_9_fu_6235_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_10_0_2_ca_fu_6242_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_10_cast_fu_6260_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_neg_t_10_fu_6263_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_lshr_f_10_cast_fu_6269_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_11_1_9_fu_6272_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_11_0_2_ca_fu_6279_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_11_cast_fu_6297_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_neg_t_11_fu_6300_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_lshr_f_11_cast_fu_6306_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_12_1_9_fu_6309_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_12_0_2_ca_fu_6316_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_12_cast_fu_6334_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_neg_t_12_fu_6337_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_lshr_f_12_cast_fu_6343_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_13_1_9_fu_6346_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_13_0_2_ca_fu_6353_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_13_cast_fu_6371_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_neg_t_13_fu_6374_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_lshr_f_13_cast_fu_6380_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_14_1_9_fu_6383_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_14_0_2_ca_fu_6390_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_14_cast_fu_6408_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_neg_t_14_fu_6411_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_lshr_f_14_cast_fu_6417_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_15_1_25_fu_6420_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal inp3_buf_15_0_2_ca_fu_6427_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_158_fu_6457_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_159_fu_6461_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_133_fu_6469_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_149_fu_6481_p33 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (66 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_idle_pp4 : STD_LOGIC;
    signal ap_enable_pp4 : STD_LOGIC;
    signal ap_condition_2064 : BOOLEAN;
    signal ap_condition_2075 : BOOLEAN;

    component ChenIDct_mul_8ns_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component ChenIDct_mul_10s_cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (40 downto 0) );
    end component;


    component ChenIDct_mul_10nsdEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (40 downto 0) );
    end component;


    component ChenIDct_mul_9ns_eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (40 downto 0) );
    end component;


    component ChenIDct_mux_326_fYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (31 downto 0);
        din30 : IN STD_LOGIC_VECTOR (31 downto 0);
        din31 : IN STD_LOGIC_VECTOR (31 downto 0);
        din32 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ChenIDct_inp1_buf IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ChenIDct_inp2_buf IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ChenIDct_BUS_CTRL_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        x : OUT STD_LOGIC_VECTOR (63 downto 0);
        y : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component ChenIDct_BUS_SRC_DST_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    ChenIDct_BUS_CTRL_s_axi_U : component ChenIDct_BUS_CTRL_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_BUS_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_BUS_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_BUS_CTRL_AWVALID,
        AWREADY => s_axi_BUS_CTRL_AWREADY,
        AWADDR => s_axi_BUS_CTRL_AWADDR,
        WVALID => s_axi_BUS_CTRL_WVALID,
        WREADY => s_axi_BUS_CTRL_WREADY,
        WDATA => s_axi_BUS_CTRL_WDATA,
        WSTRB => s_axi_BUS_CTRL_WSTRB,
        ARVALID => s_axi_BUS_CTRL_ARVALID,
        ARREADY => s_axi_BUS_CTRL_ARREADY,
        ARADDR => s_axi_BUS_CTRL_ARADDR,
        RVALID => s_axi_BUS_CTRL_RVALID,
        RREADY => s_axi_BUS_CTRL_RREADY,
        RDATA => s_axi_BUS_CTRL_RDATA,
        RRESP => s_axi_BUS_CTRL_RRESP,
        BVALID => s_axi_BUS_CTRL_BVALID,
        BREADY => s_axi_BUS_CTRL_BREADY,
        BRESP => s_axi_BUS_CTRL_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        x => x,
        y => y);

    ChenIDct_BUS_SRC_DST_m_axi_U : component ChenIDct_BUS_SRC_DST_m_axi
    generic map (
        USER_DW => 32,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_BUS_SRC_DST_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_BUS_SRC_DST_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_BUS_SRC_DST_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_BUS_SRC_DST_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_BUS_SRC_DST_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_BUS_SRC_DST_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_BUS_SRC_DST_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_BUS_SRC_DST_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_BUS_SRC_DST_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_BUS_SRC_DST_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_BUS_SRC_DST_CACHE_VALUE)
    port map (
        AWVALID => m_axi_BUS_SRC_DST_AWVALID,
        AWREADY => m_axi_BUS_SRC_DST_AWREADY,
        AWADDR => m_axi_BUS_SRC_DST_AWADDR,
        AWID => m_axi_BUS_SRC_DST_AWID,
        AWLEN => m_axi_BUS_SRC_DST_AWLEN,
        AWSIZE => m_axi_BUS_SRC_DST_AWSIZE,
        AWBURST => m_axi_BUS_SRC_DST_AWBURST,
        AWLOCK => m_axi_BUS_SRC_DST_AWLOCK,
        AWCACHE => m_axi_BUS_SRC_DST_AWCACHE,
        AWPROT => m_axi_BUS_SRC_DST_AWPROT,
        AWQOS => m_axi_BUS_SRC_DST_AWQOS,
        AWREGION => m_axi_BUS_SRC_DST_AWREGION,
        AWUSER => m_axi_BUS_SRC_DST_AWUSER,
        WVALID => m_axi_BUS_SRC_DST_WVALID,
        WREADY => m_axi_BUS_SRC_DST_WREADY,
        WDATA => m_axi_BUS_SRC_DST_WDATA,
        WSTRB => m_axi_BUS_SRC_DST_WSTRB,
        WLAST => m_axi_BUS_SRC_DST_WLAST,
        WID => m_axi_BUS_SRC_DST_WID,
        WUSER => m_axi_BUS_SRC_DST_WUSER,
        ARVALID => m_axi_BUS_SRC_DST_ARVALID,
        ARREADY => m_axi_BUS_SRC_DST_ARREADY,
        ARADDR => m_axi_BUS_SRC_DST_ARADDR,
        ARID => m_axi_BUS_SRC_DST_ARID,
        ARLEN => m_axi_BUS_SRC_DST_ARLEN,
        ARSIZE => m_axi_BUS_SRC_DST_ARSIZE,
        ARBURST => m_axi_BUS_SRC_DST_ARBURST,
        ARLOCK => m_axi_BUS_SRC_DST_ARLOCK,
        ARCACHE => m_axi_BUS_SRC_DST_ARCACHE,
        ARPROT => m_axi_BUS_SRC_DST_ARPROT,
        ARQOS => m_axi_BUS_SRC_DST_ARQOS,
        ARREGION => m_axi_BUS_SRC_DST_ARREGION,
        ARUSER => m_axi_BUS_SRC_DST_ARUSER,
        RVALID => m_axi_BUS_SRC_DST_RVALID,
        RREADY => m_axi_BUS_SRC_DST_RREADY,
        RDATA => m_axi_BUS_SRC_DST_RDATA,
        RLAST => m_axi_BUS_SRC_DST_RLAST,
        RID => m_axi_BUS_SRC_DST_RID,
        RUSER => m_axi_BUS_SRC_DST_RUSER,
        RRESP => m_axi_BUS_SRC_DST_RRESP,
        BVALID => m_axi_BUS_SRC_DST_BVALID,
        BREADY => m_axi_BUS_SRC_DST_BREADY,
        BRESP => m_axi_BUS_SRC_DST_BRESP,
        BID => m_axi_BUS_SRC_DST_BID,
        BUSER => m_axi_BUS_SRC_DST_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => BUS_SRC_DST_ARVALID,
        I_ARREADY => BUS_SRC_DST_ARREADY,
        I_ARADDR => BUS_SRC_DST_ARADDR,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_40,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => BUS_SRC_DST_RVALID,
        I_RREADY => BUS_SRC_DST_RREADY,
        I_RDATA => BUS_SRC_DST_RDATA,
        I_RID => BUS_SRC_DST_RID,
        I_RUSER => BUS_SRC_DST_RUSER,
        I_RRESP => BUS_SRC_DST_RRESP,
        I_RLAST => BUS_SRC_DST_RLAST,
        I_AWVALID => BUS_SRC_DST_AWVALID,
        I_AWREADY => BUS_SRC_DST_AWREADY,
        I_AWADDR => BUS_SRC_DST_addr_reg_6551,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_40,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => BUS_SRC_DST_WVALID,
        I_WREADY => BUS_SRC_DST_WREADY,
        I_WDATA => BUS_SRC_DST_WDATA,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_F,
        I_BVALID => BUS_SRC_DST_BVALID,
        I_BREADY => BUS_SRC_DST_BREADY,
        I_BRESP => BUS_SRC_DST_BRESP,
        I_BID => BUS_SRC_DST_BID,
        I_BUSER => BUS_SRC_DST_BUSER);

    inp1_buf_U : component ChenIDct_inp1_buf
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => inp1_buf_address0,
        ce0 => inp1_buf_ce0,
        we0 => inp1_buf_we0,
        d0 => BUS_SRC_DST_addr_1_r_1_reg_6574,
        q0 => inp1_buf_q0,
        address1 => inp1_buf_address1,
        ce1 => inp1_buf_ce1,
        q1 => inp1_buf_q1);

    inp2_buf_U : component ChenIDct_inp2_buf
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => inp2_buf_address0,
        ce0 => inp2_buf_ce0,
        we0 => inp2_buf_we0,
        d0 => inp2_buf_d0,
        q0 => inp2_buf_q0,
        address1 => inp2_buf_address1,
        ce1 => inp2_buf_ce1,
        we1 => inp2_buf_we1,
        d1 => inp2_buf_d1,
        q1 => inp2_buf_q1);

    ChenIDct_mul_8ns_bkb_U1 : component ChenIDct_mul_8ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_3630_p0,
        din1 => a0_fu_3587_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3630_p2);

    ChenIDct_mul_10s_cud_U2 : component ChenIDct_mul_10s_cud
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_3644_p0,
        din1 => a3_fu_3617_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3644_p2);

    ChenIDct_mul_10nsdEe_U3 : component ChenIDct_mul_10nsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_3654_p0,
        din1 => grp_fu_3654_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_3654_p2);

    ChenIDct_mul_10s_cud_U4 : component ChenIDct_mul_10s_cud
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_3664_p0,
        din1 => grp_fu_3664_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_3664_p2);

    ChenIDct_mul_10nsdEe_U5 : component ChenIDct_mul_10nsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_3670_p0,
        din1 => grp_fu_3670_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_3670_p2);

    ChenIDct_mul_10nsdEe_U6 : component ChenIDct_mul_10nsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_3676_p0,
        din1 => grp_fu_3676_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_3676_p2);

    ChenIDct_mul_10nsdEe_U7 : component ChenIDct_mul_10nsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_3682_p0,
        din1 => a0_fu_3587_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3682_p2);

    ChenIDct_mul_8ns_bkb_U8 : component ChenIDct_mul_8ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_3688_p0,
        din1 => a3_fu_3617_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3688_p2);

    ChenIDct_mul_10nsdEe_U9 : component ChenIDct_mul_10nsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_3818_p0,
        din1 => tmp_29_reg_6802,
        ce => ap_const_logic_1,
        dout => grp_fu_3818_p2);

    ChenIDct_mul_9ns_eOg_U10 : component ChenIDct_mul_9ns_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 9,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_3828_p0,
        din1 => grp_fu_3828_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_3828_p2);

    ChenIDct_mul_10s_cud_U11 : component ChenIDct_mul_10s_cud
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_3838_p0,
        din1 => grp_fu_3838_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_3838_p2);

    ChenIDct_mul_10nsdEe_U12 : component ChenIDct_mul_10nsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_3844_p0,
        din1 => grp_fu_3844_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_3844_p2);

    ChenIDct_mul_9ns_eOg_U13 : component ChenIDct_mul_9ns_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 9,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_3850_p0,
        din1 => grp_fu_3850_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_3850_p2);

    ChenIDct_mul_10nsdEe_U14 : component ChenIDct_mul_10nsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_3887_p0,
        din1 => tmp_27_reg_6797,
        ce => ap_const_logic_1,
        dout => grp_fu_3887_p2);

    ChenIDct_mul_10nsdEe_U15 : component ChenIDct_mul_10nsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_3906_p0,
        din1 => tmp_37_reg_6836,
        ce => ap_const_logic_1,
        dout => grp_fu_3906_p2);

    ChenIDct_mul_10nsdEe_U16 : component ChenIDct_mul_10nsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_3915_p0,
        din1 => tmp_39_reg_6841,
        ce => ap_const_logic_1,
        dout => grp_fu_3915_p2);

    ChenIDct_mul_8ns_bkb_U17 : component ChenIDct_mul_8ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_4149_p0,
        din1 => reg_3448,
        ce => ap_const_logic_1,
        dout => grp_fu_4149_p2);

    ChenIDct_mul_10s_cud_U18 : component ChenIDct_mul_10s_cud
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_4161_p0,
        din1 => a3_3_reg_7026,
        ce => ap_const_logic_1,
        dout => grp_fu_4161_p2);

    ChenIDct_mul_10nsdEe_U19 : component ChenIDct_mul_10nsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_4170_p0,
        din1 => grp_fu_4170_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_4170_p2);

    ChenIDct_mul_10s_cud_U20 : component ChenIDct_mul_10s_cud
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_4179_p0,
        din1 => grp_fu_4179_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_4179_p2);

    ChenIDct_mul_10nsdEe_U21 : component ChenIDct_mul_10nsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_4185_p0,
        din1 => grp_fu_4185_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_4185_p2);

    ChenIDct_mul_10nsdEe_U22 : component ChenIDct_mul_10nsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_4191_p0,
        din1 => grp_fu_4191_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_4191_p2);

    ChenIDct_mul_10nsdEe_U23 : component ChenIDct_mul_10nsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_4197_p0,
        din1 => reg_3448,
        ce => ap_const_logic_1,
        dout => grp_fu_4197_p2);

    ChenIDct_mul_8ns_bkb_U24 : component ChenIDct_mul_8ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 8,
        din1_WIDTH => 32,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_4203_p0,
        din1 => a3_3_reg_7026,
        ce => ap_const_logic_1,
        dout => grp_fu_4203_p2);

    ChenIDct_mul_10nsdEe_U25 : component ChenIDct_mul_10nsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_4222_p0,
        din1 => tmp_64_reg_7085,
        ce => ap_const_logic_1,
        dout => grp_fu_4222_p2);

    ChenIDct_mul_9ns_eOg_U26 : component ChenIDct_mul_9ns_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 9,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_4231_p0,
        din1 => grp_fu_4231_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_4231_p2);

    ChenIDct_mul_10s_cud_U27 : component ChenIDct_mul_10s_cud
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_4241_p0,
        din1 => grp_fu_4241_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_4241_p2);

    ChenIDct_mul_10nsdEe_U28 : component ChenIDct_mul_10nsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_4247_p0,
        din1 => grp_fu_4247_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_4247_p2);

    ChenIDct_mul_9ns_eOg_U29 : component ChenIDct_mul_9ns_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 9,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_4253_p0,
        din1 => grp_fu_4253_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_4253_p2);

    ChenIDct_mul_10nsdEe_U30 : component ChenIDct_mul_10nsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_4336_p0,
        din1 => tmp_66_reg_7090,
        ce => ap_const_logic_1,
        dout => grp_fu_4336_p2);

    ChenIDct_mul_10nsdEe_U31 : component ChenIDct_mul_10nsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_4421_p0,
        din1 => tmp_74_reg_7237,
        ce => ap_const_logic_1,
        dout => grp_fu_4421_p2);

    ChenIDct_mul_10nsdEe_U32 : component ChenIDct_mul_10nsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_4430_p0,
        din1 => tmp_76_reg_7242,
        ce => ap_const_logic_1,
        dout => grp_fu_4430_p2);

    ChenIDct_mux_326_fYi_U33 : component ChenIDct_mux_326_fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => inp3_buf_0_0_s_reg_3399,
        din1 => inp3_buf_0_1_3_reg_3387,
        din2 => inp3_buf_1_0_3_reg_3375,
        din3 => inp3_buf_1_1_3_reg_3363,
        din4 => inp3_buf_2_0_3_reg_3351,
        din5 => inp3_buf_2_1_3_reg_3339,
        din6 => inp3_buf_3_0_3_reg_3327,
        din7 => inp3_buf_3_1_3_reg_3315,
        din8 => inp3_buf_4_0_3_reg_3303,
        din9 => inp3_buf_4_1_3_reg_3291,
        din10 => inp3_buf_5_0_3_reg_3279,
        din11 => inp3_buf_5_1_3_reg_3267,
        din12 => inp3_buf_6_0_3_reg_3255,
        din13 => inp3_buf_6_1_3_reg_3243,
        din14 => inp3_buf_7_0_3_reg_3231,
        din15 => inp3_buf_7_1_3_reg_3219,
        din16 => inp3_buf_8_0_3_reg_3207,
        din17 => inp3_buf_8_1_3_reg_3195,
        din18 => inp3_buf_9_0_3_reg_3183,
        din19 => inp3_buf_9_1_3_reg_3171,
        din20 => inp3_buf_10_0_3_reg_3159,
        din21 => inp3_buf_10_1_3_reg_3147,
        din22 => inp3_buf_11_0_3_reg_3135,
        din23 => inp3_buf_11_1_3_reg_3123,
        din24 => inp3_buf_12_0_3_reg_3111,
        din25 => inp3_buf_12_1_3_reg_3099,
        din26 => inp3_buf_13_0_3_reg_3087,
        din27 => inp3_buf_13_1_3_reg_3075,
        din28 => inp3_buf_14_0_3_reg_3063,
        din29 => inp3_buf_14_1_3_reg_3051,
        din30 => inp3_buf_15_0_3_reg_3039,
        din31 => inp3_buf_15_1_3_reg_3027,
        din32 => tmp_149_fu_6481_p33,
        dout => tmp_149_fu_6481_p34);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state9) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state9)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state9);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state19) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state19)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state19);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state48) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_state36_io) and (ap_const_logic_1 = ap_CS_fsm_state36) and (exitcond8_fu_4033_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state48)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state48);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                elsif (((ap_const_boolean_0 = ap_block_state36_io) and (ap_const_logic_1 = ap_CS_fsm_state36) and (exitcond8_fu_4033_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond4_fu_4529_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_logic_1 = ap_condition_pp4_exit_iter0_state70) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state68) and (exitcond_fu_4809_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp4_exit_iter0_state70) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) then 
                    ap_enable_reg_pp4_iter1 <= (ap_const_logic_1 xor ap_condition_pp4_exit_iter0_state70);
                elsif ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state68) and (exitcond_fu_4809_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_BUS_SRC_DST_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_BUS_SRC_DST_ARREADY <= ap_const_logic_0;
            else
                if ((((ap_sig_ioackin_BUS_SRC_DST_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_sig_ioackin_BUS_SRC_DST_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state56)) or ((ap_sig_ioackin_BUS_SRC_DST_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
                    ap_reg_ioackin_BUS_SRC_DST_ARREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = BUS_SRC_DST_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = BUS_SRC_DST_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state56)) or ((ap_const_logic_1 = BUS_SRC_DST_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
                    ap_reg_ioackin_BUS_SRC_DST_ARREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_BUS_SRC_DST_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_BUS_SRC_DST_AWREADY <= ap_const_logic_0;
            else
                if ((((ap_sig_ioackin_BUS_SRC_DST_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state62)) or ((ap_const_boolean_0 = ap_block_state36_io) and (ap_const_logic_1 = ap_CS_fsm_state36) and (exitcond8_fu_4033_p2 = ap_const_lv1_1)))) then 
                    ap_reg_ioackin_BUS_SRC_DST_AWREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = BUS_SRC_DST_AWREADY) and (ap_const_logic_1 = ap_CS_fsm_state62)) or ((ap_const_logic_1 = BUS_SRC_DST_AWREADY) and (ap_const_logic_1 = ap_CS_fsm_state36) and (exitcond8_fu_4033_p2 = ap_const_lv1_1)))) then 
                    ap_reg_ioackin_BUS_SRC_DST_AWREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_BUS_SRC_DST_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_BUS_SRC_DST_WREADY <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (exitcond5_reg_7824 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_reg_pp2_iter1_exitcond3_reg_7307 = ap_const_lv1_0)))) then 
                    ap_reg_ioackin_BUS_SRC_DST_WREADY <= ap_const_logic_0;
                elsif ((((ap_const_boolean_0 = ap_block_pp4_stage0_01001) and (ap_const_logic_1 = BUS_SRC_DST_WREADY) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (exitcond5_reg_7824 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_01001) and (ap_const_logic_1 = BUS_SRC_DST_WREADY) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_reg_pp2_iter1_exitcond3_reg_7307 = ap_const_lv1_0)))) then 
                    ap_reg_ioackin_BUS_SRC_DST_WREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    i_1_reg_519_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state23) and (exitcond9_fu_3532_p2 = ap_const_lv1_1))) then 
                i_1_reg_519 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
                i_1_reg_519 <= i_4_reg_6959;
            end if; 
        end if;
    end process;

    i_2_reg_925_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
                i_2_reg_925 <= i_5_reg_7325;
            elsif (((ap_sig_ioackin_BUS_SRC_DST_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state62))) then 
                i_2_reg_925 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    i_reg_507_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                i_reg_507 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                i_reg_507 <= i_3_reg_6596;
            end if; 
        end if;
    end process;

    indvar1_reg_495_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                indvar1_reg_495 <= ap_const_lv7_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond2_reg_6579 = ap_const_lv1_0))) then 
                indvar1_reg_495 <= indvar_next1_reg_6583;
            end if; 
        end if;
    end process;

    indvar2_reg_530_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state36_io) and (ap_const_logic_1 = ap_CS_fsm_state36) and (exitcond8_fu_4033_p2 = ap_const_lv1_1))) then 
                indvar2_reg_530 <= ap_const_lv7_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond3_fu_4500_p2 = ap_const_lv1_0))) then 
                indvar2_reg_530 <= indvar_next2_fu_4506_p2;
            end if; 
        end if;
    end process;

    indvar3_reg_936_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (exitcond4_fu_4529_p2 = ap_const_lv1_0))) then 
                indvar3_reg_936 <= indvar_next3_fu_4535_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                indvar3_reg_936 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    indvar4_reg_3422_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state68) and (exitcond_fu_4809_p2 = ap_const_lv1_1))) then 
                indvar4_reg_3422 <= ap_const_lv6_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (exitcond5_fu_6445_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then 
                indvar4_reg_3422 <= indvar_next4_fu_6451_p2;
            end if; 
        end if;
    end process;

    indvar_reg_483_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond1_reg_6565 = ap_const_lv1_0))) then 
                indvar_reg_483 <= indvar_next_reg_6569;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                indvar_reg_483 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    inp3_buf_0_0_1_reg_1288_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_0_0_1_reg_1288 <= ap_phi_mux_inp3_buf_0_0_2_phi_fu_2977_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_0_0_1_reg_1288 <= inp3_buf_0_0_reg_913;
            end if; 
        end if;
    end process;

    inp3_buf_0_0_s_reg_3399_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_0_0_s_reg_3399 <= inp3_buf_0_0_1_reg_1288;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_0_0_s_reg_3399 <= inp3_buf_0_1_8_fu_5883_p3;
            end if; 
        end if;
    end process;

    inp3_buf_0_1_1_reg_1277_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_0_1_1_reg_1277 <= ap_phi_mux_inp3_buf_0_1_2_phi_fu_2923_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_0_1_1_reg_1277 <= inp3_buf_0_1_reg_901;
            end if; 
        end if;
    end process;

    inp3_buf_0_1_3_reg_3387_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_0_1_3_reg_3387 <= inp3_buf_0_1_1_reg_1277;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_0_1_3_reg_3387 <= inp3_buf_0_1_4_fu_5876_p3;
            end if; 
        end if;
    end process;

    inp3_buf_10_0_1_reg_1068_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_10_0_1_reg_1068 <= ap_phi_mux_inp3_buf_10_0_s_phi_fu_1897_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_10_0_1_reg_1068 <= inp3_buf_10_0_reg_673;
            end if; 
        end if;
    end process;

    inp3_buf_10_0_3_reg_3159_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_10_0_3_reg_3159 <= inp3_buf_10_0_1_reg_1068;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_10_0_3_reg_3159 <= inp3_buf_10_1_8_fu_6253_p3;
            end if; 
        end if;
    end process;

    inp3_buf_10_1_1_reg_1057_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_10_1_1_reg_1057 <= ap_phi_mux_inp3_buf_10_1_2_phi_fu_1843_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_10_1_1_reg_1057 <= inp3_buf_10_1_reg_661;
            end if; 
        end if;
    end process;

    inp3_buf_10_1_3_reg_3147_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_10_1_3_reg_3147 <= inp3_buf_10_1_1_reg_1057;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_10_1_3_reg_3147 <= inp3_buf_10_1_4_fu_6246_p3;
            end if; 
        end if;
    end process;

    inp3_buf_11_0_1_reg_1046_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_11_0_1_reg_1046 <= ap_phi_mux_inp3_buf_11_0_s_phi_fu_1789_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_11_0_1_reg_1046 <= inp3_buf_11_0_reg_649;
            end if; 
        end if;
    end process;

    inp3_buf_11_0_3_reg_3135_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_11_0_3_reg_3135 <= inp3_buf_11_0_1_reg_1046;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_11_0_3_reg_3135 <= inp3_buf_11_1_8_fu_6290_p3;
            end if; 
        end if;
    end process;

    inp3_buf_11_1_1_reg_1035_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_11_1_1_reg_1035 <= ap_phi_mux_inp3_buf_11_1_2_phi_fu_1735_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_11_1_1_reg_1035 <= inp3_buf_11_1_reg_637;
            end if; 
        end if;
    end process;

    inp3_buf_11_1_3_reg_3123_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_11_1_3_reg_3123 <= inp3_buf_11_1_1_reg_1035;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_11_1_3_reg_3123 <= inp3_buf_11_1_4_fu_6283_p3;
            end if; 
        end if;
    end process;

    inp3_buf_12_0_1_reg_1024_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_12_0_1_reg_1024 <= ap_phi_mux_inp3_buf_12_0_s_phi_fu_1681_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_12_0_1_reg_1024 <= inp3_buf_12_0_reg_625;
            end if; 
        end if;
    end process;

    inp3_buf_12_0_3_reg_3111_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_12_0_3_reg_3111 <= inp3_buf_12_0_1_reg_1024;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_12_0_3_reg_3111 <= inp3_buf_12_1_8_fu_6327_p3;
            end if; 
        end if;
    end process;

    inp3_buf_12_1_1_reg_1013_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_12_1_1_reg_1013 <= ap_phi_mux_inp3_buf_12_1_2_phi_fu_1627_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_12_1_1_reg_1013 <= inp3_buf_12_1_reg_613;
            end if; 
        end if;
    end process;

    inp3_buf_12_1_3_reg_3099_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_12_1_3_reg_3099 <= inp3_buf_12_1_1_reg_1013;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_12_1_3_reg_3099 <= inp3_buf_12_1_4_fu_6320_p3;
            end if; 
        end if;
    end process;

    inp3_buf_13_0_1_reg_1002_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_13_0_1_reg_1002 <= ap_phi_mux_inp3_buf_13_0_s_phi_fu_1573_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_13_0_1_reg_1002 <= inp3_buf_13_0_reg_601;
            end if; 
        end if;
    end process;

    inp3_buf_13_0_3_reg_3087_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_13_0_3_reg_3087 <= inp3_buf_13_0_1_reg_1002;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_13_0_3_reg_3087 <= inp3_buf_13_1_8_fu_6364_p3;
            end if; 
        end if;
    end process;

    inp3_buf_13_1_1_reg_991_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_13_1_1_reg_991 <= ap_phi_mux_inp3_buf_13_1_2_phi_fu_1519_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_13_1_1_reg_991 <= inp3_buf_13_1_reg_589;
            end if; 
        end if;
    end process;

    inp3_buf_13_1_3_reg_3075_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_13_1_3_reg_3075 <= inp3_buf_13_1_1_reg_991;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_13_1_3_reg_3075 <= inp3_buf_13_1_4_fu_6357_p3;
            end if; 
        end if;
    end process;

    inp3_buf_14_0_1_reg_980_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_14_0_1_reg_980 <= ap_phi_mux_inp3_buf_14_0_s_phi_fu_1465_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_14_0_1_reg_980 <= inp3_buf_14_0_reg_577;
            end if; 
        end if;
    end process;

    inp3_buf_14_0_3_reg_3063_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_14_0_3_reg_3063 <= inp3_buf_14_0_1_reg_980;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_14_0_3_reg_3063 <= inp3_buf_14_1_8_fu_6401_p3;
            end if; 
        end if;
    end process;

    inp3_buf_14_1_1_reg_969_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_14_1_1_reg_969 <= ap_phi_mux_inp3_buf_14_1_2_phi_fu_1411_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_14_1_1_reg_969 <= inp3_buf_14_1_reg_565;
            end if; 
        end if;
    end process;

    inp3_buf_14_1_3_reg_3051_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_14_1_3_reg_3051 <= inp3_buf_14_1_1_reg_969;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_14_1_3_reg_3051 <= inp3_buf_14_1_4_fu_6394_p3;
            end if; 
        end if;
    end process;

    inp3_buf_15_0_1_reg_958_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_15_0_1_reg_958 <= ap_phi_mux_inp3_buf_15_0_s_phi_fu_1357_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_15_0_1_reg_958 <= inp3_buf_15_0_reg_553;
            end if; 
        end if;
    end process;

    inp3_buf_15_0_3_reg_3039_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_15_0_3_reg_3039 <= inp3_buf_15_0_1_reg_958;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_15_0_3_reg_3039 <= inp3_buf_15_1_24_fu_6438_p3;
            end if; 
        end if;
    end process;

    inp3_buf_15_1_1_reg_947_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_15_1_1_reg_947 <= ap_phi_mux_inp3_buf_15_1_2_phi_fu_1303_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_15_1_1_reg_947 <= inp3_buf_15_1_reg_541;
            end if; 
        end if;
    end process;

    inp3_buf_15_1_3_reg_3027_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_15_1_3_reg_3027 <= inp3_buf_15_1_1_reg_947;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_15_1_3_reg_3027 <= inp3_buf_15_1_4_fu_6431_p3;
            end if; 
        end if;
    end process;

    inp3_buf_1_0_1_reg_1266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_1_0_1_reg_1266 <= ap_phi_mux_inp3_buf_1_0_s_phi_fu_2869_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_1_0_1_reg_1266 <= inp3_buf_1_0_reg_889;
            end if; 
        end if;
    end process;

    inp3_buf_1_0_3_reg_3375_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_1_0_3_reg_3375 <= inp3_buf_1_0_1_reg_1266;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_1_0_3_reg_3375 <= inp3_buf_1_1_8_fu_5920_p3;
            end if; 
        end if;
    end process;

    inp3_buf_1_1_1_reg_1255_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_1_1_1_reg_1255 <= ap_phi_mux_inp3_buf_1_1_2_phi_fu_2815_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_1_1_1_reg_1255 <= inp3_buf_1_1_reg_877;
            end if; 
        end if;
    end process;

    inp3_buf_1_1_3_reg_3363_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_1_1_3_reg_3363 <= inp3_buf_1_1_1_reg_1255;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_1_1_3_reg_3363 <= inp3_buf_1_1_4_fu_5913_p3;
            end if; 
        end if;
    end process;

    inp3_buf_2_0_1_reg_1244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_2_0_1_reg_1244 <= ap_phi_mux_inp3_buf_2_0_s_phi_fu_2761_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_2_0_1_reg_1244 <= inp3_buf_2_0_reg_865;
            end if; 
        end if;
    end process;

    inp3_buf_2_0_3_reg_3351_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_2_0_3_reg_3351 <= inp3_buf_2_0_1_reg_1244;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_2_0_3_reg_3351 <= inp3_buf_2_1_8_fu_5957_p3;
            end if; 
        end if;
    end process;

    inp3_buf_2_1_1_reg_1233_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_2_1_1_reg_1233 <= ap_phi_mux_inp3_buf_2_1_2_phi_fu_2707_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_2_1_1_reg_1233 <= inp3_buf_2_1_reg_853;
            end if; 
        end if;
    end process;

    inp3_buf_2_1_3_reg_3339_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_2_1_3_reg_3339 <= inp3_buf_2_1_1_reg_1233;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_2_1_3_reg_3339 <= inp3_buf_2_1_4_fu_5950_p3;
            end if; 
        end if;
    end process;

    inp3_buf_3_0_1_reg_1222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_3_0_1_reg_1222 <= ap_phi_mux_inp3_buf_3_0_s_phi_fu_2653_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_3_0_1_reg_1222 <= inp3_buf_3_0_reg_841;
            end if; 
        end if;
    end process;

    inp3_buf_3_0_3_reg_3327_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_3_0_3_reg_3327 <= inp3_buf_3_0_1_reg_1222;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_3_0_3_reg_3327 <= inp3_buf_3_1_8_fu_5994_p3;
            end if; 
        end if;
    end process;

    inp3_buf_3_1_1_reg_1211_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_3_1_1_reg_1211 <= ap_phi_mux_inp3_buf_3_1_2_phi_fu_2599_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_3_1_1_reg_1211 <= inp3_buf_3_1_reg_829;
            end if; 
        end if;
    end process;

    inp3_buf_3_1_3_reg_3315_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_3_1_3_reg_3315 <= inp3_buf_3_1_1_reg_1211;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_3_1_3_reg_3315 <= inp3_buf_3_1_4_fu_5987_p3;
            end if; 
        end if;
    end process;

    inp3_buf_4_0_1_reg_1200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_4_0_1_reg_1200 <= ap_phi_mux_inp3_buf_4_0_s_phi_fu_2545_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_4_0_1_reg_1200 <= inp3_buf_4_0_reg_817;
            end if; 
        end if;
    end process;

    inp3_buf_4_0_3_reg_3303_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_4_0_3_reg_3303 <= inp3_buf_4_0_1_reg_1200;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_4_0_3_reg_3303 <= inp3_buf_4_1_8_fu_6031_p3;
            end if; 
        end if;
    end process;

    inp3_buf_4_1_1_reg_1189_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_4_1_1_reg_1189 <= ap_phi_mux_inp3_buf_4_1_2_phi_fu_2491_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_4_1_1_reg_1189 <= inp3_buf_4_1_reg_805;
            end if; 
        end if;
    end process;

    inp3_buf_4_1_3_reg_3291_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_4_1_3_reg_3291 <= inp3_buf_4_1_1_reg_1189;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_4_1_3_reg_3291 <= inp3_buf_4_1_4_fu_6024_p3;
            end if; 
        end if;
    end process;

    inp3_buf_5_0_1_reg_1178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_5_0_1_reg_1178 <= ap_phi_mux_inp3_buf_5_0_s_phi_fu_2437_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_5_0_1_reg_1178 <= inp3_buf_5_0_reg_793;
            end if; 
        end if;
    end process;

    inp3_buf_5_0_3_reg_3279_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_5_0_3_reg_3279 <= inp3_buf_5_0_1_reg_1178;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_5_0_3_reg_3279 <= inp3_buf_5_1_8_fu_6068_p3;
            end if; 
        end if;
    end process;

    inp3_buf_5_1_1_reg_1167_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_5_1_1_reg_1167 <= ap_phi_mux_inp3_buf_5_1_2_phi_fu_2383_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_5_1_1_reg_1167 <= inp3_buf_5_1_reg_781;
            end if; 
        end if;
    end process;

    inp3_buf_5_1_3_reg_3267_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_5_1_3_reg_3267 <= inp3_buf_5_1_1_reg_1167;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_5_1_3_reg_3267 <= inp3_buf_5_1_4_fu_6061_p3;
            end if; 
        end if;
    end process;

    inp3_buf_6_0_1_reg_1156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_6_0_1_reg_1156 <= ap_phi_mux_inp3_buf_6_0_s_phi_fu_2329_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_6_0_1_reg_1156 <= inp3_buf_6_0_reg_769;
            end if; 
        end if;
    end process;

    inp3_buf_6_0_3_reg_3255_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_6_0_3_reg_3255 <= inp3_buf_6_0_1_reg_1156;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_6_0_3_reg_3255 <= inp3_buf_6_1_8_fu_6105_p3;
            end if; 
        end if;
    end process;

    inp3_buf_6_1_1_reg_1145_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_6_1_1_reg_1145 <= ap_phi_mux_inp3_buf_6_1_2_phi_fu_2275_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_6_1_1_reg_1145 <= inp3_buf_6_1_reg_757;
            end if; 
        end if;
    end process;

    inp3_buf_6_1_3_reg_3243_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_6_1_3_reg_3243 <= inp3_buf_6_1_1_reg_1145;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_6_1_3_reg_3243 <= inp3_buf_6_1_4_fu_6098_p3;
            end if; 
        end if;
    end process;

    inp3_buf_7_0_1_reg_1134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_7_0_1_reg_1134 <= ap_phi_mux_inp3_buf_7_0_s_phi_fu_2221_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_7_0_1_reg_1134 <= inp3_buf_7_0_reg_745;
            end if; 
        end if;
    end process;

    inp3_buf_7_0_3_reg_3231_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_7_0_3_reg_3231 <= inp3_buf_7_0_1_reg_1134;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_7_0_3_reg_3231 <= inp3_buf_7_1_8_fu_6142_p3;
            end if; 
        end if;
    end process;

    inp3_buf_7_1_1_reg_1123_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_7_1_1_reg_1123 <= ap_phi_mux_inp3_buf_7_1_2_phi_fu_2167_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_7_1_1_reg_1123 <= inp3_buf_7_1_reg_733;
            end if; 
        end if;
    end process;

    inp3_buf_7_1_3_reg_3219_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_7_1_3_reg_3219 <= inp3_buf_7_1_1_reg_1123;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_7_1_3_reg_3219 <= inp3_buf_7_1_4_fu_6135_p3;
            end if; 
        end if;
    end process;

    inp3_buf_8_0_1_reg_1112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_8_0_1_reg_1112 <= ap_phi_mux_inp3_buf_8_0_s_phi_fu_2113_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_8_0_1_reg_1112 <= inp3_buf_8_0_reg_721;
            end if; 
        end if;
    end process;

    inp3_buf_8_0_3_reg_3207_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_8_0_3_reg_3207 <= inp3_buf_8_0_1_reg_1112;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_8_0_3_reg_3207 <= inp3_buf_8_1_8_fu_6179_p3;
            end if; 
        end if;
    end process;

    inp3_buf_8_1_1_reg_1101_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_8_1_1_reg_1101 <= ap_phi_mux_inp3_buf_8_1_2_phi_fu_2059_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_8_1_1_reg_1101 <= inp3_buf_8_1_reg_709;
            end if; 
        end if;
    end process;

    inp3_buf_8_1_3_reg_3195_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_8_1_3_reg_3195 <= inp3_buf_8_1_1_reg_1101;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_8_1_3_reg_3195 <= inp3_buf_8_1_4_fu_6172_p3;
            end if; 
        end if;
    end process;

    inp3_buf_9_0_1_reg_1090_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_9_0_1_reg_1090 <= ap_phi_mux_inp3_buf_9_0_s_phi_fu_2005_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_9_0_1_reg_1090 <= inp3_buf_9_0_reg_697;
            end if; 
        end if;
    end process;

    inp3_buf_9_0_3_reg_3183_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_9_0_3_reg_3183 <= inp3_buf_9_0_1_reg_1090;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_9_0_3_reg_3183 <= inp3_buf_9_1_8_fu_6216_p3;
            end if; 
        end if;
    end process;

    inp3_buf_9_1_1_reg_1079_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0))) then 
                inp3_buf_9_1_1_reg_1079 <= ap_phi_mux_inp3_buf_9_1_2_phi_fu_1951_p32;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then 
                inp3_buf_9_1_1_reg_1079 <= inp3_buf_9_1_reg_685;
            end if; 
        end if;
    end process;

    inp3_buf_9_1_3_reg_3171_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                inp3_buf_9_1_3_reg_3171 <= inp3_buf_9_1_1_reg_1079;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                inp3_buf_9_1_3_reg_3171 <= inp3_buf_9_1_4_fu_6209_p3;
            end if; 
        end if;
    end process;

    k1_reg_3411_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                k1_reg_3411 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                k1_reg_3411 <= k_s_reg_7659;
            end if; 
        end if;
    end process;

    reg_3438_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                reg_3438 <= inp1_buf_q1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                reg_3438 <= inp1_buf_q0;
            end if; 
        end if;
    end process;

    reg_3443_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                reg_3443 <= inp1_buf_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                reg_3443 <= inp1_buf_q1;
            end if; 
        end if;
    end process;

    reg_3448_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
                reg_3448 <= inp2_buf_q0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond3_reg_7307 = ap_const_lv1_0)))) then 
                reg_3448 <= inp2_buf_q1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond1_reg_6565 = ap_const_lv1_0))) then
                BUS_SRC_DST_addr_1_r_1_reg_6574 <= BUS_SRC_DST_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    BUS_SRC_DST_addr_1_reg_6559(61 downto 0) <= tmp_14_fu_3484_p1(61 downto 0);
                    BUS_SRC_DST_addr_reg_6551(61 downto 0) <= tmp_12_fu_3464_p1(61 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
                a0_1_reg_6887 <= grp_fu_3887_p2(40 downto 9);
                a3_1_reg_6893 <= tmp_36_fu_3945_p2(40 downto 9);
                b1_1_reg_6899 <= b1_1_fu_3959_p2;
                b2_1_reg_6905 <= b2_1_fu_3964_p2;
                c1_1_reg_6911 <= grp_fu_3906_p2(40 downto 9);
                c2_1_reg_6917 <= grp_fu_3915_p2(40 downto 9);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                a0_4_reg_7176 <= grp_fu_4222_p2(40 downto 9);
                c0_2_reg_7152 <= tmp_54_fu_4262_p2(40 downto 9);
                c1_2_reg_7158 <= tmp_57_fu_4277_p2(40 downto 9);
                c2_2_reg_7164 <= tmp_60_fu_4291_p2(40 downto 9);
                c3_2_reg_7170 <= tmp_63_fu_4308_p2(40 downto 9);
                tmp_68_reg_7182 <= grp_fu_4231_p2;
                tmp_69_reg_7187 <= grp_fu_4241_p2;
                tmp_71_reg_7192 <= grp_fu_4247_p2;
                tmp_72_reg_7197 <= grp_fu_4253_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                a0_6_reg_6824 <= a0_6_fu_3856_p2;
                a3_6_reg_6830 <= a3_6_fu_3868_p2;
                tmp_37_reg_6836 <= tmp_37_fu_3872_p2;
                tmp_39_reg_6841 <= tmp_39_fu_3878_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                a0_7_reg_7225 <= a0_7_fu_4380_p2;
                a2_4_reg_7207 <= tmp_70_fu_4342_p2(40 downto 9);
                a3_7_reg_7231 <= a3_7_fu_4392_p2;
                b0_3_reg_7213 <= b0_3_fu_4370_p2;
                b3_3_reg_7219 <= b3_3_fu_4375_p2;
                tmp_74_reg_7237 <= tmp_74_fu_4396_p2;
                tmp_76_reg_7242 <= tmp_76_fu_4402_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                a1_1_reg_6851 <= grp_fu_3818_p2(40 downto 9);
                tmp_31_reg_6857 <= grp_fu_3828_p2;
                tmp_32_reg_6862 <= grp_fu_3838_p2;
                tmp_34_reg_6867 <= grp_fu_3844_p2;
                tmp_35_reg_6872 <= grp_fu_3850_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                a1_3_reg_6996 <= inp2_buf_q0;
                    aptr_5_reg_7001(5 downto 3) <= aptr_assign_11_sum_c_fu_4088_p1(6 - 1 downto 0)(5 downto 3);
                    aptr_7_reg_7006(5 downto 3) <= aptr_assign_9_sum3_c_fu_4098_p1(6 - 1 downto 0)(5 downto 3);
                    aptr_assign_13_sum2_s_reg_6990(5 downto 3) <= aptr_assign_13_sum2_s_fu_4079_p1(5 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then
                a1_4_reg_7247 <= grp_fu_4336_p2(40 downto 9);
                tmp_82_reg_7263 <= tmp_82_fu_4446_p2;
                tmp_85_reg_7268 <= tmp_85_fu_4450_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                a2_3_reg_7021 <= inp2_buf_q1;
                a3_3_reg_7026 <= inp2_buf_q0;
                    aptr_2_reg_7016(5 downto 3) <= aptr_assign_14_sum_c_fu_4116_p1(6 - 1 downto 0)(5 downto 3);
                    aptr_reg_7011(5 downto 3) <= tmp_51_fu_4103_p1(6 - 1 downto 0)(5 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_reg_pp0_iter1_exitcond1_reg_6565 <= exitcond1_reg_6565;
                ap_reg_pp0_iter1_indvar_reg_483 <= indvar_reg_483;
                exitcond1_reg_6565 <= exitcond1_fu_3494_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ap_reg_pp1_iter1_exitcond2_reg_6579 <= exitcond2_reg_6579;
                ap_reg_pp1_iter1_indvar1_reg_495 <= indvar1_reg_495;
                exitcond2_reg_6579 <= exitcond2_fu_3511_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                ap_reg_pp2_iter1_exitcond3_reg_7307 <= exitcond3_reg_7307;
                exitcond3_reg_7307 <= exitcond3_fu_4500_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                ap_reg_pp3_iter1_exitcond4_reg_7330 <= exitcond4_reg_7330;
                ap_reg_pp3_iter1_tmp_87_reg_7339 <= tmp_87_reg_7339;
                ap_reg_pp3_iter1_tmp_88_reg_7343 <= tmp_88_reg_7343;
                exitcond4_reg_7330 <= exitcond4_fu_4529_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state36_io) and (ap_const_logic_1 = ap_CS_fsm_state36) and (exitcond8_fu_4033_p2 = ap_const_lv1_0))) then
                    aptr_1_reg_6975(5 downto 3) <= aptr_assign_15_sum1_1_fu_4063_p1(6 - 1 downto 0)(5 downto 3);
                    aptr_3_reg_6985(5 downto 3) <= aptr_assign_13_sum2_1_fu_4074_p1(6 - 1 downto 0)(5 downto 3);
                    aptr_assign_13_sum2_reg_6980(5 downto 3) <= aptr_assign_13_sum2_fu_4068_p2(5 downto 3);
                    aptr_assign_15_sum1_reg_6970(5 downto 3) <= aptr_assign_15_sum1_fu_4057_p2(5 downto 3);
                    tmp_50_reg_6964(5 downto 3) <= tmp_50_fu_4049_p3(5 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                    aptr_4_reg_7043(5 downto 3) <= aptr_assign_12_sum_c_fu_4126_p1(6 - 1 downto 0)(5 downto 3);
                    aptr_6_reg_7048(5 downto 3) <= aptr_assign_10_sum_c_fu_4136_p1(6 - 1 downto 0)(5 downto 3);
                b0_2_reg_7032 <= inp2_buf_q1;
                b2_2_reg_7038 <= inp2_buf_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                b0_1_reg_6923 <= b0_1_fu_3989_p2;
                b3_1_reg_6929 <= b3_1_fu_3993_p2;
                tmp_46_reg_6935 <= tmp_46_fu_4007_p2;
                tmp_47_reg_6940 <= tmp_47_fu_4011_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then
                b1_3_reg_7273 <= b1_3_fu_4454_p2;
                b2_3_reg_7279 <= b2_3_fu_4458_p2;
                c1_3_reg_7285 <= grp_fu_4421_p2(40 downto 9);
                c2_3_reg_7291 <= grp_fu_4430_p2(40 downto 9);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                c0_reg_6773 <= tmp_17_fu_3730_p2(40 downto 9);
                c1_reg_6779 <= tmp_20_fu_3745_p2(40 downto 9);
                c2_reg_6785 <= tmp_23_fu_3759_p2(40 downto 9);
                c3_reg_6791 <= tmp_26_fu_3776_p2(40 downto 9);
                    tmp_27_reg_6797(31 downto 2) <= tmp_27_fu_3791_p2(31 downto 2);
                    tmp_29_reg_6802(31 downto 2) <= tmp_29_fu_3797_p2(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                exitcond5_reg_7824 <= exitcond5_fu_6445_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                i_3_reg_6596 <= i_3_fu_3538_p2;
                    i_cast1_reg_6588(3 downto 0) <= i_cast1_fu_3528_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state36_io) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                i_4_reg_6959 <= i_4_fu_4039_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state63)) then
                i_5_reg_7325 <= i_5_fu_4523_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                indvar_next1_reg_6583 <= indvar_next1_fu_3517_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                indvar_next_reg_6569 <= indvar_next_fu_3500_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                inp1_buf_load_5_reg_6646 <= inp1_buf_q1;
                inp1_buf_load_7_reg_6651 <= inp1_buf_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state72)) then
                inp3_buf_0_0_reg_913 <= inp3_buf_0_0_s_reg_3399;
                inp3_buf_0_1_reg_901 <= inp3_buf_0_1_3_reg_3387;
                inp3_buf_10_0_reg_673 <= inp3_buf_10_0_3_reg_3159;
                inp3_buf_10_1_reg_661 <= inp3_buf_10_1_3_reg_3147;
                inp3_buf_11_0_reg_649 <= inp3_buf_11_0_3_reg_3135;
                inp3_buf_11_1_reg_637 <= inp3_buf_11_1_3_reg_3123;
                inp3_buf_12_0_reg_625 <= inp3_buf_12_0_3_reg_3111;
                inp3_buf_12_1_reg_613 <= inp3_buf_12_1_3_reg_3099;
                inp3_buf_13_0_reg_601 <= inp3_buf_13_0_3_reg_3087;
                inp3_buf_13_1_reg_589 <= inp3_buf_13_1_3_reg_3075;
                inp3_buf_14_0_reg_577 <= inp3_buf_14_0_3_reg_3063;
                inp3_buf_14_1_reg_565 <= inp3_buf_14_1_3_reg_3051;
                inp3_buf_15_0_reg_553 <= inp3_buf_15_0_3_reg_3039;
                inp3_buf_15_1_reg_541 <= inp3_buf_15_1_3_reg_3027;
                inp3_buf_1_0_reg_889 <= inp3_buf_1_0_3_reg_3375;
                inp3_buf_1_1_reg_877 <= inp3_buf_1_1_3_reg_3363;
                inp3_buf_2_0_reg_865 <= inp3_buf_2_0_3_reg_3351;
                inp3_buf_2_1_reg_853 <= inp3_buf_2_1_3_reg_3339;
                inp3_buf_3_0_reg_841 <= inp3_buf_3_0_3_reg_3327;
                inp3_buf_3_1_reg_829 <= inp3_buf_3_1_3_reg_3315;
                inp3_buf_4_0_reg_817 <= inp3_buf_4_0_3_reg_3303;
                inp3_buf_4_1_reg_805 <= inp3_buf_4_1_3_reg_3291;
                inp3_buf_5_0_reg_793 <= inp3_buf_5_0_3_reg_3279;
                inp3_buf_5_1_reg_781 <= inp3_buf_5_1_3_reg_3267;
                inp3_buf_6_0_reg_769 <= inp3_buf_6_0_3_reg_3255;
                inp3_buf_6_1_reg_757 <= inp3_buf_6_1_3_reg_3243;
                inp3_buf_7_0_reg_745 <= inp3_buf_7_0_3_reg_3231;
                inp3_buf_7_1_reg_733 <= inp3_buf_7_1_3_reg_3219;
                inp3_buf_8_0_reg_721 <= inp3_buf_8_0_3_reg_3207;
                inp3_buf_8_1_reg_709 <= inp3_buf_8_1_3_reg_3195;
                inp3_buf_9_0_reg_697 <= inp3_buf_9_0_3_reg_3183;
                inp3_buf_9_1_reg_685 <= inp3_buf_9_1_3_reg_3171;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state68) and (exitcond_fu_4809_p2 = ap_const_lv1_0))) then
                k_s_reg_7659 <= k_s_fu_5847_p2;
                tmp_100_reg_7449 <= tmp_136_2_fu_4975_p2(31 downto 31);
                tmp_101_reg_7454 <= p_neg_2_fu_4989_p2(31 downto 4);
                tmp_102_reg_7459 <= tmp_136_2_fu_4975_p2(31 downto 4);
                tmp_104_reg_7464 <= tmp_136_3_fu_5039_p2(31 downto 31);
                tmp_105_reg_7469 <= p_neg_3_fu_5053_p2(31 downto 4);
                tmp_106_reg_7474 <= tmp_136_3_fu_5039_p2(31 downto 4);
                tmp_108_reg_7479 <= tmp_136_4_fu_5103_p2(31 downto 31);
                tmp_109_reg_7484 <= p_neg_4_fu_5117_p2(31 downto 4);
                tmp_110_reg_7489 <= tmp_136_4_fu_5103_p2(31 downto 4);
                tmp_112_reg_7494 <= tmp_136_5_fu_5167_p2(31 downto 31);
                tmp_113_reg_7499 <= p_neg_5_fu_5181_p2(31 downto 4);
                tmp_114_reg_7504 <= tmp_136_5_fu_5167_p2(31 downto 4);
                tmp_116_reg_7509 <= tmp_136_6_fu_5231_p2(31 downto 31);
                tmp_117_reg_7514 <= p_neg_6_fu_5245_p2(31 downto 4);
                tmp_118_reg_7519 <= tmp_136_6_fu_5231_p2(31 downto 4);
                tmp_120_reg_7529 <= p_neg_7_fu_5309_p2(31 downto 4);
                tmp_121_reg_7534 <= tmp_136_7_fu_5295_p2(31 downto 4);
                tmp_122_reg_7524 <= tmp_136_7_fu_5295_p2(31 downto 31);
                tmp_123_reg_7544 <= p_neg_8_fu_5373_p2(31 downto 4);
                tmp_124_reg_7549 <= tmp_136_8_fu_5359_p2(31 downto 4);
                tmp_126_reg_7559 <= p_neg_9_fu_5437_p2(31 downto 4);
                tmp_127_reg_7564 <= tmp_136_9_fu_5423_p2(31 downto 4);
                tmp_128_reg_7539 <= tmp_136_8_fu_5359_p2(31 downto 31);
                tmp_129_reg_7574 <= p_neg_s_fu_5501_p2(31 downto 4);
                tmp_130_reg_7579 <= tmp_136_s_fu_5487_p2(31 downto 4);
                tmp_132_reg_7589 <= p_neg_10_fu_5565_p2(31 downto 4);
                tmp_135_reg_7554 <= tmp_136_9_fu_5423_p2(31 downto 31);
                tmp_136_reg_7594 <= tmp_136_10_fu_5551_p2(31 downto 4);
                tmp_138_reg_7604 <= p_neg_11_fu_5629_p2(31 downto 4);
                tmp_139_reg_7609 <= tmp_136_11_fu_5615_p2(31 downto 4);
                tmp_140_reg_7569 <= tmp_136_s_fu_5487_p2(31 downto 31);
                tmp_141_reg_7619 <= p_neg_12_fu_5693_p2(31 downto 4);
                tmp_142_reg_7624 <= tmp_136_12_fu_5679_p2(31 downto 4);
                tmp_144_reg_7634 <= p_neg_13_fu_5757_p2(31 downto 4);
                tmp_145_reg_7639 <= tmp_136_13_fu_5743_p2(31 downto 4);
                tmp_146_reg_7584 <= tmp_136_10_fu_5551_p2(31 downto 31);
                tmp_147_reg_7649 <= p_neg_14_fu_5821_p2(31 downto 4);
                tmp_148_reg_7654 <= tmp_136_14_fu_5807_p2(31 downto 4);
                tmp_151_reg_7599 <= tmp_136_11_fu_5615_p2(31 downto 31);
                tmp_153_reg_7614 <= tmp_136_12_fu_5679_p2(31 downto 31);
                tmp_155_reg_7629 <= tmp_136_13_fu_5743_p2(31 downto 31);
                tmp_157_reg_7644 <= tmp_136_14_fu_5807_p2(31 downto 31);
                tmp_89_reg_7383 <= k1_reg_3411(4 downto 4);
                tmp_92_reg_7419 <= tmp_91_fu_4847_p2(31 downto 31);
                tmp_93_reg_7424 <= p_neg_fu_4861_p2(31 downto 4);
                tmp_94_reg_7429 <= tmp_91_fu_4847_p2(31 downto 4);
                tmp_96_reg_7434 <= tmp_136_1_fu_4911_p2(31 downto 31);
                tmp_97_reg_7439 <= p_neg_1_fu_4925_p2(31 downto 4);
                tmp_98_reg_7444 <= tmp_136_1_fu_4911_p2(31 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond4_reg_7330 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond2_reg_6579 = ap_const_lv1_0)))) then
                reg_3433 <= BUS_SRC_DST_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                    tmp_10_reg_6626(5 downto 0) <= tmp_10_fu_3569_p1(5 downto 0);
                    tmp_13_reg_6636(5 downto 0) <= tmp_13_fu_3577_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                    tmp_11_reg_6723(3 downto 0) <= tmp_11_fu_3710_p1(3 downto 0);
                tmp_15_reg_6733 <= grp_fu_3630_p2;
                tmp_16_reg_6738 <= grp_fu_3644_p2;
                tmp_18_reg_6743 <= grp_fu_3654_p2;
                tmp_19_reg_6748 <= grp_fu_3664_p2;
                tmp_21_reg_6753 <= grp_fu_3670_p2;
                tmp_22_reg_6758 <= grp_fu_3676_p2;
                tmp_24_reg_6763 <= grp_fu_3682_p2;
                tmp_25_reg_6768 <= grp_fu_3688_p2;
                    tmp_9_reg_6713(3 downto 0) <= tmp_9_fu_3702_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (exitcond5_fu_6445_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                tmp_149_reg_7833 <= tmp_149_fu_6481_p34;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                    tmp_2_reg_6656(3 downto 0) <= tmp_2_fu_3582_p1(3 downto 0);
                    tmp_6_reg_6666(3 downto 0) <= tmp_6_fu_3593_p3(3 downto 0);
                    tmp_8_reg_6671(3 downto 0) <= tmp_8_fu_3601_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state23) and (exitcond9_fu_3532_p2 = ap_const_lv1_0))) then
                    tmp_3_reg_6616(4 downto 0) <= tmp_3_fu_3559_p1(4 downto 0);
                tmp_4_reg_6601 <= tmp_4_fu_3544_p2;
                    tmp_5_reg_6606(3 downto 0) <= tmp_5_fu_3550_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                tmp_45_reg_6945 <= tmp_45_fu_4025_p2;
                tmp_48_reg_6950 <= tmp_48_fu_4029_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                tmp_52_reg_7095 <= grp_fu_4149_p2;
                tmp_53_reg_7100 <= grp_fu_4161_p2;
                tmp_55_reg_7105 <= grp_fu_4170_p2;
                tmp_56_reg_7110 <= grp_fu_4179_p2;
                tmp_58_reg_7115 <= grp_fu_4185_p2;
                tmp_59_reg_7120 <= grp_fu_4191_p2;
                tmp_61_reg_7125 <= grp_fu_4197_p2;
                tmp_62_reg_7130 <= grp_fu_4203_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                tmp_64_reg_7085 <= tmp_64_fu_4209_p2;
                tmp_66_reg_7090 <= tmp_66_fu_4214_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                tmp_83_reg_7297 <= tmp_83_fu_4492_p2;
                tmp_84_reg_7302 <= tmp_84_fu_4496_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond4_fu_4529_p2 = ap_const_lv1_0))) then
                tmp_87_reg_7339 <= tmp_87_fu_4541_p1;
                tmp_88_reg_7343 <= indvar3_reg_936(4 downto 4);
            end if;
        end if;
    end process;
    BUS_SRC_DST_addr_reg_6551(63 downto 62) <= "00";
    BUS_SRC_DST_addr_1_reg_6559(63 downto 62) <= "00";
    i_cast1_reg_6588(5 downto 4) <= "00";
    tmp_5_reg_6606(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    tmp_3_reg_6616(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    tmp_10_reg_6626(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    tmp_13_reg_6636(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    tmp_2_reg_6656(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    tmp_6_reg_6666(4) <= '1';
    tmp_8_reg_6671(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000001";
    tmp_9_reg_6713(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000010";
    tmp_11_reg_6723(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000011";
    tmp_27_reg_6797(1 downto 0) <= "00";
    tmp_29_reg_6802(1 downto 0) <= "00";
    tmp_50_reg_6964(2 downto 0) <= "000";
    aptr_assign_15_sum1_reg_6970(2 downto 0) <= "001";
    aptr_1_reg_6975(2 downto 0) <= "001";
    aptr_assign_13_sum2_reg_6980(2 downto 0) <= "011";
    aptr_3_reg_6985(2 downto 0) <= "011";
    aptr_assign_13_sum2_s_reg_6990(2 downto 0) <= "011";
    aptr_assign_13_sum2_s_reg_6990(6) <= '0';
    aptr_5_reg_7001(2 downto 0) <= "101";
    aptr_7_reg_7006(2 downto 0) <= "111";
    aptr_reg_7011(2 downto 0) <= "000";
    aptr_2_reg_7016(2 downto 0) <= "010";
    aptr_4_reg_7043(2 downto 0) <= "100";
    aptr_6_reg_7048(2 downto 0) <= "110";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state12, ap_enable_reg_pp1_iter1, ap_CS_fsm_state36, exitcond8_fu_4033_p2, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state62, ap_enable_reg_pp2_iter2, ap_enable_reg_pp3_iter1, ap_CS_fsm_state76, ap_CS_fsm_state2, ap_enable_reg_pp0_iter1, BUS_SRC_DST_BVALID, ap_enable_reg_pp2_iter1, exitcond1_fu_3494_p2, ap_enable_reg_pp0_iter0, exitcond2_fu_3511_p2, ap_enable_reg_pp1_iter0, ap_CS_fsm_state23, exitcond9_fu_3532_p2, ap_sig_ioackin_BUS_SRC_DST_AWREADY, ap_block_state36_io, exitcond3_fu_4500_p2, ap_enable_reg_pp2_iter0, exitcond7_fu_4517_p2, ap_CS_fsm_state63, exitcond_fu_4809_p2, ap_CS_fsm_state68, exitcond5_fu_6445_p2, ap_enable_reg_pp4_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2, ap_block_pp2_stage0_subdone, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter2, ap_block_pp4_stage0_subdone, ap_sig_ioackin_BUS_SRC_DST_ARREADY)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_sig_ioackin_BUS_SRC_DST_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond1_fu_3494_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond1_fu_3494_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_sig_ioackin_BUS_SRC_DST_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (exitcond2_fu_3511_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) and not(((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (exitcond2_fu_3511_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state23) and (exitcond9_fu_3532_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state36 => 
                if (((ap_const_boolean_0 = ap_block_state36_io) and (ap_const_logic_1 = ap_CS_fsm_state36) and (exitcond8_fu_4033_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_const_boolean_0 = ap_block_state36_io) and (ap_const_logic_1 = ap_CS_fsm_state36) and (exitcond8_fu_4033_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (exitcond3_fu_4500_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) and not(((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (exitcond3_fu_4500_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                if (((ap_const_logic_1 = BUS_SRC_DST_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state55))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state56 => 
                if (((ap_sig_ioackin_BUS_SRC_DST_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state56))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                if (((ap_sig_ioackin_BUS_SRC_DST_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state62))) then
                    ap_NS_fsm <= ap_ST_fsm_state63;
                else
                    ap_NS_fsm <= ap_ST_fsm_state62;
                end if;
            when ap_ST_fsm_state63 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state63) and (exitcond7_fu_4517_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state73;
                end if;
            when ap_ST_fsm_pp3_stage0 => 
                if (not(((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state67;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state68) and (exitcond_fu_4809_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state69;
                end if;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_pp4_stage0 => 
                if (not(((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (exitcond5_fu_6445_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                elsif (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (exitcond5_fu_6445_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state72;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                end if;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                if (((ap_const_logic_1 = BUS_SRC_DST_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state76))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state76;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    BUS_SRC_DST_ARADDR_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state56, ap_CS_fsm_state2, BUS_SRC_DST_addr_reg_6551, BUS_SRC_DST_addr_1_reg_6559, ap_reg_ioackin_BUS_SRC_DST_ARREADY)
    begin
        if ((((ap_reg_ioackin_BUS_SRC_DST_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state56)) or ((ap_reg_ioackin_BUS_SRC_DST_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            BUS_SRC_DST_ARADDR <= BUS_SRC_DST_addr_reg_6551;
        elsif (((ap_reg_ioackin_BUS_SRC_DST_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            BUS_SRC_DST_ARADDR <= BUS_SRC_DST_addr_1_reg_6559;
        else 
            BUS_SRC_DST_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    BUS_SRC_DST_ARVALID_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state56, ap_CS_fsm_state2, ap_reg_ioackin_BUS_SRC_DST_ARREADY)
    begin
        if ((((ap_reg_ioackin_BUS_SRC_DST_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_reg_ioackin_BUS_SRC_DST_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state56)) or ((ap_reg_ioackin_BUS_SRC_DST_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            BUS_SRC_DST_ARVALID <= ap_const_logic_1;
        else 
            BUS_SRC_DST_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    BUS_SRC_DST_AWVALID_assign_proc : process(ap_CS_fsm_state36, exitcond8_fu_4033_p2, ap_CS_fsm_state62, ap_reg_ioackin_BUS_SRC_DST_AWREADY)
    begin
        if ((((ap_reg_ioackin_BUS_SRC_DST_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state62)) or ((ap_reg_ioackin_BUS_SRC_DST_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state36) and (exitcond8_fu_4033_p2 = ap_const_lv1_1)))) then 
            BUS_SRC_DST_AWVALID <= ap_const_logic_1;
        else 
            BUS_SRC_DST_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    BUS_SRC_DST_BREADY_assign_proc : process(ap_CS_fsm_state55, ap_CS_fsm_state76, BUS_SRC_DST_BVALID)
    begin
        if ((((ap_const_logic_1 = BUS_SRC_DST_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state76)) or ((ap_const_logic_1 = BUS_SRC_DST_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state55)))) then 
            BUS_SRC_DST_BREADY <= ap_const_logic_1;
        else 
            BUS_SRC_DST_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    BUS_SRC_DST_RREADY_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond2_reg_6579, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, exitcond4_reg_7330, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond1_reg_6565, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_block_pp3_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond1_reg_6565 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond4_reg_7330 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond2_reg_6579 = ap_const_lv1_0)))) then 
            BUS_SRC_DST_RREADY <= ap_const_logic_1;
        else 
            BUS_SRC_DST_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    BUS_SRC_DST_WDATA_assign_proc : process(reg_3448, tmp_149_reg_7833, ap_reg_ioackin_BUS_SRC_DST_WREADY, ap_condition_2064, ap_condition_2075)
    begin
        if ((ap_reg_ioackin_BUS_SRC_DST_WREADY = ap_const_logic_0)) then
            if ((ap_const_boolean_1 = ap_condition_2075)) then 
                BUS_SRC_DST_WDATA <= tmp_149_reg_7833;
            elsif ((ap_const_boolean_1 = ap_condition_2064)) then 
                BUS_SRC_DST_WDATA <= reg_3448;
            else 
                BUS_SRC_DST_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            BUS_SRC_DST_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    BUS_SRC_DST_WVALID_assign_proc : process(ap_enable_reg_pp2_iter2, ap_reg_pp2_iter1_exitcond3_reg_7307, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, exitcond5_reg_7824, ap_reg_ioackin_BUS_SRC_DST_WREADY, ap_block_pp2_stage0_01001, ap_block_pp4_stage0_01001)
    begin
        if ((((ap_reg_ioackin_BUS_SRC_DST_WREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_01001) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (exitcond5_reg_7824 = ap_const_lv1_0)) or ((ap_reg_ioackin_BUS_SRC_DST_WREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_01001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_reg_pp2_iter1_exitcond3_reg_7307 = ap_const_lv1_0)))) then 
            BUS_SRC_DST_WVALID <= ap_const_logic_1;
        else 
            BUS_SRC_DST_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    BUS_SRC_DST_blk_n_AR_assign_proc : process(m_axi_BUS_SRC_DST_ARREADY, ap_CS_fsm_state12, ap_CS_fsm_state56, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            BUS_SRC_DST_blk_n_AR <= m_axi_BUS_SRC_DST_ARREADY;
        else 
            BUS_SRC_DST_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    BUS_SRC_DST_blk_n_AW_assign_proc : process(m_axi_BUS_SRC_DST_AWREADY, ap_CS_fsm_state36, exitcond8_fu_4033_p2, ap_CS_fsm_state62)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) or ((ap_const_logic_1 = ap_CS_fsm_state36) and (exitcond8_fu_4033_p2 = ap_const_lv1_1)))) then 
            BUS_SRC_DST_blk_n_AW <= m_axi_BUS_SRC_DST_AWREADY;
        else 
            BUS_SRC_DST_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    BUS_SRC_DST_blk_n_B_assign_proc : process(m_axi_BUS_SRC_DST_BVALID, ap_CS_fsm_state55, ap_CS_fsm_state76)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            BUS_SRC_DST_blk_n_B <= m_axi_BUS_SRC_DST_BVALID;
        else 
            BUS_SRC_DST_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    BUS_SRC_DST_blk_n_R_assign_proc : process(m_axi_BUS_SRC_DST_RVALID, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond2_reg_6579, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, exitcond4_reg_7330, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond1_reg_6565)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond1_reg_6565 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond4_reg_7330 = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond2_reg_6579 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            BUS_SRC_DST_blk_n_R <= m_axi_BUS_SRC_DST_RVALID;
        else 
            BUS_SRC_DST_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    BUS_SRC_DST_blk_n_W_assign_proc : process(m_axi_BUS_SRC_DST_WREADY, ap_enable_reg_pp2_iter2, ap_block_pp2_stage0, ap_reg_pp2_iter1_exitcond3_reg_7307, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0, exitcond5_reg_7824)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (exitcond5_reg_7824 = ap_const_lv1_0)) or ((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_reg_pp2_iter1_exitcond3_reg_7307 = ap_const_lv1_0)))) then 
            BUS_SRC_DST_blk_n_W <= m_axi_BUS_SRC_DST_WREADY;
        else 
            BUS_SRC_DST_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    a0_6_fu_3856_p2 <= std_logic_vector(unsigned(c0_reg_6773) + unsigned(c1_reg_6779));
    a0_7_fu_4380_p2 <= std_logic_vector(unsigned(c0_2_reg_7152) + unsigned(c1_2_reg_7158));
    a0_fu_3587_p2 <= std_logic_vector(shift_left(unsigned(reg_3438),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    a1_2_fu_3860_p2 <= std_logic_vector(unsigned(c0_reg_6773) - unsigned(c1_reg_6779));
    a1_5_fu_4384_p2 <= std_logic_vector(unsigned(c0_2_reg_7152) - unsigned(c1_2_reg_7158));
    a1_fu_3606_p2 <= std_logic_vector(shift_left(unsigned(reg_3443),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    a2_1_fu_3935_p4 <= tmp_33_fu_3931_p2(40 downto 9);
    a2_2_fu_3864_p2 <= std_logic_vector(unsigned(c3_reg_6791) - unsigned(c2_reg_6785));
    a2_5_fu_4388_p2 <= std_logic_vector(unsigned(c3_2_reg_7170) - unsigned(c2_2_reg_7164));
    a2_fu_3612_p2 <= std_logic_vector(shift_left(unsigned(inp1_buf_load_5_reg_6646),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    a3_4_fu_4360_p4 <= tmp_73_fu_4356_p2(40 downto 9);
    a3_6_fu_3868_p2 <= std_logic_vector(unsigned(c3_reg_6791) + unsigned(c2_reg_6785));
    a3_7_fu_4392_p2 <= std_logic_vector(unsigned(c3_2_reg_7170) + unsigned(c2_2_reg_7164));
    a3_fu_3617_p2 <= std_logic_vector(shift_left(unsigned(inp1_buf_load_7_reg_6651),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(16);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(43);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(57);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(61);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(9);
    ap_CS_fsm_state18 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state22 <= ap_CS_fsm(17);
    ap_CS_fsm_state23 <= ap_CS_fsm(18);
    ap_CS_fsm_state24 <= ap_CS_fsm(19);
    ap_CS_fsm_state25 <= ap_CS_fsm(20);
    ap_CS_fsm_state26 <= ap_CS_fsm(21);
    ap_CS_fsm_state27 <= ap_CS_fsm(22);
    ap_CS_fsm_state28 <= ap_CS_fsm(23);
    ap_CS_fsm_state29 <= ap_CS_fsm(24);
    ap_CS_fsm_state30 <= ap_CS_fsm(25);
    ap_CS_fsm_state31 <= ap_CS_fsm(26);
    ap_CS_fsm_state32 <= ap_CS_fsm(27);
    ap_CS_fsm_state33 <= ap_CS_fsm(28);
    ap_CS_fsm_state34 <= ap_CS_fsm(29);
    ap_CS_fsm_state35 <= ap_CS_fsm(30);
    ap_CS_fsm_state36 <= ap_CS_fsm(31);
    ap_CS_fsm_state37 <= ap_CS_fsm(32);
    ap_CS_fsm_state38 <= ap_CS_fsm(33);
    ap_CS_fsm_state39 <= ap_CS_fsm(34);
    ap_CS_fsm_state40 <= ap_CS_fsm(35);
    ap_CS_fsm_state41 <= ap_CS_fsm(36);
    ap_CS_fsm_state42 <= ap_CS_fsm(37);
    ap_CS_fsm_state43 <= ap_CS_fsm(38);
    ap_CS_fsm_state44 <= ap_CS_fsm(39);
    ap_CS_fsm_state45 <= ap_CS_fsm(40);
    ap_CS_fsm_state46 <= ap_CS_fsm(41);
    ap_CS_fsm_state47 <= ap_CS_fsm(42);
    ap_CS_fsm_state55 <= ap_CS_fsm(48);
    ap_CS_fsm_state56 <= ap_CS_fsm(49);
    ap_CS_fsm_state62 <= ap_CS_fsm(55);
    ap_CS_fsm_state63 <= ap_CS_fsm(56);
    ap_CS_fsm_state67 <= ap_CS_fsm(58);
    ap_CS_fsm_state68 <= ap_CS_fsm(59);
    ap_CS_fsm_state69 <= ap_CS_fsm(60);
    ap_CS_fsm_state72 <= ap_CS_fsm(62);
    ap_CS_fsm_state76 <= ap_CS_fsm(66);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond1_reg_6565, BUS_SRC_DST_RVALID)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_const_logic_0 = BUS_SRC_DST_RVALID) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond1_reg_6565 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond1_reg_6565, BUS_SRC_DST_RVALID)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = BUS_SRC_DST_RVALID) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond1_reg_6565 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_11001_assign_proc : process(ap_enable_reg_pp1_iter1, exitcond2_reg_6579, BUS_SRC_DST_RVALID)
    begin
                ap_block_pp1_stage0_11001 <= ((ap_const_logic_0 = BUS_SRC_DST_RVALID) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond2_reg_6579 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(ap_enable_reg_pp1_iter1, exitcond2_reg_6579, BUS_SRC_DST_RVALID)
    begin
                ap_block_pp1_stage0_subdone <= ((ap_const_logic_0 = BUS_SRC_DST_RVALID) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond2_reg_6579 = ap_const_lv1_0));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage0_11001_assign_proc : process(ap_enable_reg_pp2_iter2, ap_block_state50_io)
    begin
                ap_block_pp2_stage0_11001 <= ((ap_const_boolean_1 = ap_block_state50_io) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1));
    end process;


    ap_block_pp2_stage0_subdone_assign_proc : process(ap_enable_reg_pp2_iter2, ap_block_state50_io)
    begin
                ap_block_pp2_stage0_subdone <= ((ap_const_boolean_1 = ap_block_state50_io) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1));
    end process;

        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp3_stage0_11001_assign_proc : process(ap_enable_reg_pp3_iter1, exitcond4_reg_7330, BUS_SRC_DST_RVALID)
    begin
                ap_block_pp3_stage0_11001 <= ((ap_const_logic_0 = BUS_SRC_DST_RVALID) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (exitcond4_reg_7330 = ap_const_lv1_0));
    end process;


    ap_block_pp3_stage0_subdone_assign_proc : process(ap_enable_reg_pp3_iter1, exitcond4_reg_7330, BUS_SRC_DST_RVALID)
    begin
                ap_block_pp3_stage0_subdone <= ((ap_const_logic_0 = BUS_SRC_DST_RVALID) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (exitcond4_reg_7330 = ap_const_lv1_0));
    end process;

        ap_block_pp4_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp4_stage0_11001_assign_proc : process(ap_enable_reg_pp4_iter1, ap_block_state71_io)
    begin
                ap_block_pp4_stage0_11001 <= ((ap_const_boolean_1 = ap_block_state71_io) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp4_stage0_subdone_assign_proc : process(ap_enable_reg_pp4_iter1, ap_block_state71_io)
    begin
                ap_block_pp4_stage0_subdone <= ((ap_const_boolean_1 = ap_block_state71_io) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1));
    end process;


    ap_block_state10_pp0_stage0_iter1_assign_proc : process(exitcond1_reg_6565, BUS_SRC_DST_RVALID)
    begin
                ap_block_state10_pp0_stage0_iter1 <= ((ap_const_logic_0 = BUS_SRC_DST_RVALID) and (exitcond1_reg_6565 = ap_const_lv1_0));
    end process;

        ap_block_state11_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state20_pp1_stage0_iter1_assign_proc : process(exitcond2_reg_6579, BUS_SRC_DST_RVALID)
    begin
                ap_block_state20_pp1_stage0_iter1 <= ((ap_const_logic_0 = BUS_SRC_DST_RVALID) and (exitcond2_reg_6579 = ap_const_lv1_0));
    end process;

        ap_block_state21_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state36_io_assign_proc : process(exitcond8_fu_4033_p2, ap_sig_ioackin_BUS_SRC_DST_AWREADY)
    begin
                ap_block_state36_io <= ((ap_sig_ioackin_BUS_SRC_DST_AWREADY = ap_const_logic_0) and (exitcond8_fu_4033_p2 = ap_const_lv1_1));
    end process;

        ap_block_state48_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state50_io_assign_proc : process(ap_reg_pp2_iter1_exitcond3_reg_7307, ap_sig_ioackin_BUS_SRC_DST_WREADY)
    begin
                ap_block_state50_io <= ((ap_sig_ioackin_BUS_SRC_DST_WREADY = ap_const_logic_0) and (ap_reg_pp2_iter1_exitcond3_reg_7307 = ap_const_lv1_0));
    end process;

        ap_block_state50_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state65_pp3_stage0_iter1_assign_proc : process(exitcond4_reg_7330, BUS_SRC_DST_RVALID)
    begin
                ap_block_state65_pp3_stage0_iter1 <= ((ap_const_logic_0 = BUS_SRC_DST_RVALID) and (exitcond4_reg_7330 = ap_const_lv1_0));
    end process;

        ap_block_state66_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp4_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state71_io_assign_proc : process(exitcond5_reg_7824, ap_sig_ioackin_BUS_SRC_DST_WREADY)
    begin
                ap_block_state71_io <= ((ap_sig_ioackin_BUS_SRC_DST_WREADY = ap_const_logic_0) and (exitcond5_reg_7824 = ap_const_lv1_0));
    end process;

        ap_block_state71_pp4_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_2064_assign_proc : process(ap_enable_reg_pp2_iter2, ap_reg_pp2_iter1_exitcond3_reg_7307, ap_block_pp2_stage0_01001)
    begin
                ap_condition_2064 <= ((ap_const_boolean_0 = ap_block_pp2_stage0_01001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_reg_pp2_iter1_exitcond3_reg_7307 = ap_const_lv1_0));
    end process;


    ap_condition_2075_assign_proc : process(ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, exitcond5_reg_7824, ap_block_pp4_stage0_01001)
    begin
                ap_condition_2075 <= ((ap_const_boolean_0 = ap_block_pp4_stage0_01001) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (exitcond5_reg_7824 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state9_assign_proc : process(exitcond1_fu_3494_p2)
    begin
        if ((exitcond1_fu_3494_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state9 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state19_assign_proc : process(exitcond2_fu_3511_p2)
    begin
        if ((exitcond2_fu_3511_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state19 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state48_assign_proc : process(exitcond3_fu_4500_p2)
    begin
        if ((exitcond3_fu_4500_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state48 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state48 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp4_exit_iter0_state70_assign_proc : process(exitcond5_fu_6445_p2)
    begin
        if ((exitcond5_fu_6445_p2 = ap_const_lv1_1)) then 
            ap_condition_pp4_exit_iter0_state70 <= ap_const_logic_1;
        else 
            ap_condition_pp4_exit_iter0_state70 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state76, BUS_SRC_DST_BVALID)
    begin
        if (((ap_const_logic_1 = BUS_SRC_DST_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);
    ap_enable_pp4 <= (ap_idle_pp4 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp4_assign_proc : process(ap_enable_reg_pp4_iter1, ap_enable_reg_pp4_iter0)
    begin
        if (((ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_0))) then 
            ap_idle_pp4 <= ap_const_logic_1;
        else 
            ap_idle_pp4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_indvar1_phi_fu_499_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond2_reg_6579, indvar1_reg_495, indvar_next1_reg_6583)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond2_reg_6579 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            ap_phi_mux_indvar1_phi_fu_499_p4 <= indvar_next1_reg_6583;
        else 
            ap_phi_mux_indvar1_phi_fu_499_p4 <= indvar1_reg_495;
        end if; 
    end process;


    ap_phi_mux_indvar_phi_fu_487_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond1_reg_6565, indvar_reg_483, indvar_next_reg_6569)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond1_reg_6565 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_phi_fu_487_p4 <= indvar_next_reg_6569;
        else 
            ap_phi_mux_indvar_phi_fu_487_p4 <= indvar_reg_483;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_0_0_2_phi_fu_2977_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_0_0_1_reg_1288, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_0_0_2_reg_2973, inp3_buf_15_1_8_fu_4785_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0))) then 
            ap_phi_mux_inp3_buf_0_0_2_phi_fu_2977_p32 <= inp3_buf_15_1_8_fu_4785_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_0_0_2_phi_fu_2977_p32 <= inp3_buf_0_0_1_reg_1288;
        else 
            ap_phi_mux_inp3_buf_0_0_2_phi_fu_2977_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_0_0_2_reg_2973;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_0_1_2_phi_fu_2923_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_0_1_1_reg_1277, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_0_1_2_reg_2919, inp3_buf_0_1_5_fu_4777_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0))) then 
            ap_phi_mux_inp3_buf_0_1_2_phi_fu_2923_p32 <= inp3_buf_0_1_5_fu_4777_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_0_1_2_phi_fu_2923_p32 <= inp3_buf_0_1_1_reg_1277;
        else 
            ap_phi_mux_inp3_buf_0_1_2_phi_fu_2923_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_0_1_2_reg_2919;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_10_0_s_phi_fu_1897_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_10_0_1_reg_1068, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_10_0_s_reg_1893, inp3_buf_15_1_18_fu_4625_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A))) then 
            ap_phi_mux_inp3_buf_10_0_s_phi_fu_1897_p32 <= inp3_buf_15_1_18_fu_4625_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_10_0_s_phi_fu_1897_p32 <= inp3_buf_10_0_1_reg_1068;
        else 
            ap_phi_mux_inp3_buf_10_0_s_phi_fu_1897_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_10_0_s_reg_1893;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_10_1_2_phi_fu_1843_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_10_1_1_reg_1057, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_10_1_2_reg_1839, inp3_buf_10_1_5_fu_4617_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A))) then 
            ap_phi_mux_inp3_buf_10_1_2_phi_fu_1843_p32 <= inp3_buf_10_1_5_fu_4617_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_10_1_2_phi_fu_1843_p32 <= inp3_buf_10_1_1_reg_1057;
        else 
            ap_phi_mux_inp3_buf_10_1_2_phi_fu_1843_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_10_1_2_reg_1839;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_11_0_s_phi_fu_1789_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_11_0_1_reg_1046, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_11_0_s_reg_1785, inp3_buf_15_1_19_fu_4609_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B))) then 
            ap_phi_mux_inp3_buf_11_0_s_phi_fu_1789_p32 <= inp3_buf_15_1_19_fu_4609_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_11_0_s_phi_fu_1789_p32 <= inp3_buf_11_0_1_reg_1046;
        else 
            ap_phi_mux_inp3_buf_11_0_s_phi_fu_1789_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_11_0_s_reg_1785;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_11_1_2_phi_fu_1735_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_11_1_1_reg_1035, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_11_1_2_reg_1731, inp3_buf_11_1_5_fu_4601_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B))) then 
            ap_phi_mux_inp3_buf_11_1_2_phi_fu_1735_p32 <= inp3_buf_11_1_5_fu_4601_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_11_1_2_phi_fu_1735_p32 <= inp3_buf_11_1_1_reg_1035;
        else 
            ap_phi_mux_inp3_buf_11_1_2_phi_fu_1735_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_11_1_2_reg_1731;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_12_0_s_phi_fu_1681_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_12_0_1_reg_1024, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_12_0_s_reg_1677, inp3_buf_15_1_20_fu_4593_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C))) then 
            ap_phi_mux_inp3_buf_12_0_s_phi_fu_1681_p32 <= inp3_buf_15_1_20_fu_4593_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_12_0_s_phi_fu_1681_p32 <= inp3_buf_12_0_1_reg_1024;
        else 
            ap_phi_mux_inp3_buf_12_0_s_phi_fu_1681_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_12_0_s_reg_1677;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_12_1_2_phi_fu_1627_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_12_1_1_reg_1013, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_12_1_2_reg_1623, inp3_buf_12_1_5_fu_4585_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C))) then 
            ap_phi_mux_inp3_buf_12_1_2_phi_fu_1627_p32 <= inp3_buf_12_1_5_fu_4585_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_12_1_2_phi_fu_1627_p32 <= inp3_buf_12_1_1_reg_1013;
        else 
            ap_phi_mux_inp3_buf_12_1_2_phi_fu_1627_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_12_1_2_reg_1623;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_13_0_s_phi_fu_1573_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_13_0_1_reg_1002, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_13_0_s_reg_1569, inp3_buf_15_1_21_fu_4577_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D))) then 
            ap_phi_mux_inp3_buf_13_0_s_phi_fu_1573_p32 <= inp3_buf_15_1_21_fu_4577_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_13_0_s_phi_fu_1573_p32 <= inp3_buf_13_0_1_reg_1002;
        else 
            ap_phi_mux_inp3_buf_13_0_s_phi_fu_1573_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_13_0_s_reg_1569;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_13_1_2_phi_fu_1519_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_13_1_1_reg_991, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_13_1_2_reg_1515, inp3_buf_13_1_5_fu_4569_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D))) then 
            ap_phi_mux_inp3_buf_13_1_2_phi_fu_1519_p32 <= inp3_buf_13_1_5_fu_4569_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_13_1_2_phi_fu_1519_p32 <= inp3_buf_13_1_1_reg_991;
        else 
            ap_phi_mux_inp3_buf_13_1_2_phi_fu_1519_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_13_1_2_reg_1515;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_14_0_s_phi_fu_1465_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_14_0_1_reg_980, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_14_0_s_reg_1461, inp3_buf_15_1_22_fu_4561_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E))) then 
            ap_phi_mux_inp3_buf_14_0_s_phi_fu_1465_p32 <= inp3_buf_15_1_22_fu_4561_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_14_0_s_phi_fu_1465_p32 <= inp3_buf_14_0_1_reg_980;
        else 
            ap_phi_mux_inp3_buf_14_0_s_phi_fu_1465_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_14_0_s_reg_1461;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_14_1_2_phi_fu_1411_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_14_1_1_reg_969, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_14_1_2_reg_1407, inp3_buf_14_1_5_fu_4553_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E))) then 
            ap_phi_mux_inp3_buf_14_1_2_phi_fu_1411_p32 <= inp3_buf_14_1_5_fu_4553_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_14_1_2_phi_fu_1411_p32 <= inp3_buf_14_1_1_reg_969;
        else 
            ap_phi_mux_inp3_buf_14_1_2_phi_fu_1411_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_14_1_2_reg_1407;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_15_0_s_phi_fu_1357_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_15_0_1_reg_958, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, inp3_buf_15_1_7_fu_4801_p3, ap_phi_reg_pp3_iter2_inp3_buf_15_0_s_reg_1353)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)))) then 
            ap_phi_mux_inp3_buf_15_0_s_phi_fu_1357_p32 <= inp3_buf_15_0_1_reg_958;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F))) then 
            ap_phi_mux_inp3_buf_15_0_s_phi_fu_1357_p32 <= inp3_buf_15_1_7_fu_4801_p3;
        else 
            ap_phi_mux_inp3_buf_15_0_s_phi_fu_1357_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_15_0_s_reg_1353;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_15_1_2_phi_fu_1303_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_15_1_1_reg_947, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, inp3_buf_15_1_5_fu_4793_p3, ap_phi_reg_pp3_iter2_inp3_buf_15_1_2_reg_1299)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)))) then 
            ap_phi_mux_inp3_buf_15_1_2_phi_fu_1303_p32 <= inp3_buf_15_1_1_reg_947;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F))) then 
            ap_phi_mux_inp3_buf_15_1_2_phi_fu_1303_p32 <= inp3_buf_15_1_5_fu_4793_p3;
        else 
            ap_phi_mux_inp3_buf_15_1_2_phi_fu_1303_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_15_1_2_reg_1299;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_1_0_s_phi_fu_2869_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_1_0_1_reg_1266, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_1_0_s_reg_2865, inp3_buf_15_1_9_fu_4769_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1))) then 
            ap_phi_mux_inp3_buf_1_0_s_phi_fu_2869_p32 <= inp3_buf_15_1_9_fu_4769_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_1_0_s_phi_fu_2869_p32 <= inp3_buf_1_0_1_reg_1266;
        else 
            ap_phi_mux_inp3_buf_1_0_s_phi_fu_2869_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_1_0_s_reg_2865;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_1_1_2_phi_fu_2815_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_1_1_1_reg_1255, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_1_1_2_reg_2811, inp3_buf_1_1_5_fu_4761_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1))) then 
            ap_phi_mux_inp3_buf_1_1_2_phi_fu_2815_p32 <= inp3_buf_1_1_5_fu_4761_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_1_1_2_phi_fu_2815_p32 <= inp3_buf_1_1_1_reg_1255;
        else 
            ap_phi_mux_inp3_buf_1_1_2_phi_fu_2815_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_1_1_2_reg_2811;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_2_0_s_phi_fu_2761_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_2_0_1_reg_1244, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_2_0_s_reg_2757, inp3_buf_15_1_10_fu_4753_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2))) then 
            ap_phi_mux_inp3_buf_2_0_s_phi_fu_2761_p32 <= inp3_buf_15_1_10_fu_4753_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_2_0_s_phi_fu_2761_p32 <= inp3_buf_2_0_1_reg_1244;
        else 
            ap_phi_mux_inp3_buf_2_0_s_phi_fu_2761_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_2_0_s_reg_2757;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_2_1_2_phi_fu_2707_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_2_1_1_reg_1233, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_2_1_2_reg_2703, inp3_buf_2_1_5_fu_4745_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2))) then 
            ap_phi_mux_inp3_buf_2_1_2_phi_fu_2707_p32 <= inp3_buf_2_1_5_fu_4745_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_2_1_2_phi_fu_2707_p32 <= inp3_buf_2_1_1_reg_1233;
        else 
            ap_phi_mux_inp3_buf_2_1_2_phi_fu_2707_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_2_1_2_reg_2703;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_3_0_s_phi_fu_2653_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_3_0_1_reg_1222, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_3_0_s_reg_2649, inp3_buf_15_1_11_fu_4737_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3))) then 
            ap_phi_mux_inp3_buf_3_0_s_phi_fu_2653_p32 <= inp3_buf_15_1_11_fu_4737_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_3_0_s_phi_fu_2653_p32 <= inp3_buf_3_0_1_reg_1222;
        else 
            ap_phi_mux_inp3_buf_3_0_s_phi_fu_2653_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_3_0_s_reg_2649;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_3_1_2_phi_fu_2599_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_3_1_1_reg_1211, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_3_1_2_reg_2595, inp3_buf_3_1_5_fu_4729_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3))) then 
            ap_phi_mux_inp3_buf_3_1_2_phi_fu_2599_p32 <= inp3_buf_3_1_5_fu_4729_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_3_1_2_phi_fu_2599_p32 <= inp3_buf_3_1_1_reg_1211;
        else 
            ap_phi_mux_inp3_buf_3_1_2_phi_fu_2599_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_3_1_2_reg_2595;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_4_0_s_phi_fu_2545_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_4_0_1_reg_1200, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_4_0_s_reg_2541, inp3_buf_15_1_12_fu_4721_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4))) then 
            ap_phi_mux_inp3_buf_4_0_s_phi_fu_2545_p32 <= inp3_buf_15_1_12_fu_4721_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_4_0_s_phi_fu_2545_p32 <= inp3_buf_4_0_1_reg_1200;
        else 
            ap_phi_mux_inp3_buf_4_0_s_phi_fu_2545_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_4_0_s_reg_2541;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_4_1_2_phi_fu_2491_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_4_1_1_reg_1189, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_4_1_2_reg_2487, inp3_buf_4_1_5_fu_4713_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4))) then 
            ap_phi_mux_inp3_buf_4_1_2_phi_fu_2491_p32 <= inp3_buf_4_1_5_fu_4713_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_4_1_2_phi_fu_2491_p32 <= inp3_buf_4_1_1_reg_1189;
        else 
            ap_phi_mux_inp3_buf_4_1_2_phi_fu_2491_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_4_1_2_reg_2487;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_5_0_s_phi_fu_2437_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_5_0_1_reg_1178, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_5_0_s_reg_2433, inp3_buf_15_1_13_fu_4705_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5))) then 
            ap_phi_mux_inp3_buf_5_0_s_phi_fu_2437_p32 <= inp3_buf_15_1_13_fu_4705_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_5_0_s_phi_fu_2437_p32 <= inp3_buf_5_0_1_reg_1178;
        else 
            ap_phi_mux_inp3_buf_5_0_s_phi_fu_2437_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_5_0_s_reg_2433;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_5_1_2_phi_fu_2383_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_5_1_1_reg_1167, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_5_1_2_reg_2379, inp3_buf_5_1_5_fu_4697_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5))) then 
            ap_phi_mux_inp3_buf_5_1_2_phi_fu_2383_p32 <= inp3_buf_5_1_5_fu_4697_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_5_1_2_phi_fu_2383_p32 <= inp3_buf_5_1_1_reg_1167;
        else 
            ap_phi_mux_inp3_buf_5_1_2_phi_fu_2383_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_5_1_2_reg_2379;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_6_0_s_phi_fu_2329_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_6_0_1_reg_1156, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_6_0_s_reg_2325, inp3_buf_15_1_14_fu_4689_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6))) then 
            ap_phi_mux_inp3_buf_6_0_s_phi_fu_2329_p32 <= inp3_buf_15_1_14_fu_4689_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_6_0_s_phi_fu_2329_p32 <= inp3_buf_6_0_1_reg_1156;
        else 
            ap_phi_mux_inp3_buf_6_0_s_phi_fu_2329_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_6_0_s_reg_2325;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_6_1_2_phi_fu_2275_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_6_1_1_reg_1145, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_6_1_2_reg_2271, inp3_buf_6_1_5_fu_4681_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6))) then 
            ap_phi_mux_inp3_buf_6_1_2_phi_fu_2275_p32 <= inp3_buf_6_1_5_fu_4681_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_6_1_2_phi_fu_2275_p32 <= inp3_buf_6_1_1_reg_1145;
        else 
            ap_phi_mux_inp3_buf_6_1_2_phi_fu_2275_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_6_1_2_reg_2271;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_7_0_s_phi_fu_2221_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_7_0_1_reg_1134, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_7_0_s_reg_2217, inp3_buf_15_1_15_fu_4673_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7))) then 
            ap_phi_mux_inp3_buf_7_0_s_phi_fu_2221_p32 <= inp3_buf_15_1_15_fu_4673_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_7_0_s_phi_fu_2221_p32 <= inp3_buf_7_0_1_reg_1134;
        else 
            ap_phi_mux_inp3_buf_7_0_s_phi_fu_2221_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_7_0_s_reg_2217;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_7_1_2_phi_fu_2167_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_7_1_1_reg_1123, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_7_1_2_reg_2163, inp3_buf_7_1_5_fu_4665_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7))) then 
            ap_phi_mux_inp3_buf_7_1_2_phi_fu_2167_p32 <= inp3_buf_7_1_5_fu_4665_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_7_1_2_phi_fu_2167_p32 <= inp3_buf_7_1_1_reg_1123;
        else 
            ap_phi_mux_inp3_buf_7_1_2_phi_fu_2167_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_7_1_2_reg_2163;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_8_0_s_phi_fu_2113_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_8_0_1_reg_1112, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_8_0_s_reg_2109, inp3_buf_15_1_16_fu_4657_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8))) then 
            ap_phi_mux_inp3_buf_8_0_s_phi_fu_2113_p32 <= inp3_buf_15_1_16_fu_4657_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_8_0_s_phi_fu_2113_p32 <= inp3_buf_8_0_1_reg_1112;
        else 
            ap_phi_mux_inp3_buf_8_0_s_phi_fu_2113_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_8_0_s_reg_2109;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_8_1_2_phi_fu_2059_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_8_1_1_reg_1101, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_8_1_2_reg_2055, inp3_buf_8_1_5_fu_4649_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8))) then 
            ap_phi_mux_inp3_buf_8_1_2_phi_fu_2059_p32 <= inp3_buf_8_1_5_fu_4649_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_8_1_2_phi_fu_2059_p32 <= inp3_buf_8_1_1_reg_1101;
        else 
            ap_phi_mux_inp3_buf_8_1_2_phi_fu_2059_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_8_1_2_reg_2055;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_9_0_s_phi_fu_2005_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_9_0_1_reg_1090, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_9_0_s_reg_2001, inp3_buf_15_1_17_fu_4641_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9))) then 
            ap_phi_mux_inp3_buf_9_0_s_phi_fu_2005_p32 <= inp3_buf_15_1_17_fu_4641_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_9_0_s_phi_fu_2005_p32 <= inp3_buf_9_0_1_reg_1090;
        else 
            ap_phi_mux_inp3_buf_9_0_s_phi_fu_2005_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_9_0_s_reg_2001;
        end if; 
    end process;


    ap_phi_mux_inp3_buf_9_1_2_phi_fu_1951_p32_assign_proc : process(ap_block_pp3_stage0, inp3_buf_9_1_1_reg_1079, ap_reg_pp3_iter1_exitcond4_reg_7330, ap_reg_pp3_iter1_tmp_87_reg_7339, ap_enable_reg_pp3_iter2, ap_phi_reg_pp3_iter2_inp3_buf_9_1_2_reg_1947, inp3_buf_9_1_5_fu_4633_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_9))) then 
            ap_phi_mux_inp3_buf_9_1_2_phi_fu_1951_p32 <= inp3_buf_9_1_5_fu_4633_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_2)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_5)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_6)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_8)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_A)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_B)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_C)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_D)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_E)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_reg_pp3_iter1_exitcond4_reg_7330 = ap_const_lv1_0) and (ap_reg_pp3_iter1_tmp_87_reg_7339 = ap_const_lv4_F)))) then 
            ap_phi_mux_inp3_buf_9_1_2_phi_fu_1951_p32 <= inp3_buf_9_1_1_reg_1079;
        else 
            ap_phi_mux_inp3_buf_9_1_2_phi_fu_1951_p32 <= ap_phi_reg_pp3_iter2_inp3_buf_9_1_2_reg_1947;
        end if; 
    end process;

    ap_phi_reg_pp3_iter2_inp3_buf_0_0_2_reg_2973 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_0_1_2_reg_2919 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_10_0_s_reg_1893 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_10_1_2_reg_1839 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_11_0_s_reg_1785 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_11_1_2_reg_1731 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_12_0_s_reg_1677 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_12_1_2_reg_1623 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_13_0_s_reg_1569 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_13_1_2_reg_1515 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_14_0_s_reg_1461 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_14_1_2_reg_1407 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_15_0_s_reg_1353 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_15_1_2_reg_1299 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_1_0_s_reg_2865 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_1_1_2_reg_2811 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_2_0_s_reg_2757 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_2_1_2_reg_2703 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_3_0_s_reg_2649 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_3_1_2_reg_2595 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_4_0_s_reg_2541 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_4_1_2_reg_2487 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_5_0_s_reg_2433 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_5_1_2_reg_2379 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_6_0_s_reg_2325 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_6_1_2_reg_2271 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_7_0_s_reg_2217 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_7_1_2_reg_2163 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_8_0_s_reg_2109 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_8_1_2_reg_2055 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_9_0_s_reg_2001 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp3_iter2_inp3_buf_9_1_2_reg_1947 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_state76, BUS_SRC_DST_BVALID)
    begin
        if (((ap_const_logic_1 = BUS_SRC_DST_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_ioackin_BUS_SRC_DST_ARREADY_assign_proc : process(BUS_SRC_DST_ARREADY, ap_reg_ioackin_BUS_SRC_DST_ARREADY)
    begin
        if ((ap_reg_ioackin_BUS_SRC_DST_ARREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_BUS_SRC_DST_ARREADY <= BUS_SRC_DST_ARREADY;
        else 
            ap_sig_ioackin_BUS_SRC_DST_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_BUS_SRC_DST_AWREADY_assign_proc : process(BUS_SRC_DST_AWREADY, ap_reg_ioackin_BUS_SRC_DST_AWREADY)
    begin
        if ((ap_reg_ioackin_BUS_SRC_DST_AWREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_BUS_SRC_DST_AWREADY <= BUS_SRC_DST_AWREADY;
        else 
            ap_sig_ioackin_BUS_SRC_DST_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_BUS_SRC_DST_WREADY_assign_proc : process(BUS_SRC_DST_WREADY, ap_reg_ioackin_BUS_SRC_DST_WREADY)
    begin
        if ((ap_reg_ioackin_BUS_SRC_DST_WREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_BUS_SRC_DST_WREADY <= BUS_SRC_DST_WREADY;
        else 
            ap_sig_ioackin_BUS_SRC_DST_WREADY <= ap_const_logic_1;
        end if; 
    end process;

    aptr_assign_10_sum_c_fu_4136_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(aptr_assign_10_sum_fu_4131_p2),64));
    aptr_assign_10_sum_fu_4131_p2 <= std_logic_vector(unsigned(ap_const_lv7_3) + unsigned(aptr_assign_13_sum2_s_reg_6990));
    aptr_assign_11_sum_c_fu_4088_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(aptr_assign_11_sum_fu_4082_p2),64));
    aptr_assign_11_sum_fu_4082_p2 <= std_logic_vector(unsigned(ap_const_lv7_2) + unsigned(aptr_assign_13_sum2_s_fu_4079_p1));
    aptr_assign_12_sum_c_fu_4126_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(aptr_assign_12_sum_fu_4121_p2),64));
    aptr_assign_12_sum_fu_4121_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(aptr_assign_13_sum2_s_reg_6990));
    aptr_assign_13_sum2_1_fu_4074_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(aptr_assign_13_sum2_fu_4068_p2),64));
    aptr_assign_13_sum2_fu_4068_p2 <= (tmp_50_fu_4049_p3 or ap_const_lv6_3);
    aptr_assign_13_sum2_s_fu_4079_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(aptr_assign_13_sum2_reg_6980),7));
    aptr_assign_14_sum_c_fu_4116_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(aptr_assign_14_sum_fu_4110_p2),64));
    aptr_assign_14_sum_fu_4110_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(aptr_assign_15_sum1_s_fu_4107_p1));
    aptr_assign_15_sum1_1_fu_4063_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(aptr_assign_15_sum1_fu_4057_p2),64));
    aptr_assign_15_sum1_fu_4057_p2 <= (tmp_50_fu_4049_p3 or ap_const_lv6_1);
    aptr_assign_15_sum1_s_fu_4107_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(aptr_assign_15_sum1_reg_6970),7));
    aptr_assign_9_sum3_c_fu_4098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(aptr_assign_9_sum3_fu_4093_p2),64));
    aptr_assign_9_sum3_fu_4093_p2 <= (tmp_50_reg_6964 or ap_const_lv6_7);
    b0_1_fu_3989_p2 <= std_logic_vector(unsigned(a3_1_reg_6893) + unsigned(a0_1_reg_6887));
    b0_3_fu_4370_p2 <= std_logic_vector(unsigned(a3_4_fu_4360_p4) + unsigned(a0_4_reg_7176));
    b0_fu_3715_p2 <= std_logic_vector(shift_left(unsigned(reg_3438),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    b1_1_fu_3959_p2 <= std_logic_vector(unsigned(a2_1_fu_3935_p4) + unsigned(a1_1_reg_6851));
    b1_3_fu_4454_p2 <= std_logic_vector(unsigned(a2_4_reg_7207) + unsigned(a1_4_reg_7247));
    b1_fu_3721_p2 <= std_logic_vector(shift_left(unsigned(inp1_buf_q1),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    b2_1_fu_3964_p2 <= std_logic_vector(unsigned(a1_1_reg_6851) - unsigned(a2_1_fu_3935_p4));
    b2_3_fu_4458_p2 <= std_logic_vector(unsigned(a1_4_reg_7247) - unsigned(a2_4_reg_7207));
    b2_fu_3803_p2 <= std_logic_vector(shift_left(unsigned(reg_3443),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    b3_1_fu_3993_p2 <= std_logic_vector(unsigned(a0_1_reg_6887) - unsigned(a3_1_reg_6893));
    b3_3_fu_4375_p2 <= std_logic_vector(unsigned(a0_4_reg_7176) - unsigned(a3_4_fu_4360_p4));
    b3_fu_3809_p2 <= std_logic_vector(shift_left(unsigned(reg_3438),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    exitcond1_fu_3494_p2 <= "1" when (ap_phi_mux_indvar_phi_fu_487_p4 = ap_const_lv7_40) else "0";
    exitcond2_fu_3511_p2 <= "1" when (ap_phi_mux_indvar1_phi_fu_499_p4 = ap_const_lv7_40) else "0";
    exitcond3_fu_4500_p2 <= "1" when (indvar2_reg_530 = ap_const_lv7_40) else "0";
    exitcond4_fu_4529_p2 <= "1" when (indvar3_reg_936 = ap_const_lv6_20) else "0";
    exitcond5_fu_6445_p2 <= "1" when (indvar4_reg_3422 = ap_const_lv6_20) else "0";
    exitcond7_fu_4517_p2 <= "1" when (i_2_reg_925 = ap_const_lv2_2) else "0";
    exitcond8_fu_4033_p2 <= "1" when (i_1_reg_519 = ap_const_lv4_8) else "0";
    exitcond9_fu_3532_p2 <= "1" when (i_reg_507 = ap_const_lv4_8) else "0";
    exitcond_fu_4809_p2 <= "1" when (k1_reg_3411 = ap_const_lv6_20) else "0";
    grp_fu_3630_p0 <= ap_const_lv40_64(8 - 1 downto 0);
    grp_fu_3644_p0 <= ap_const_lv41_1FFFFFFFE0A(10 - 1 downto 0);
    grp_fu_3654_p0 <= ap_const_lv41_1AA(10 - 1 downto 0);
    grp_fu_3654_p1 <= tmp_22_cast_fu_3650_p1(32 - 1 downto 0);
    grp_fu_3664_p0 <= ap_const_lv41_1FFFFFFFEE4(10 - 1 downto 0);
    grp_fu_3664_p1 <= tmp_24_cast_fu_3660_p1(32 - 1 downto 0);
    grp_fu_3670_p0 <= ap_const_lv41_1AA(10 - 1 downto 0);
    grp_fu_3670_p1 <= tmp_24_cast_fu_3660_p1(32 - 1 downto 0);
    grp_fu_3676_p0 <= ap_const_lv41_11C(10 - 1 downto 0);
    grp_fu_3676_p1 <= tmp_22_cast_fu_3650_p1(32 - 1 downto 0);
    grp_fu_3682_p0 <= ap_const_lv41_1F6(10 - 1 downto 0);
    grp_fu_3688_p0 <= ap_const_lv40_64(8 - 1 downto 0);
    grp_fu_3818_p0 <= ap_const_lv41_16A(10 - 1 downto 0);
    grp_fu_3828_p0 <= ap_const_lv41_C4(9 - 1 downto 0);
    grp_fu_3828_p1 <= tmp_44_cast_fu_3824_p1(32 - 1 downto 0);
    grp_fu_3838_p0 <= ap_const_lv41_1FFFFFFFE27(10 - 1 downto 0);
    grp_fu_3838_p1 <= tmp_46_cast_fu_3834_p1(32 - 1 downto 0);
    grp_fu_3844_p0 <= ap_const_lv41_1D9(10 - 1 downto 0);
    grp_fu_3844_p1 <= tmp_44_cast_fu_3824_p1(32 - 1 downto 0);
    grp_fu_3850_p0 <= ap_const_lv41_C4(9 - 1 downto 0);
    grp_fu_3850_p1 <= tmp_46_cast_fu_3834_p1(32 - 1 downto 0);
    grp_fu_3887_p0 <= ap_const_lv41_16A(10 - 1 downto 0);
    grp_fu_3906_p0 <= ap_const_lv41_16A(10 - 1 downto 0);
    grp_fu_3915_p0 <= ap_const_lv41_16A(10 - 1 downto 0);
    grp_fu_4149_p0 <= ap_const_lv40_64(8 - 1 downto 0);
    grp_fu_4161_p0 <= ap_const_lv41_1FFFFFFFE0A(10 - 1 downto 0);
    grp_fu_4170_p0 <= ap_const_lv41_1AA(10 - 1 downto 0);
    grp_fu_4170_p1 <= tmp_78_cast_fu_4167_p1(32 - 1 downto 0);
    grp_fu_4179_p0 <= ap_const_lv41_1FFFFFFFEE4(10 - 1 downto 0);
    grp_fu_4179_p1 <= tmp_80_cast_fu_4176_p1(32 - 1 downto 0);
    grp_fu_4185_p0 <= ap_const_lv41_1AA(10 - 1 downto 0);
    grp_fu_4185_p1 <= tmp_80_cast_fu_4176_p1(32 - 1 downto 0);
    grp_fu_4191_p0 <= ap_const_lv41_11C(10 - 1 downto 0);
    grp_fu_4191_p1 <= tmp_78_cast_fu_4167_p1(32 - 1 downto 0);
    grp_fu_4197_p0 <= ap_const_lv41_1F6(10 - 1 downto 0);
    grp_fu_4203_p0 <= ap_const_lv40_64(8 - 1 downto 0);
    grp_fu_4222_p0 <= ap_const_lv41_16A(10 - 1 downto 0);
    grp_fu_4231_p0 <= ap_const_lv41_C4(9 - 1 downto 0);
    grp_fu_4231_p1 <= tmp_100_cast_fu_4228_p1(32 - 1 downto 0);
    grp_fu_4241_p0 <= ap_const_lv41_1FFFFFFFE27(10 - 1 downto 0);
    grp_fu_4241_p1 <= tmp_102_cast_fu_4237_p1(32 - 1 downto 0);
    grp_fu_4247_p0 <= ap_const_lv41_1D9(10 - 1 downto 0);
    grp_fu_4247_p1 <= tmp_100_cast_fu_4228_p1(32 - 1 downto 0);
    grp_fu_4253_p0 <= ap_const_lv41_C4(9 - 1 downto 0);
    grp_fu_4253_p1 <= tmp_102_cast_fu_4237_p1(32 - 1 downto 0);
    grp_fu_4336_p0 <= ap_const_lv41_16A(10 - 1 downto 0);
    grp_fu_4421_p0 <= ap_const_lv41_16A(10 - 1 downto 0);
    grp_fu_4430_p0 <= ap_const_lv41_16A(10 - 1 downto 0);
    i_3_fu_3538_p2 <= std_logic_vector(unsigned(i_reg_507) + unsigned(ap_const_lv4_1));
    i_4_fu_4039_p2 <= std_logic_vector(unsigned(i_1_reg_519) + unsigned(ap_const_lv4_1));
    i_5_fu_4523_p2 <= std_logic_vector(unsigned(i_2_reg_925) + unsigned(ap_const_lv2_1));
    i_cast1_fu_3528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_507),6));
    indvar_next1_fu_3517_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar1_phi_fu_499_p4) + unsigned(ap_const_lv7_1));
    indvar_next2_fu_4506_p2 <= std_logic_vector(unsigned(indvar2_reg_530) + unsigned(ap_const_lv7_1));
    indvar_next3_fu_4535_p2 <= std_logic_vector(unsigned(indvar3_reg_936) + unsigned(ap_const_lv6_1));
    indvar_next4_fu_6451_p2 <= std_logic_vector(unsigned(indvar4_reg_3422) + unsigned(ap_const_lv6_1));
    indvar_next_fu_3500_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_phi_fu_487_p4) + unsigned(ap_const_lv7_1));

    inp1_buf_address0_assign_proc : process(ap_block_pp0_stage0, ap_CS_fsm_state24, ap_CS_fsm_state27, ap_CS_fsm_state23, tmp_5_fu_3550_p1, tmp_13_fu_3577_p1, ap_CS_fsm_state26, tmp_8_fu_3601_p1, tmp_11_fu_3710_p1, ap_enable_reg_pp0_iter2, tmp_fu_3506_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            inp1_buf_address0 <= tmp_11_fu_3710_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            inp1_buf_address0 <= tmp_8_fu_3601_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            inp1_buf_address0 <= tmp_13_fu_3577_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            inp1_buf_address0 <= tmp_5_fu_3550_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            inp1_buf_address0 <= tmp_fu_3506_p1(6 - 1 downto 0);
        else 
            inp1_buf_address0 <= "XXXXXX";
        end if; 
    end process;


    inp1_buf_address1_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state27, ap_CS_fsm_state23, tmp_3_fu_3559_p1, tmp_10_fu_3569_p1, tmp_2_fu_3582_p1, ap_CS_fsm_state26, tmp_9_fu_3702_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            inp1_buf_address1 <= tmp_9_fu_3702_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            inp1_buf_address1 <= tmp_2_fu_3582_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            inp1_buf_address1 <= tmp_10_fu_3569_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            inp1_buf_address1 <= tmp_3_fu_3559_p1(6 - 1 downto 0);
        else 
            inp1_buf_address1 <= "XXXXXX";
        end if; 
    end process;


    inp1_buf_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_state24, ap_CS_fsm_state27, ap_CS_fsm_state23, ap_CS_fsm_state26, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state24) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            inp1_buf_ce0 <= ap_const_logic_1;
        else 
            inp1_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inp1_buf_ce1_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state27, ap_CS_fsm_state23, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            inp1_buf_ce1 <= ap_const_logic_1;
        else 
            inp1_buf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    inp1_buf_we0_assign_proc : process(ap_block_pp0_stage0_11001, ap_reg_pp0_iter1_exitcond1_reg_6565, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_reg_pp0_iter1_exitcond1_reg_6565 = ap_const_lv1_0))) then 
            inp1_buf_we0 <= ap_const_logic_1;
        else 
            inp1_buf_we0 <= ap_const_logic_0;
        end if; 
    end process;


    inp2_buf_address0_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_state36, ap_CS_fsm_state37, tmp_5_reg_6606, tmp_3_reg_6616, tmp_10_reg_6626, tmp_13_reg_6636, ap_CS_fsm_state32, ap_CS_fsm_state33, aptr_3_reg_6985, aptr_7_reg_7006, ap_CS_fsm_state38, aptr_2_reg_7016, ap_CS_fsm_state39, aptr_6_reg_7048, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_enable_reg_pp1_iter2, ap_CS_fsm_state35, ap_CS_fsm_state47, tmp_1_fu_3523_p1, ap_CS_fsm_state34, aptr_assign_13_sum2_1_fu_4074_p1, aptr_assign_9_sum3_c_fu_4098_p1, aptr_assign_14_sum_c_fu_4116_p1, aptr_assign_10_sum_c_fu_4136_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            inp2_buf_address0 <= aptr_6_reg_7048;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            inp2_buf_address0 <= aptr_2_reg_7016;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            inp2_buf_address0 <= aptr_7_reg_7006;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            inp2_buf_address0 <= aptr_3_reg_6985;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            inp2_buf_address0 <= aptr_assign_10_sum_c_fu_4136_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            inp2_buf_address0 <= aptr_assign_14_sum_c_fu_4116_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            inp2_buf_address0 <= aptr_assign_9_sum3_c_fu_4098_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            inp2_buf_address0 <= aptr_assign_13_sum2_1_fu_4074_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            inp2_buf_address0 <= tmp_13_reg_6636(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            inp2_buf_address0 <= tmp_10_reg_6626(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            inp2_buf_address0 <= tmp_3_reg_6616(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            inp2_buf_address0 <= tmp_5_reg_6606(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            inp2_buf_address0 <= tmp_1_fu_3523_p1(6 - 1 downto 0);
        else 
            inp2_buf_address0 <= "XXXXXX";
        end if; 
    end process;


    inp2_buf_address1_assign_proc : process(ap_CS_fsm_state36, ap_block_pp2_stage0, ap_CS_fsm_state37, ap_CS_fsm_pp2_stage0, tmp_2_reg_6656, tmp_8_reg_6671, tmp_9_reg_6713, tmp_11_reg_6723, ap_CS_fsm_state32, ap_CS_fsm_state33, aptr_1_reg_6975, aptr_5_reg_7001, aptr_reg_7011, ap_CS_fsm_state38, ap_CS_fsm_state39, aptr_4_reg_7043, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_enable_reg_pp2_iter0, ap_CS_fsm_state35, ap_CS_fsm_state47, ap_CS_fsm_state34, aptr_assign_15_sum1_1_fu_4063_p1, aptr_assign_11_sum_c_fu_4088_p1, tmp_51_fu_4103_p1, aptr_assign_12_sum_c_fu_4126_p1, tmp_86_fu_4512_p1)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            inp2_buf_address1 <= tmp_86_fu_4512_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            inp2_buf_address1 <= aptr_5_reg_7001;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            inp2_buf_address1 <= aptr_1_reg_6975;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            inp2_buf_address1 <= aptr_4_reg_7043;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            inp2_buf_address1 <= aptr_reg_7011;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            inp2_buf_address1 <= aptr_assign_12_sum_c_fu_4126_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            inp2_buf_address1 <= tmp_51_fu_4103_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            inp2_buf_address1 <= aptr_assign_11_sum_c_fu_4088_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            inp2_buf_address1 <= aptr_assign_15_sum1_1_fu_4063_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            inp2_buf_address1 <= tmp_11_reg_6723(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            inp2_buf_address1 <= tmp_9_reg_6713(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            inp2_buf_address1 <= tmp_2_reg_6656(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            inp2_buf_address1 <= tmp_8_reg_6671(6 - 1 downto 0);
        else 
            inp2_buf_address1 <= "XXXXXX";
        end if; 
    end process;


    inp2_buf_ce0_assign_proc : process(ap_CS_fsm_state36, ap_block_pp1_stage0_11001, ap_CS_fsm_state37, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_block_state36_io, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_enable_reg_pp1_iter2, ap_CS_fsm_state35, ap_CS_fsm_state47, ap_CS_fsm_state34)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state35) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_state36_io) and (ap_const_logic_1 = ap_CS_fsm_state36)))) then 
            inp2_buf_ce0 <= ap_const_logic_1;
        else 
            inp2_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inp2_buf_ce1_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_block_state36_io, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_enable_reg_pp2_iter0, ap_CS_fsm_state35, ap_CS_fsm_state47, ap_CS_fsm_state34)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state35) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_state36_io) and (ap_const_logic_1 = ap_CS_fsm_state36)))) then 
            inp2_buf_ce1 <= ap_const_logic_1;
        else 
            inp2_buf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    inp2_buf_d0_assign_proc : process(ap_block_pp1_stage0, reg_3433, ap_CS_fsm_state32, tmp_46_reg_6935, ap_CS_fsm_state33, tmp_48_reg_6950, ap_CS_fsm_state44, tmp_85_reg_7268, ap_CS_fsm_state45, ap_CS_fsm_state46, tmp_84_reg_7302, ap_enable_reg_pp1_iter2, ap_CS_fsm_state35, ap_CS_fsm_state47, ap_CS_fsm_state34, tmp_42_fu_3997_p2, tmp_44_fu_4020_p2, tmp_81_fu_4441_p2, tmp_80_fu_4487_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            inp2_buf_d0 <= tmp_84_reg_7302;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            inp2_buf_d0 <= tmp_80_fu_4487_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            inp2_buf_d0 <= tmp_85_reg_7268;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            inp2_buf_d0 <= tmp_81_fu_4441_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            inp2_buf_d0 <= tmp_48_reg_6950;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            inp2_buf_d0 <= tmp_46_reg_6935;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            inp2_buf_d0 <= tmp_44_fu_4020_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            inp2_buf_d0 <= tmp_42_fu_3997_p2;
        elsif (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            inp2_buf_d0 <= reg_3433;
        else 
            inp2_buf_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    inp2_buf_d1_assign_proc : process(ap_CS_fsm_state32, tmp_47_reg_6940, tmp_45_reg_6945, ap_CS_fsm_state33, ap_CS_fsm_state44, tmp_82_reg_7263, ap_CS_fsm_state45, tmp_83_reg_7297, ap_CS_fsm_state46, ap_CS_fsm_state35, ap_CS_fsm_state47, ap_CS_fsm_state34, tmp_43_fu_4002_p2, tmp_41_fu_4015_p2, tmp_78_fu_4436_p2, tmp_79_fu_4482_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            inp2_buf_d1 <= tmp_83_reg_7297;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            inp2_buf_d1 <= tmp_79_fu_4482_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            inp2_buf_d1 <= tmp_82_reg_7263;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            inp2_buf_d1 <= tmp_78_fu_4436_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            inp2_buf_d1 <= tmp_47_reg_6940;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            inp2_buf_d1 <= tmp_45_reg_6945;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            inp2_buf_d1 <= tmp_41_fu_4015_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            inp2_buf_d1 <= tmp_43_fu_4002_p2;
        else 
            inp2_buf_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    inp2_buf_we0_assign_proc : process(ap_block_pp1_stage0_11001, ap_reg_pp1_iter1_exitcond2_reg_6579, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_enable_reg_pp1_iter2, ap_CS_fsm_state35, ap_CS_fsm_state47, ap_CS_fsm_state34)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state35) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_reg_pp1_iter1_exitcond2_reg_6579 = ap_const_lv1_0)))) then 
            inp2_buf_we0 <= ap_const_logic_1;
        else 
            inp2_buf_we0 <= ap_const_logic_0;
        end if; 
    end process;


    inp2_buf_we1_assign_proc : process(ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state35, ap_CS_fsm_state47, ap_CS_fsm_state34)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            inp2_buf_we1 <= ap_const_logic_1;
        else 
            inp2_buf_we1 <= ap_const_logic_0;
        end if; 
    end process;

        inp3_buf_0_0_3_cas_fu_5872_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inp3_buf_0_1_9_fu_5865_p3),32));

    inp3_buf_0_1_4_fu_5876_p3 <= 
        inp3_buf_0_0_3_cas_fu_5872_p1 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_0_1_3_reg_3387;
    inp3_buf_0_1_5_fu_4777_p3 <= 
        reg_3433 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        inp3_buf_0_1_1_reg_1277;
    inp3_buf_0_1_8_fu_5883_p3 <= 
        inp3_buf_0_0_s_reg_3399 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_0_0_3_cas_fu_5872_p1;
    inp3_buf_0_1_9_fu_5865_p3 <= 
        p_neg_t_fu_5856_p2 when (tmp_92_reg_7419(0) = '1') else 
        p_lshr_f_cast_fu_5862_p1;
        inp3_buf_10_0_2_ca_fu_6242_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inp3_buf_10_1_9_fu_6235_p3),32));

    inp3_buf_10_1_4_fu_6246_p3 <= 
        inp3_buf_10_0_2_ca_fu_6242_p1 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_10_1_3_reg_3147;
    inp3_buf_10_1_5_fu_4617_p3 <= 
        reg_3433 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        inp3_buf_10_1_1_reg_1057;
    inp3_buf_10_1_8_fu_6253_p3 <= 
        inp3_buf_10_0_3_reg_3159 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_10_0_2_ca_fu_6242_p1;
    inp3_buf_10_1_9_fu_6235_p3 <= 
        p_neg_t_s_fu_6226_p2 when (tmp_140_reg_7569(0) = '1') else 
        p_lshr_f_cast_45_fu_6232_p1;
        inp3_buf_11_0_2_ca_fu_6279_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inp3_buf_11_1_9_fu_6272_p3),32));

    inp3_buf_11_1_4_fu_6283_p3 <= 
        inp3_buf_11_0_2_ca_fu_6279_p1 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_11_1_3_reg_3123;
    inp3_buf_11_1_5_fu_4601_p3 <= 
        reg_3433 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        inp3_buf_11_1_1_reg_1035;
    inp3_buf_11_1_8_fu_6290_p3 <= 
        inp3_buf_11_0_3_reg_3135 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_11_0_2_ca_fu_6279_p1;
    inp3_buf_11_1_9_fu_6272_p3 <= 
        p_neg_t_10_fu_6263_p2 when (tmp_146_reg_7584(0) = '1') else 
        p_lshr_f_10_cast_fu_6269_p1;
        inp3_buf_12_0_2_ca_fu_6316_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inp3_buf_12_1_9_fu_6309_p3),32));

    inp3_buf_12_1_4_fu_6320_p3 <= 
        inp3_buf_12_0_2_ca_fu_6316_p1 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_12_1_3_reg_3099;
    inp3_buf_12_1_5_fu_4585_p3 <= 
        reg_3433 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        inp3_buf_12_1_1_reg_1013;
    inp3_buf_12_1_8_fu_6327_p3 <= 
        inp3_buf_12_0_3_reg_3111 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_12_0_2_ca_fu_6316_p1;
    inp3_buf_12_1_9_fu_6309_p3 <= 
        p_neg_t_11_fu_6300_p2 when (tmp_151_reg_7599(0) = '1') else 
        p_lshr_f_11_cast_fu_6306_p1;
        inp3_buf_13_0_2_ca_fu_6353_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inp3_buf_13_1_9_fu_6346_p3),32));

    inp3_buf_13_1_4_fu_6357_p3 <= 
        inp3_buf_13_0_2_ca_fu_6353_p1 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_13_1_3_reg_3075;
    inp3_buf_13_1_5_fu_4569_p3 <= 
        reg_3433 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        inp3_buf_13_1_1_reg_991;
    inp3_buf_13_1_8_fu_6364_p3 <= 
        inp3_buf_13_0_3_reg_3087 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_13_0_2_ca_fu_6353_p1;
    inp3_buf_13_1_9_fu_6346_p3 <= 
        p_neg_t_12_fu_6337_p2 when (tmp_153_reg_7614(0) = '1') else 
        p_lshr_f_12_cast_fu_6343_p1;
        inp3_buf_14_0_2_ca_fu_6390_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inp3_buf_14_1_9_fu_6383_p3),32));

    inp3_buf_14_1_4_fu_6394_p3 <= 
        inp3_buf_14_0_2_ca_fu_6390_p1 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_14_1_3_reg_3051;
    inp3_buf_14_1_5_fu_4553_p3 <= 
        reg_3433 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        inp3_buf_14_1_1_reg_969;
    inp3_buf_14_1_8_fu_6401_p3 <= 
        inp3_buf_14_0_3_reg_3063 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_14_0_2_ca_fu_6390_p1;
    inp3_buf_14_1_9_fu_6383_p3 <= 
        p_neg_t_13_fu_6374_p2 when (tmp_155_reg_7629(0) = '1') else 
        p_lshr_f_13_cast_fu_6380_p1;
        inp3_buf_15_0_2_ca_fu_6427_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inp3_buf_15_1_25_fu_6420_p3),32));

    inp3_buf_15_1_10_fu_4753_p3 <= 
        inp3_buf_2_0_1_reg_1244 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        reg_3433;
    inp3_buf_15_1_11_fu_4737_p3 <= 
        inp3_buf_3_0_1_reg_1222 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        reg_3433;
    inp3_buf_15_1_12_fu_4721_p3 <= 
        inp3_buf_4_0_1_reg_1200 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        reg_3433;
    inp3_buf_15_1_13_fu_4705_p3 <= 
        inp3_buf_5_0_1_reg_1178 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        reg_3433;
    inp3_buf_15_1_14_fu_4689_p3 <= 
        inp3_buf_6_0_1_reg_1156 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        reg_3433;
    inp3_buf_15_1_15_fu_4673_p3 <= 
        inp3_buf_7_0_1_reg_1134 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        reg_3433;
    inp3_buf_15_1_16_fu_4657_p3 <= 
        inp3_buf_8_0_1_reg_1112 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        reg_3433;
    inp3_buf_15_1_17_fu_4641_p3 <= 
        inp3_buf_9_0_1_reg_1090 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        reg_3433;
    inp3_buf_15_1_18_fu_4625_p3 <= 
        inp3_buf_10_0_1_reg_1068 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        reg_3433;
    inp3_buf_15_1_19_fu_4609_p3 <= 
        inp3_buf_11_0_1_reg_1046 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        reg_3433;
    inp3_buf_15_1_20_fu_4593_p3 <= 
        inp3_buf_12_0_1_reg_1024 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        reg_3433;
    inp3_buf_15_1_21_fu_4577_p3 <= 
        inp3_buf_13_0_1_reg_1002 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        reg_3433;
    inp3_buf_15_1_22_fu_4561_p3 <= 
        inp3_buf_14_0_1_reg_980 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        reg_3433;
    inp3_buf_15_1_24_fu_6438_p3 <= 
        inp3_buf_15_0_3_reg_3039 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_15_0_2_ca_fu_6427_p1;
    inp3_buf_15_1_25_fu_6420_p3 <= 
        p_neg_t_14_fu_6411_p2 when (tmp_157_reg_7644(0) = '1') else 
        p_lshr_f_14_cast_fu_6417_p1;
    inp3_buf_15_1_4_fu_6431_p3 <= 
        inp3_buf_15_0_2_ca_fu_6427_p1 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_15_1_3_reg_3027;
    inp3_buf_15_1_5_fu_4793_p3 <= 
        reg_3433 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        inp3_buf_15_1_1_reg_947;
    inp3_buf_15_1_7_fu_4801_p3 <= 
        inp3_buf_15_0_1_reg_958 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        reg_3433;
    inp3_buf_15_1_8_fu_4785_p3 <= 
        inp3_buf_0_0_1_reg_1288 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        reg_3433;
    inp3_buf_15_1_9_fu_4769_p3 <= 
        inp3_buf_1_0_1_reg_1266 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        reg_3433;
        inp3_buf_1_0_2_cas_fu_5909_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inp3_buf_1_1_9_fu_5902_p3),32));

    inp3_buf_1_1_4_fu_5913_p3 <= 
        inp3_buf_1_0_2_cas_fu_5909_p1 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_1_1_3_reg_3363;
    inp3_buf_1_1_5_fu_4761_p3 <= 
        reg_3433 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        inp3_buf_1_1_1_reg_1255;
    inp3_buf_1_1_8_fu_5920_p3 <= 
        inp3_buf_1_0_3_reg_3375 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_1_0_2_cas_fu_5909_p1;
    inp3_buf_1_1_9_fu_5902_p3 <= 
        p_neg_t_1_fu_5893_p2 when (tmp_96_reg_7434(0) = '1') else 
        p_lshr_f_1_cast_fu_5899_p1;
        inp3_buf_2_0_2_cas_fu_5946_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inp3_buf_2_1_9_fu_5939_p3),32));

    inp3_buf_2_1_4_fu_5950_p3 <= 
        inp3_buf_2_0_2_cas_fu_5946_p1 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_2_1_3_reg_3339;
    inp3_buf_2_1_5_fu_4745_p3 <= 
        reg_3433 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        inp3_buf_2_1_1_reg_1233;
    inp3_buf_2_1_8_fu_5957_p3 <= 
        inp3_buf_2_0_3_reg_3351 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_2_0_2_cas_fu_5946_p1;
    inp3_buf_2_1_9_fu_5939_p3 <= 
        p_neg_t_2_fu_5930_p2 when (tmp_100_reg_7449(0) = '1') else 
        p_lshr_f_2_cast_fu_5936_p1;
        inp3_buf_3_0_2_cas_fu_5983_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inp3_buf_3_1_9_fu_5976_p3),32));

    inp3_buf_3_1_4_fu_5987_p3 <= 
        inp3_buf_3_0_2_cas_fu_5983_p1 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_3_1_3_reg_3315;
    inp3_buf_3_1_5_fu_4729_p3 <= 
        reg_3433 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        inp3_buf_3_1_1_reg_1211;
    inp3_buf_3_1_8_fu_5994_p3 <= 
        inp3_buf_3_0_3_reg_3327 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_3_0_2_cas_fu_5983_p1;
    inp3_buf_3_1_9_fu_5976_p3 <= 
        p_neg_t_3_fu_5967_p2 when (tmp_104_reg_7464(0) = '1') else 
        p_lshr_f_3_cast_fu_5973_p1;
        inp3_buf_4_0_2_cas_fu_6020_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inp3_buf_4_1_9_fu_6013_p3),32));

    inp3_buf_4_1_4_fu_6024_p3 <= 
        inp3_buf_4_0_2_cas_fu_6020_p1 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_4_1_3_reg_3291;
    inp3_buf_4_1_5_fu_4713_p3 <= 
        reg_3433 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        inp3_buf_4_1_1_reg_1189;
    inp3_buf_4_1_8_fu_6031_p3 <= 
        inp3_buf_4_0_3_reg_3303 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_4_0_2_cas_fu_6020_p1;
    inp3_buf_4_1_9_fu_6013_p3 <= 
        p_neg_t_4_fu_6004_p2 when (tmp_108_reg_7479(0) = '1') else 
        p_lshr_f_4_cast_fu_6010_p1;
        inp3_buf_5_0_2_cas_fu_6057_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inp3_buf_5_1_9_fu_6050_p3),32));

    inp3_buf_5_1_4_fu_6061_p3 <= 
        inp3_buf_5_0_2_cas_fu_6057_p1 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_5_1_3_reg_3267;
    inp3_buf_5_1_5_fu_4697_p3 <= 
        reg_3433 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        inp3_buf_5_1_1_reg_1167;
    inp3_buf_5_1_8_fu_6068_p3 <= 
        inp3_buf_5_0_3_reg_3279 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_5_0_2_cas_fu_6057_p1;
    inp3_buf_5_1_9_fu_6050_p3 <= 
        p_neg_t_5_fu_6041_p2 when (tmp_112_reg_7494(0) = '1') else 
        p_lshr_f_5_cast_fu_6047_p1;
        inp3_buf_6_0_2_cas_fu_6094_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inp3_buf_6_1_9_fu_6087_p3),32));

    inp3_buf_6_1_4_fu_6098_p3 <= 
        inp3_buf_6_0_2_cas_fu_6094_p1 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_6_1_3_reg_3243;
    inp3_buf_6_1_5_fu_4681_p3 <= 
        reg_3433 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        inp3_buf_6_1_1_reg_1145;
    inp3_buf_6_1_8_fu_6105_p3 <= 
        inp3_buf_6_0_3_reg_3255 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_6_0_2_cas_fu_6094_p1;
    inp3_buf_6_1_9_fu_6087_p3 <= 
        p_neg_t_6_fu_6078_p2 when (tmp_116_reg_7509(0) = '1') else 
        p_lshr_f_6_cast_fu_6084_p1;
        inp3_buf_7_0_2_cas_fu_6131_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inp3_buf_7_1_9_fu_6124_p3),32));

    inp3_buf_7_1_4_fu_6135_p3 <= 
        inp3_buf_7_0_2_cas_fu_6131_p1 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_7_1_3_reg_3219;
    inp3_buf_7_1_5_fu_4665_p3 <= 
        reg_3433 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        inp3_buf_7_1_1_reg_1123;
    inp3_buf_7_1_8_fu_6142_p3 <= 
        inp3_buf_7_0_3_reg_3231 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_7_0_2_cas_fu_6131_p1;
    inp3_buf_7_1_9_fu_6124_p3 <= 
        p_neg_t_7_fu_6115_p2 when (tmp_122_reg_7524(0) = '1') else 
        p_lshr_f_7_cast_fu_6121_p1;
        inp3_buf_8_0_2_cas_fu_6168_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inp3_buf_8_1_9_fu_6161_p3),32));

    inp3_buf_8_1_4_fu_6172_p3 <= 
        inp3_buf_8_0_2_cas_fu_6168_p1 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_8_1_3_reg_3195;
    inp3_buf_8_1_5_fu_4649_p3 <= 
        reg_3433 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        inp3_buf_8_1_1_reg_1101;
    inp3_buf_8_1_8_fu_6179_p3 <= 
        inp3_buf_8_0_3_reg_3207 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_8_0_2_cas_fu_6168_p1;
    inp3_buf_8_1_9_fu_6161_p3 <= 
        p_neg_t_8_fu_6152_p2 when (tmp_128_reg_7539(0) = '1') else 
        p_lshr_f_8_cast_fu_6158_p1;
        inp3_buf_9_0_2_cas_fu_6205_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inp3_buf_9_1_9_fu_6198_p3),32));

    inp3_buf_9_1_4_fu_6209_p3 <= 
        inp3_buf_9_0_2_cas_fu_6205_p1 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_9_1_3_reg_3171;
    inp3_buf_9_1_5_fu_4633_p3 <= 
        reg_3433 when (ap_reg_pp3_iter1_tmp_88_reg_7343(0) = '1') else 
        inp3_buf_9_1_1_reg_1079;
    inp3_buf_9_1_8_fu_6216_p3 <= 
        inp3_buf_9_0_3_reg_3183 when (tmp_89_reg_7383(0) = '1') else 
        inp3_buf_9_0_2_cas_fu_6205_p1;
    inp3_buf_9_1_9_fu_6198_p3 <= 
        p_neg_t_9_fu_6189_p2 when (tmp_135_reg_7554(0) = '1') else 
        p_lshr_f_9_cast_fu_6195_p1;
    inp3_buf_load_0_phi_fu_4823_p3 <= 
        inp3_buf_0_1_3_reg_3387 when (tmp_89_fu_4815_p3(0) = '1') else 
        inp3_buf_0_0_s_reg_3399;
    inp3_buf_load_10_phi_fu_5463_p3 <= 
        inp3_buf_10_1_3_reg_3147 when (tmp_89_fu_4815_p3(0) = '1') else 
        inp3_buf_10_0_3_reg_3159;
    inp3_buf_load_113_ph_fu_4887_p3 <= 
        inp3_buf_1_1_3_reg_3363 when (tmp_89_fu_4815_p3(0) = '1') else 
        inp3_buf_1_0_3_reg_3375;
    inp3_buf_load_11_phi_fu_5527_p3 <= 
        inp3_buf_11_1_3_reg_3123 when (tmp_89_fu_4815_p3(0) = '1') else 
        inp3_buf_11_0_3_reg_3135;
    inp3_buf_load_12_phi_fu_5591_p3 <= 
        inp3_buf_12_1_3_reg_3099 when (tmp_89_fu_4815_p3(0) = '1') else 
        inp3_buf_12_0_3_reg_3111;
    inp3_buf_load_13_phi_fu_5655_p3 <= 
        inp3_buf_13_1_3_reg_3075 when (tmp_89_fu_4815_p3(0) = '1') else 
        inp3_buf_13_0_3_reg_3087;
    inp3_buf_load_14_phi_fu_5719_p3 <= 
        inp3_buf_14_1_3_reg_3051 when (tmp_89_fu_4815_p3(0) = '1') else 
        inp3_buf_14_0_3_reg_3063;
    inp3_buf_load_15_phi_fu_5783_p3 <= 
        inp3_buf_15_1_3_reg_3027 when (tmp_89_fu_4815_p3(0) = '1') else 
        inp3_buf_15_0_3_reg_3039;
    inp3_buf_load_2_phi_fu_4951_p3 <= 
        inp3_buf_2_1_3_reg_3339 when (tmp_89_fu_4815_p3(0) = '1') else 
        inp3_buf_2_0_3_reg_3351;
    inp3_buf_load_3_phi_fu_5015_p3 <= 
        inp3_buf_3_1_3_reg_3315 when (tmp_89_fu_4815_p3(0) = '1') else 
        inp3_buf_3_0_3_reg_3327;
    inp3_buf_load_4_phi_fu_5079_p3 <= 
        inp3_buf_4_1_3_reg_3291 when (tmp_89_fu_4815_p3(0) = '1') else 
        inp3_buf_4_0_3_reg_3303;
    inp3_buf_load_5_phi_fu_5143_p3 <= 
        inp3_buf_5_1_3_reg_3267 when (tmp_89_fu_4815_p3(0) = '1') else 
        inp3_buf_5_0_3_reg_3279;
    inp3_buf_load_6_phi_fu_5207_p3 <= 
        inp3_buf_6_1_3_reg_3243 when (tmp_89_fu_4815_p3(0) = '1') else 
        inp3_buf_6_0_3_reg_3255;
    inp3_buf_load_7_phi_fu_5271_p3 <= 
        inp3_buf_7_1_3_reg_3219 when (tmp_89_fu_4815_p3(0) = '1') else 
        inp3_buf_7_0_3_reg_3231;
    inp3_buf_load_8_phi_fu_5335_p3 <= 
        inp3_buf_8_1_3_reg_3195 when (tmp_89_fu_4815_p3(0) = '1') else 
        inp3_buf_8_0_3_reg_3207;
    inp3_buf_load_9_phi_fu_5399_p3 <= 
        inp3_buf_9_1_3_reg_3171 when (tmp_89_fu_4815_p3(0) = '1') else 
        inp3_buf_9_0_3_reg_3183;
    k_s_fu_5847_p2 <= std_logic_vector(unsigned(k1_reg_3411) + unsigned(ap_const_lv6_10));
    p_lshr_10_cast_fu_6260_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_132_reg_7589),29));
    p_lshr_11_cast_fu_6297_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_138_reg_7604),29));
    p_lshr_12_cast_fu_6334_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_141_reg_7619),29));
    p_lshr_13_cast_fu_6371_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_144_reg_7634),29));
    p_lshr_14_cast_fu_6408_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_147_reg_7649),29));
    p_lshr_1_cast_fu_5890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_97_reg_7439),29));
    p_lshr_2_cast_fu_5927_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_101_reg_7454),29));
    p_lshr_3_cast_fu_5964_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_105_reg_7469),29));
    p_lshr_4_cast_fu_6001_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_109_reg_7484),29));
    p_lshr_5_cast_fu_6038_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_113_reg_7499),29));
    p_lshr_6_cast_fu_6075_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_117_reg_7514),29));
    p_lshr_7_cast_fu_6112_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_120_reg_7529),29));
    p_lshr_8_cast_fu_6149_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_123_reg_7544),29));
    p_lshr_9_cast_fu_6186_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_126_reg_7559),29));
    p_lshr_cast_44_fu_6223_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_129_reg_7574),29));
    p_lshr_cast_fu_5853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_93_reg_7424),29));
    p_lshr_f_10_cast_fu_6269_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_136_reg_7594),29));
    p_lshr_f_11_cast_fu_6306_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_139_reg_7609),29));
    p_lshr_f_12_cast_fu_6343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_142_reg_7624),29));
    p_lshr_f_13_cast_fu_6380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_145_reg_7639),29));
    p_lshr_f_14_cast_fu_6417_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_148_reg_7654),29));
    p_lshr_f_1_cast_fu_5899_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_98_reg_7444),29));
    p_lshr_f_2_cast_fu_5936_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_102_reg_7459),29));
    p_lshr_f_3_cast_fu_5973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_106_reg_7474),29));
    p_lshr_f_4_cast_fu_6010_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_110_reg_7489),29));
    p_lshr_f_5_cast_fu_6047_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_114_reg_7504),29));
    p_lshr_f_6_cast_fu_6084_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_118_reg_7519),29));
    p_lshr_f_7_cast_fu_6121_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_121_reg_7534),29));
    p_lshr_f_8_cast_fu_6158_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_124_reg_7549),29));
    p_lshr_f_9_cast_fu_6195_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_127_reg_7564),29));
    p_lshr_f_cast_45_fu_6232_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_130_reg_7579),29));
    p_lshr_f_cast_fu_5862_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_94_reg_7429),29));
    p_neg_10_fu_5565_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_136_10_fu_5551_p2));
    p_neg_11_fu_5629_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_136_11_fu_5615_p2));
    p_neg_12_fu_5693_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_136_12_fu_5679_p2));
    p_neg_13_fu_5757_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_136_13_fu_5743_p2));
    p_neg_14_fu_5821_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_136_14_fu_5807_p2));
    p_neg_1_fu_4925_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_136_1_fu_4911_p2));
    p_neg_2_fu_4989_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_136_2_fu_4975_p2));
    p_neg_3_fu_5053_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_136_3_fu_5039_p2));
    p_neg_4_fu_5117_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_136_4_fu_5103_p2));
    p_neg_5_fu_5181_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_136_5_fu_5167_p2));
    p_neg_6_fu_5245_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_136_6_fu_5231_p2));
    p_neg_7_fu_5309_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_136_7_fu_5295_p2));
    p_neg_8_fu_5373_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_136_8_fu_5359_p2));
    p_neg_9_fu_5437_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_136_9_fu_5423_p2));
    p_neg_fu_4861_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_91_fu_4847_p2));
    p_neg_s_fu_5501_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_136_s_fu_5487_p2));
    p_neg_t_10_fu_6263_p2 <= std_logic_vector(unsigned(ap_const_lv29_0) - unsigned(p_lshr_10_cast_fu_6260_p1));
    p_neg_t_11_fu_6300_p2 <= std_logic_vector(unsigned(ap_const_lv29_0) - unsigned(p_lshr_11_cast_fu_6297_p1));
    p_neg_t_12_fu_6337_p2 <= std_logic_vector(unsigned(ap_const_lv29_0) - unsigned(p_lshr_12_cast_fu_6334_p1));
    p_neg_t_13_fu_6374_p2 <= std_logic_vector(unsigned(ap_const_lv29_0) - unsigned(p_lshr_13_cast_fu_6371_p1));
    p_neg_t_14_fu_6411_p2 <= std_logic_vector(unsigned(ap_const_lv29_0) - unsigned(p_lshr_14_cast_fu_6408_p1));
    p_neg_t_1_fu_5893_p2 <= std_logic_vector(unsigned(ap_const_lv29_0) - unsigned(p_lshr_1_cast_fu_5890_p1));
    p_neg_t_2_fu_5930_p2 <= std_logic_vector(unsigned(ap_const_lv29_0) - unsigned(p_lshr_2_cast_fu_5927_p1));
    p_neg_t_3_fu_5967_p2 <= std_logic_vector(unsigned(ap_const_lv29_0) - unsigned(p_lshr_3_cast_fu_5964_p1));
    p_neg_t_4_fu_6004_p2 <= std_logic_vector(unsigned(ap_const_lv29_0) - unsigned(p_lshr_4_cast_fu_6001_p1));
    p_neg_t_5_fu_6041_p2 <= std_logic_vector(unsigned(ap_const_lv29_0) - unsigned(p_lshr_5_cast_fu_6038_p1));
    p_neg_t_6_fu_6078_p2 <= std_logic_vector(unsigned(ap_const_lv29_0) - unsigned(p_lshr_6_cast_fu_6075_p1));
    p_neg_t_7_fu_6115_p2 <= std_logic_vector(unsigned(ap_const_lv29_0) - unsigned(p_lshr_7_cast_fu_6112_p1));
    p_neg_t_8_fu_6152_p2 <= std_logic_vector(unsigned(ap_const_lv29_0) - unsigned(p_lshr_8_cast_fu_6149_p1));
    p_neg_t_9_fu_6189_p2 <= std_logic_vector(unsigned(ap_const_lv29_0) - unsigned(p_lshr_9_cast_fu_6186_p1));
    p_neg_t_fu_5856_p2 <= std_logic_vector(unsigned(ap_const_lv29_0) - unsigned(p_lshr_cast_fu_5853_p1));
    p_neg_t_s_fu_6226_p2 <= std_logic_vector(unsigned(ap_const_lv29_0) - unsigned(p_lshr_cast_44_fu_6223_p1));
        tmp_100_cast_fu_4228_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b2_2_reg_7038),41));

        tmp_102_cast_fu_4237_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_3448),41));

    tmp_103_fu_5023_p3 <= inp3_buf_load_3_phi_fu_5015_p3(31 downto 31);
    tmp_107_fu_5087_p3 <= inp3_buf_load_4_phi_fu_5079_p3(31 downto 31);
    tmp_10_fu_3569_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_3564_p2),64));
    tmp_111_fu_5151_p3 <= inp3_buf_load_5_phi_fu_5143_p3(31 downto 31);
    tmp_115_fu_5215_p3 <= inp3_buf_load_6_phi_fu_5207_p3(31 downto 31);
    tmp_119_fu_5279_p3 <= inp3_buf_load_7_phi_fu_5271_p3(31 downto 31);
    tmp_11_fu_3710_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_cast_fu_3707_p1),64));
    tmp_125_fu_5343_p3 <= inp3_buf_load_8_phi_fu_5335_p3(31 downto 31);
        tmp_12_cast_fu_3707_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_6_reg_6666),6));

    tmp_12_fu_3464_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y3_fu_3454_p4),64));
    tmp_131_cast_cast_fu_4839_p3 <= 
        ap_const_lv32_FFFFFFF8 when (tmp_90_fu_4831_p3(0) = '1') else 
        ap_const_lv32_8;
    tmp_131_fu_5407_p3 <= inp3_buf_load_9_phi_fu_5399_p3(31 downto 31);
    tmp_133_fu_6469_p3 <= (tmp_158_fu_6457_p1 & tmp_159_fu_6461_p3);
    tmp_136_10_fu_5551_p2 <= std_logic_vector(unsigned(tmp_169_cast_cast_fu_5543_p3) + unsigned(inp3_buf_load_11_phi_fu_5527_p3));
    tmp_136_11_fu_5615_p2 <= std_logic_vector(unsigned(tmp_172_cast_cast_fu_5607_p3) + unsigned(inp3_buf_load_12_phi_fu_5591_p3));
    tmp_136_12_fu_5679_p2 <= std_logic_vector(unsigned(tmp_175_cast_cast_fu_5671_p3) + unsigned(inp3_buf_load_13_phi_fu_5655_p3));
    tmp_136_13_fu_5743_p2 <= std_logic_vector(unsigned(tmp_178_cast_cast_fu_5735_p3) + unsigned(inp3_buf_load_14_phi_fu_5719_p3));
    tmp_136_14_fu_5807_p2 <= std_logic_vector(unsigned(tmp_181_cast_cast_fu_5799_p3) + unsigned(inp3_buf_load_15_phi_fu_5783_p3));
    tmp_136_1_fu_4911_p2 <= std_logic_vector(unsigned(tmp_139_cast_cast_fu_4903_p3) + unsigned(inp3_buf_load_113_ph_fu_4887_p3));
    tmp_136_2_fu_4975_p2 <= std_logic_vector(unsigned(tmp_142_cast_cast_fu_4967_p3) + unsigned(inp3_buf_load_2_phi_fu_4951_p3));
    tmp_136_3_fu_5039_p2 <= std_logic_vector(unsigned(tmp_145_cast_cast_fu_5031_p3) + unsigned(inp3_buf_load_3_phi_fu_5015_p3));
    tmp_136_4_fu_5103_p2 <= std_logic_vector(unsigned(tmp_148_cast_cast_fu_5095_p3) + unsigned(inp3_buf_load_4_phi_fu_5079_p3));
    tmp_136_5_fu_5167_p2 <= std_logic_vector(unsigned(tmp_151_cast_cast_fu_5159_p3) + unsigned(inp3_buf_load_5_phi_fu_5143_p3));
    tmp_136_6_fu_5231_p2 <= std_logic_vector(unsigned(tmp_154_cast_cast_fu_5223_p3) + unsigned(inp3_buf_load_6_phi_fu_5207_p3));
    tmp_136_7_fu_5295_p2 <= std_logic_vector(unsigned(tmp_157_cast_cast_fu_5287_p3) + unsigned(inp3_buf_load_7_phi_fu_5271_p3));
    tmp_136_8_fu_5359_p2 <= std_logic_vector(unsigned(tmp_160_cast_cast_fu_5351_p3) + unsigned(inp3_buf_load_8_phi_fu_5335_p3));
    tmp_136_9_fu_5423_p2 <= std_logic_vector(unsigned(tmp_163_cast_cast_fu_5415_p3) + unsigned(inp3_buf_load_9_phi_fu_5399_p3));
    tmp_136_s_fu_5487_p2 <= std_logic_vector(unsigned(tmp_166_cast_cast_fu_5479_p3) + unsigned(inp3_buf_load_10_phi_fu_5463_p3));
    tmp_137_fu_5471_p3 <= inp3_buf_load_10_phi_fu_5463_p3(31 downto 31);
    tmp_139_cast_cast_fu_4903_p3 <= 
        ap_const_lv32_FFFFFFF8 when (tmp_95_fu_4895_p3(0) = '1') else 
        ap_const_lv32_8;
    tmp_13_fu_3577_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_cast_fu_3574_p1),64));
    tmp_142_cast_cast_fu_4967_p3 <= 
        ap_const_lv32_FFFFFFF8 when (tmp_99_fu_4959_p3(0) = '1') else 
        ap_const_lv32_8;
    tmp_143_fu_5535_p3 <= inp3_buf_load_11_phi_fu_5527_p3(31 downto 31);
    tmp_145_cast_cast_fu_5031_p3 <= 
        ap_const_lv32_FFFFFFF8 when (tmp_103_fu_5023_p3(0) = '1') else 
        ap_const_lv32_8;
    tmp_148_cast_cast_fu_5095_p3 <= 
        ap_const_lv32_FFFFFFF8 when (tmp_107_fu_5087_p3(0) = '1') else 
        ap_const_lv32_8;
    tmp_149_fu_6481_p33 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_133_fu_6469_p3),6));
        tmp_14_cast_fu_3574_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_reg_6601),6));

    tmp_14_fu_3484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x1_fu_3474_p4),64));
    tmp_150_fu_5599_p3 <= inp3_buf_load_12_phi_fu_5591_p3(31 downto 31);
    tmp_151_cast_cast_fu_5159_p3 <= 
        ap_const_lv32_FFFFFFF8 when (tmp_111_fu_5151_p3(0) = '1') else 
        ap_const_lv32_8;
    tmp_152_fu_5663_p3 <= inp3_buf_load_13_phi_fu_5655_p3(31 downto 31);
    tmp_154_cast_cast_fu_5223_p3 <= 
        ap_const_lv32_FFFFFFF8 when (tmp_115_fu_5215_p3(0) = '1') else 
        ap_const_lv32_8;
    tmp_154_fu_5727_p3 <= inp3_buf_load_14_phi_fu_5719_p3(31 downto 31);
    tmp_156_fu_5791_p3 <= inp3_buf_load_15_phi_fu_5783_p3(31 downto 31);
    tmp_157_cast_cast_fu_5287_p3 <= 
        ap_const_lv32_FFFFFFF8 when (tmp_119_fu_5279_p3(0) = '1') else 
        ap_const_lv32_8;
    tmp_158_fu_6457_p1 <= indvar4_reg_3422(4 - 1 downto 0);
    tmp_159_fu_6461_p3 <= indvar4_reg_3422(4 downto 4);
    tmp_160_cast_cast_fu_5351_p3 <= 
        ap_const_lv32_FFFFFFF8 when (tmp_125_fu_5343_p3(0) = '1') else 
        ap_const_lv32_8;
    tmp_163_cast_cast_fu_5415_p3 <= 
        ap_const_lv32_FFFFFFF8 when (tmp_131_fu_5407_p3(0) = '1') else 
        ap_const_lv32_8;
    tmp_166_cast_cast_fu_5479_p3 <= 
        ap_const_lv32_FFFFFFF8 when (tmp_137_fu_5471_p3(0) = '1') else 
        ap_const_lv32_8;
    tmp_169_cast_cast_fu_5543_p3 <= 
        ap_const_lv32_FFFFFFF8 when (tmp_143_fu_5535_p3(0) = '1') else 
        ap_const_lv32_8;
    tmp_172_cast_cast_fu_5607_p3 <= 
        ap_const_lv32_FFFFFFF8 when (tmp_150_fu_5599_p3(0) = '1') else 
        ap_const_lv32_8;
    tmp_175_cast_cast_fu_5671_p3 <= 
        ap_const_lv32_FFFFFFF8 when (tmp_152_fu_5663_p3(0) = '1') else 
        ap_const_lv32_8;
    tmp_178_cast_cast_fu_5735_p3 <= 
        ap_const_lv32_FFFFFFF8 when (tmp_154_fu_5727_p3(0) = '1') else 
        ap_const_lv32_8;
        tmp_17_cast_fu_3727_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_15_reg_6733),41));

    tmp_17_fu_3730_p2 <= std_logic_vector(unsigned(tmp_16_reg_6738) + unsigned(tmp_17_cast_fu_3727_p1));
    tmp_181_cast_cast_fu_5799_p3 <= 
        ap_const_lv32_FFFFFFF8 when (tmp_156_fu_5791_p3(0) = '1') else 
        ap_const_lv32_8;
    tmp_1_fu_3523_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp1_iter1_indvar1_reg_495),64));
    tmp_20_fu_3745_p2 <= std_logic_vector(unsigned(tmp_18_reg_6743) + unsigned(tmp_19_reg_6748));
        tmp_22_cast_fu_3650_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a2_fu_3612_p2),41));

    tmp_23_fu_3759_p2 <= std_logic_vector(unsigned(tmp_22_reg_6758) + unsigned(tmp_21_reg_6753));
        tmp_24_cast_fu_3660_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a1_fu_3606_p2),41));

    tmp_26_fu_3776_p2 <= std_logic_vector(signed(tmp_33_cast_fu_3773_p1) + signed(tmp_24_reg_6763));
    tmp_27_fu_3791_p2 <= std_logic_vector(unsigned(b1_fu_3721_p2) + unsigned(b0_fu_3715_p2));
    tmp_29_fu_3797_p2 <= std_logic_vector(unsigned(b0_fu_3715_p2) - unsigned(b1_fu_3721_p2));
    tmp_2_fu_3582_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_507),64));
        tmp_33_cast_fu_3773_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_25_reg_6768),41));

    tmp_33_fu_3931_p2 <= std_logic_vector(unsigned(tmp_32_reg_6862) + unsigned(tmp_31_reg_6857));
    tmp_36_fu_3945_p2 <= std_logic_vector(unsigned(tmp_35_reg_6872) + unsigned(tmp_34_reg_6867));
    tmp_37_fu_3872_p2 <= std_logic_vector(unsigned(a2_2_fu_3864_p2) - unsigned(a1_2_fu_3860_p2));
    tmp_39_fu_3878_p2 <= std_logic_vector(unsigned(a2_2_fu_3864_p2) + unsigned(a1_2_fu_3860_p2));
    tmp_3_fu_3559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_cast_fu_3555_p1),64));
    tmp_41_fu_4015_p2 <= std_logic_vector(unsigned(a3_6_reg_6830) + unsigned(b0_1_reg_6923));
    tmp_42_fu_3997_p2 <= std_logic_vector(unsigned(c2_1_reg_6917) + unsigned(b1_1_reg_6899));
    tmp_43_fu_4002_p2 <= std_logic_vector(unsigned(c1_1_reg_6911) + unsigned(b2_1_reg_6905));
        tmp_44_cast_fu_3824_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b2_fu_3803_p2),41));

    tmp_44_fu_4020_p2 <= std_logic_vector(unsigned(a0_6_reg_6824) + unsigned(b3_1_reg_6929));
    tmp_45_fu_4025_p2 <= std_logic_vector(unsigned(b3_1_reg_6929) - unsigned(a0_6_reg_6824));
        tmp_46_cast_fu_3834_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b3_fu_3809_p2),41));

    tmp_46_fu_4007_p2 <= std_logic_vector(unsigned(b2_1_reg_6905) - unsigned(c1_1_reg_6911));
    tmp_47_fu_4011_p2 <= std_logic_vector(unsigned(b1_1_reg_6899) - unsigned(c2_1_reg_6917));
    tmp_48_fu_4029_p2 <= std_logic_vector(unsigned(b0_1_reg_6923) - unsigned(a3_6_reg_6830));
    tmp_49_fu_4045_p1 <= i_1_reg_519(3 - 1 downto 0);
    tmp_4_fu_3544_p2 <= (i_reg_507 xor ap_const_lv4_8);
    tmp_50_fu_4049_p3 <= (tmp_49_fu_4045_p1 & ap_const_lv3_0);
    tmp_51_fu_4103_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_50_reg_6964),64));
    tmp_54_fu_4262_p2 <= std_logic_vector(unsigned(tmp_53_reg_7100) + unsigned(tmp_73_cast_fu_4259_p1));
    tmp_57_fu_4277_p2 <= std_logic_vector(unsigned(tmp_55_reg_7105) + unsigned(tmp_56_reg_7110));
    tmp_5_fu_3550_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_3544_p2),64));
    tmp_60_fu_4291_p2 <= std_logic_vector(unsigned(tmp_59_reg_7120) + unsigned(tmp_58_reg_7115));
    tmp_63_fu_4308_p2 <= std_logic_vector(signed(tmp_89_cast_fu_4305_p1) + signed(tmp_61_reg_7125));
    tmp_64_fu_4209_p2 <= std_logic_vector(unsigned(inp2_buf_q1) + unsigned(b0_2_reg_7032));
    tmp_66_fu_4214_p2 <= std_logic_vector(unsigned(b0_2_reg_7032) - unsigned(inp2_buf_q1));
    tmp_6_fu_3593_p3 <= (ap_const_lv1_1 & i_reg_507);
    tmp_70_fu_4342_p2 <= std_logic_vector(unsigned(tmp_69_reg_7187) + unsigned(tmp_68_reg_7182));
        tmp_73_cast_fu_4259_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_52_reg_7095),41));

    tmp_73_fu_4356_p2 <= std_logic_vector(unsigned(tmp_72_reg_7197) + unsigned(tmp_71_reg_7192));
    tmp_74_fu_4396_p2 <= std_logic_vector(unsigned(a2_5_fu_4388_p2) - unsigned(a1_5_fu_4384_p2));
    tmp_76_fu_4402_p2 <= std_logic_vector(unsigned(a2_5_fu_4388_p2) + unsigned(a1_5_fu_4384_p2));
        tmp_78_cast_fu_4167_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a2_3_reg_7021),41));

    tmp_78_fu_4436_p2 <= std_logic_vector(unsigned(a3_7_reg_7231) + unsigned(b0_3_reg_7213));
    tmp_79_fu_4482_p2 <= std_logic_vector(unsigned(c2_3_reg_7291) + unsigned(b1_3_reg_7273));
    tmp_7_fu_3694_p3 <= (ap_const_lv2_2 & i_reg_507);
        tmp_80_cast_fu_4176_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a1_3_reg_6996),41));

    tmp_80_fu_4487_p2 <= std_logic_vector(unsigned(c1_3_reg_7285) + unsigned(b2_3_reg_7279));
    tmp_81_fu_4441_p2 <= std_logic_vector(unsigned(a0_7_reg_7225) + unsigned(b3_3_reg_7219));
    tmp_82_fu_4446_p2 <= std_logic_vector(unsigned(b3_3_reg_7219) - unsigned(a0_7_reg_7225));
    tmp_83_fu_4492_p2 <= std_logic_vector(unsigned(b2_3_reg_7279) - unsigned(c1_3_reg_7285));
    tmp_84_fu_4496_p2 <= std_logic_vector(unsigned(b1_3_reg_7273) - unsigned(c2_3_reg_7291));
    tmp_85_fu_4450_p2 <= std_logic_vector(unsigned(b0_3_reg_7213) - unsigned(a3_7_reg_7231));
    tmp_86_fu_4512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indvar2_reg_530),64));
    tmp_87_fu_4541_p1 <= indvar3_reg_936(4 - 1 downto 0);
        tmp_89_cast_fu_4305_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_62_reg_7130),41));

    tmp_89_fu_4815_p3 <= k1_reg_3411(4 downto 4);
    tmp_8_fu_3601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_3593_p3),64));
    tmp_90_fu_4831_p3 <= inp3_buf_load_0_phi_fu_4823_p3(31 downto 31);
    tmp_91_fu_4847_p2 <= std_logic_vector(unsigned(tmp_131_cast_cast_fu_4839_p3) + unsigned(inp3_buf_load_0_phi_fu_4823_p3));
    tmp_95_fu_4895_p3 <= inp3_buf_load_113_ph_fu_4887_p3(31 downto 31);
    tmp_99_fu_4959_p3 <= inp3_buf_load_2_phi_fu_4951_p3(31 downto 31);
    tmp_9_fu_3702_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_3694_p3),64));
        tmp_cast_fu_3555_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_3544_p2),5));

    tmp_fu_3506_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter1_indvar_reg_483),64));
    tmp_s_fu_3564_p2 <= std_logic_vector(signed(ap_const_lv6_28) + signed(i_cast1_reg_6588));
    x1_fu_3474_p4 <= x(63 downto 2);
    y3_fu_3454_p4 <= y(63 downto 2);
end behav;

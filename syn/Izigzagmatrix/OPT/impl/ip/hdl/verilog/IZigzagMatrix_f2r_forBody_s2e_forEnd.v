// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="IZigzagMatrix_f2r_forBody_s2e_forEnd,hls_ip_2017_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvb1156-2-i,HLS_INPUT_CLOCK=3.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.625000,HLS_SYN_LAT=156,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=4399,HLS_SYN_LUT=4761}" *)

module IZigzagMatrix_f2r_forBody_s2e_forEnd (
        s_axi_BUS_CTRL_AWVALID,
        s_axi_BUS_CTRL_AWREADY,
        s_axi_BUS_CTRL_AWADDR,
        s_axi_BUS_CTRL_WVALID,
        s_axi_BUS_CTRL_WREADY,
        s_axi_BUS_CTRL_WDATA,
        s_axi_BUS_CTRL_WSTRB,
        s_axi_BUS_CTRL_ARVALID,
        s_axi_BUS_CTRL_ARREADY,
        s_axi_BUS_CTRL_ARADDR,
        s_axi_BUS_CTRL_RVALID,
        s_axi_BUS_CTRL_RREADY,
        s_axi_BUS_CTRL_RDATA,
        s_axi_BUS_CTRL_RRESP,
        s_axi_BUS_CTRL_BVALID,
        s_axi_BUS_CTRL_BREADY,
        s_axi_BUS_CTRL_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        m_axi_BUS_SRC_AWVALID,
        m_axi_BUS_SRC_AWREADY,
        m_axi_BUS_SRC_AWADDR,
        m_axi_BUS_SRC_AWID,
        m_axi_BUS_SRC_AWLEN,
        m_axi_BUS_SRC_AWSIZE,
        m_axi_BUS_SRC_AWBURST,
        m_axi_BUS_SRC_AWLOCK,
        m_axi_BUS_SRC_AWCACHE,
        m_axi_BUS_SRC_AWPROT,
        m_axi_BUS_SRC_AWQOS,
        m_axi_BUS_SRC_AWREGION,
        m_axi_BUS_SRC_AWUSER,
        m_axi_BUS_SRC_WVALID,
        m_axi_BUS_SRC_WREADY,
        m_axi_BUS_SRC_WDATA,
        m_axi_BUS_SRC_WSTRB,
        m_axi_BUS_SRC_WLAST,
        m_axi_BUS_SRC_WID,
        m_axi_BUS_SRC_WUSER,
        m_axi_BUS_SRC_ARVALID,
        m_axi_BUS_SRC_ARREADY,
        m_axi_BUS_SRC_ARADDR,
        m_axi_BUS_SRC_ARID,
        m_axi_BUS_SRC_ARLEN,
        m_axi_BUS_SRC_ARSIZE,
        m_axi_BUS_SRC_ARBURST,
        m_axi_BUS_SRC_ARLOCK,
        m_axi_BUS_SRC_ARCACHE,
        m_axi_BUS_SRC_ARPROT,
        m_axi_BUS_SRC_ARQOS,
        m_axi_BUS_SRC_ARREGION,
        m_axi_BUS_SRC_ARUSER,
        m_axi_BUS_SRC_RVALID,
        m_axi_BUS_SRC_RREADY,
        m_axi_BUS_SRC_RDATA,
        m_axi_BUS_SRC_RLAST,
        m_axi_BUS_SRC_RID,
        m_axi_BUS_SRC_RUSER,
        m_axi_BUS_SRC_RRESP,
        m_axi_BUS_SRC_BVALID,
        m_axi_BUS_SRC_BREADY,
        m_axi_BUS_SRC_BRESP,
        m_axi_BUS_SRC_BID,
        m_axi_BUS_SRC_BUSER,
        m_axi_BUS_DST_AWVALID,
        m_axi_BUS_DST_AWREADY,
        m_axi_BUS_DST_AWADDR,
        m_axi_BUS_DST_AWID,
        m_axi_BUS_DST_AWLEN,
        m_axi_BUS_DST_AWSIZE,
        m_axi_BUS_DST_AWBURST,
        m_axi_BUS_DST_AWLOCK,
        m_axi_BUS_DST_AWCACHE,
        m_axi_BUS_DST_AWPROT,
        m_axi_BUS_DST_AWQOS,
        m_axi_BUS_DST_AWREGION,
        m_axi_BUS_DST_AWUSER,
        m_axi_BUS_DST_WVALID,
        m_axi_BUS_DST_WREADY,
        m_axi_BUS_DST_WDATA,
        m_axi_BUS_DST_WSTRB,
        m_axi_BUS_DST_WLAST,
        m_axi_BUS_DST_WID,
        m_axi_BUS_DST_WUSER,
        m_axi_BUS_DST_ARVALID,
        m_axi_BUS_DST_ARREADY,
        m_axi_BUS_DST_ARADDR,
        m_axi_BUS_DST_ARID,
        m_axi_BUS_DST_ARLEN,
        m_axi_BUS_DST_ARSIZE,
        m_axi_BUS_DST_ARBURST,
        m_axi_BUS_DST_ARLOCK,
        m_axi_BUS_DST_ARCACHE,
        m_axi_BUS_DST_ARPROT,
        m_axi_BUS_DST_ARQOS,
        m_axi_BUS_DST_ARREGION,
        m_axi_BUS_DST_ARUSER,
        m_axi_BUS_DST_RVALID,
        m_axi_BUS_DST_RREADY,
        m_axi_BUS_DST_RDATA,
        m_axi_BUS_DST_RLAST,
        m_axi_BUS_DST_RID,
        m_axi_BUS_DST_RUSER,
        m_axi_BUS_DST_RRESP,
        m_axi_BUS_DST_BVALID,
        m_axi_BUS_DST_BREADY,
        m_axi_BUS_DST_BRESP,
        m_axi_BUS_DST_BID,
        m_axi_BUS_DST_BUSER
);

parameter    C_S_AXI_BUS_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_BUS_CTRL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_BUS_SRC_ID_WIDTH = 1;
parameter    C_M_AXI_BUS_SRC_ADDR_WIDTH = 64;
parameter    C_M_AXI_BUS_SRC_DATA_WIDTH = 32;
parameter    C_M_AXI_BUS_SRC_AWUSER_WIDTH = 1;
parameter    C_M_AXI_BUS_SRC_ARUSER_WIDTH = 1;
parameter    C_M_AXI_BUS_SRC_WUSER_WIDTH = 1;
parameter    C_M_AXI_BUS_SRC_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUS_SRC_BUSER_WIDTH = 1;
parameter    C_M_AXI_BUS_SRC_USER_VALUE = 0;
parameter    C_M_AXI_BUS_SRC_PROT_VALUE = 0;
parameter    C_M_AXI_BUS_SRC_CACHE_VALUE = 3;
parameter    C_M_AXI_ID_WIDTH = 1;
parameter    C_M_AXI_ADDR_WIDTH = 64;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AWUSER_WIDTH = 1;
parameter    C_M_AXI_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WUSER_WIDTH = 1;
parameter    C_M_AXI_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUSER_WIDTH = 1;
parameter    C_M_AXI_BUS_DST_ID_WIDTH = 1;
parameter    C_M_AXI_BUS_DST_ADDR_WIDTH = 64;
parameter    C_M_AXI_BUS_DST_DATA_WIDTH = 32;
parameter    C_M_AXI_BUS_DST_AWUSER_WIDTH = 1;
parameter    C_M_AXI_BUS_DST_ARUSER_WIDTH = 1;
parameter    C_M_AXI_BUS_DST_WUSER_WIDTH = 1;
parameter    C_M_AXI_BUS_DST_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUS_DST_BUSER_WIDTH = 1;
parameter    C_M_AXI_BUS_DST_USER_VALUE = 0;
parameter    C_M_AXI_BUS_DST_PROT_VALUE = 0;
parameter    C_M_AXI_BUS_DST_CACHE_VALUE = 3;

parameter C_S_AXI_BUS_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_BUS_SRC_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_BUS_DST_WSTRB_WIDTH = (32 / 8);

input   s_axi_BUS_CTRL_AWVALID;
output   s_axi_BUS_CTRL_AWREADY;
input  [C_S_AXI_BUS_CTRL_ADDR_WIDTH - 1:0] s_axi_BUS_CTRL_AWADDR;
input   s_axi_BUS_CTRL_WVALID;
output   s_axi_BUS_CTRL_WREADY;
input  [C_S_AXI_BUS_CTRL_DATA_WIDTH - 1:0] s_axi_BUS_CTRL_WDATA;
input  [C_S_AXI_BUS_CTRL_WSTRB_WIDTH - 1:0] s_axi_BUS_CTRL_WSTRB;
input   s_axi_BUS_CTRL_ARVALID;
output   s_axi_BUS_CTRL_ARREADY;
input  [C_S_AXI_BUS_CTRL_ADDR_WIDTH - 1:0] s_axi_BUS_CTRL_ARADDR;
output   s_axi_BUS_CTRL_RVALID;
input   s_axi_BUS_CTRL_RREADY;
output  [C_S_AXI_BUS_CTRL_DATA_WIDTH - 1:0] s_axi_BUS_CTRL_RDATA;
output  [1:0] s_axi_BUS_CTRL_RRESP;
output   s_axi_BUS_CTRL_BVALID;
input   s_axi_BUS_CTRL_BREADY;
output  [1:0] s_axi_BUS_CTRL_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
output   m_axi_BUS_SRC_AWVALID;
input   m_axi_BUS_SRC_AWREADY;
output  [C_M_AXI_BUS_SRC_ADDR_WIDTH - 1:0] m_axi_BUS_SRC_AWADDR;
output  [C_M_AXI_BUS_SRC_ID_WIDTH - 1:0] m_axi_BUS_SRC_AWID;
output  [7:0] m_axi_BUS_SRC_AWLEN;
output  [2:0] m_axi_BUS_SRC_AWSIZE;
output  [1:0] m_axi_BUS_SRC_AWBURST;
output  [1:0] m_axi_BUS_SRC_AWLOCK;
output  [3:0] m_axi_BUS_SRC_AWCACHE;
output  [2:0] m_axi_BUS_SRC_AWPROT;
output  [3:0] m_axi_BUS_SRC_AWQOS;
output  [3:0] m_axi_BUS_SRC_AWREGION;
output  [C_M_AXI_BUS_SRC_AWUSER_WIDTH - 1:0] m_axi_BUS_SRC_AWUSER;
output   m_axi_BUS_SRC_WVALID;
input   m_axi_BUS_SRC_WREADY;
output  [C_M_AXI_BUS_SRC_DATA_WIDTH - 1:0] m_axi_BUS_SRC_WDATA;
output  [C_M_AXI_BUS_SRC_WSTRB_WIDTH - 1:0] m_axi_BUS_SRC_WSTRB;
output   m_axi_BUS_SRC_WLAST;
output  [C_M_AXI_BUS_SRC_ID_WIDTH - 1:0] m_axi_BUS_SRC_WID;
output  [C_M_AXI_BUS_SRC_WUSER_WIDTH - 1:0] m_axi_BUS_SRC_WUSER;
output   m_axi_BUS_SRC_ARVALID;
input   m_axi_BUS_SRC_ARREADY;
output  [C_M_AXI_BUS_SRC_ADDR_WIDTH - 1:0] m_axi_BUS_SRC_ARADDR;
output  [C_M_AXI_BUS_SRC_ID_WIDTH - 1:0] m_axi_BUS_SRC_ARID;
output  [7:0] m_axi_BUS_SRC_ARLEN;
output  [2:0] m_axi_BUS_SRC_ARSIZE;
output  [1:0] m_axi_BUS_SRC_ARBURST;
output  [1:0] m_axi_BUS_SRC_ARLOCK;
output  [3:0] m_axi_BUS_SRC_ARCACHE;
output  [2:0] m_axi_BUS_SRC_ARPROT;
output  [3:0] m_axi_BUS_SRC_ARQOS;
output  [3:0] m_axi_BUS_SRC_ARREGION;
output  [C_M_AXI_BUS_SRC_ARUSER_WIDTH - 1:0] m_axi_BUS_SRC_ARUSER;
input   m_axi_BUS_SRC_RVALID;
output   m_axi_BUS_SRC_RREADY;
input  [C_M_AXI_BUS_SRC_DATA_WIDTH - 1:0] m_axi_BUS_SRC_RDATA;
input   m_axi_BUS_SRC_RLAST;
input  [C_M_AXI_BUS_SRC_ID_WIDTH - 1:0] m_axi_BUS_SRC_RID;
input  [C_M_AXI_BUS_SRC_RUSER_WIDTH - 1:0] m_axi_BUS_SRC_RUSER;
input  [1:0] m_axi_BUS_SRC_RRESP;
input   m_axi_BUS_SRC_BVALID;
output   m_axi_BUS_SRC_BREADY;
input  [1:0] m_axi_BUS_SRC_BRESP;
input  [C_M_AXI_BUS_SRC_ID_WIDTH - 1:0] m_axi_BUS_SRC_BID;
input  [C_M_AXI_BUS_SRC_BUSER_WIDTH - 1:0] m_axi_BUS_SRC_BUSER;
output   m_axi_BUS_DST_AWVALID;
input   m_axi_BUS_DST_AWREADY;
output  [C_M_AXI_BUS_DST_ADDR_WIDTH - 1:0] m_axi_BUS_DST_AWADDR;
output  [C_M_AXI_BUS_DST_ID_WIDTH - 1:0] m_axi_BUS_DST_AWID;
output  [7:0] m_axi_BUS_DST_AWLEN;
output  [2:0] m_axi_BUS_DST_AWSIZE;
output  [1:0] m_axi_BUS_DST_AWBURST;
output  [1:0] m_axi_BUS_DST_AWLOCK;
output  [3:0] m_axi_BUS_DST_AWCACHE;
output  [2:0] m_axi_BUS_DST_AWPROT;
output  [3:0] m_axi_BUS_DST_AWQOS;
output  [3:0] m_axi_BUS_DST_AWREGION;
output  [C_M_AXI_BUS_DST_AWUSER_WIDTH - 1:0] m_axi_BUS_DST_AWUSER;
output   m_axi_BUS_DST_WVALID;
input   m_axi_BUS_DST_WREADY;
output  [C_M_AXI_BUS_DST_DATA_WIDTH - 1:0] m_axi_BUS_DST_WDATA;
output  [C_M_AXI_BUS_DST_WSTRB_WIDTH - 1:0] m_axi_BUS_DST_WSTRB;
output   m_axi_BUS_DST_WLAST;
output  [C_M_AXI_BUS_DST_ID_WIDTH - 1:0] m_axi_BUS_DST_WID;
output  [C_M_AXI_BUS_DST_WUSER_WIDTH - 1:0] m_axi_BUS_DST_WUSER;
output   m_axi_BUS_DST_ARVALID;
input   m_axi_BUS_DST_ARREADY;
output  [C_M_AXI_BUS_DST_ADDR_WIDTH - 1:0] m_axi_BUS_DST_ARADDR;
output  [C_M_AXI_BUS_DST_ID_WIDTH - 1:0] m_axi_BUS_DST_ARID;
output  [7:0] m_axi_BUS_DST_ARLEN;
output  [2:0] m_axi_BUS_DST_ARSIZE;
output  [1:0] m_axi_BUS_DST_ARBURST;
output  [1:0] m_axi_BUS_DST_ARLOCK;
output  [3:0] m_axi_BUS_DST_ARCACHE;
output  [2:0] m_axi_BUS_DST_ARPROT;
output  [3:0] m_axi_BUS_DST_ARQOS;
output  [3:0] m_axi_BUS_DST_ARREGION;
output  [C_M_AXI_BUS_DST_ARUSER_WIDTH - 1:0] m_axi_BUS_DST_ARUSER;
input   m_axi_BUS_DST_RVALID;
output   m_axi_BUS_DST_RREADY;
input  [C_M_AXI_BUS_DST_DATA_WIDTH - 1:0] m_axi_BUS_DST_RDATA;
input   m_axi_BUS_DST_RLAST;
input  [C_M_AXI_BUS_DST_ID_WIDTH - 1:0] m_axi_BUS_DST_RID;
input  [C_M_AXI_BUS_DST_RUSER_WIDTH - 1:0] m_axi_BUS_DST_RUSER;
input  [1:0] m_axi_BUS_DST_RRESP;
input   m_axi_BUS_DST_BVALID;
output   m_axi_BUS_DST_BREADY;
input  [1:0] m_axi_BUS_DST_BRESP;
input  [C_M_AXI_BUS_DST_ID_WIDTH - 1:0] m_axi_BUS_DST_BID;
input  [C_M_AXI_BUS_DST_BUSER_WIDTH - 1:0] m_axi_BUS_DST_BUSER;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_ready;
reg    ap_done;
wire    ap_idle;
wire   [63:0] imatrix;
wire   [63:0] omatrix;
wire    BUS_SRC_AWREADY;
wire    BUS_SRC_WREADY;
wire    BUS_SRC_ARREADY;
wire    BUS_SRC_RVALID;
wire   [31:0] BUS_SRC_RDATA;
wire    BUS_SRC_RLAST;
wire   [0:0] BUS_SRC_RID;
wire   [0:0] BUS_SRC_RUSER;
wire   [1:0] BUS_SRC_RRESP;
wire    BUS_SRC_BVALID;
wire   [1:0] BUS_SRC_BRESP;
wire   [0:0] BUS_SRC_BID;
wire   [0:0] BUS_SRC_BUSER;
wire    BUS_DST_AWREADY;
wire    BUS_DST_WREADY;
wire    BUS_DST_ARREADY;
wire    BUS_DST_RVALID;
wire   [31:0] BUS_DST_RDATA;
wire    BUS_DST_RLAST;
wire   [0:0] BUS_DST_RID;
wire   [0:0] BUS_DST_RUSER;
wire   [1:0] BUS_DST_RRESP;
wire    BUS_DST_BVALID;
wire   [1:0] BUS_DST_BRESP;
wire   [0:0] BUS_DST_BID;
wire   [0:0] BUS_DST_BUSER;
wire    dataflow_in_loop_U0_m_axi_imatrix_AWVALID;
wire   [63:0] dataflow_in_loop_U0_m_axi_imatrix_AWADDR;
wire   [0:0] dataflow_in_loop_U0_m_axi_imatrix_AWID;
wire   [31:0] dataflow_in_loop_U0_m_axi_imatrix_AWLEN;
wire   [2:0] dataflow_in_loop_U0_m_axi_imatrix_AWSIZE;
wire   [1:0] dataflow_in_loop_U0_m_axi_imatrix_AWBURST;
wire   [1:0] dataflow_in_loop_U0_m_axi_imatrix_AWLOCK;
wire   [3:0] dataflow_in_loop_U0_m_axi_imatrix_AWCACHE;
wire   [2:0] dataflow_in_loop_U0_m_axi_imatrix_AWPROT;
wire   [3:0] dataflow_in_loop_U0_m_axi_imatrix_AWQOS;
wire   [3:0] dataflow_in_loop_U0_m_axi_imatrix_AWREGION;
wire   [0:0] dataflow_in_loop_U0_m_axi_imatrix_AWUSER;
wire    dataflow_in_loop_U0_m_axi_imatrix_WVALID;
wire   [31:0] dataflow_in_loop_U0_m_axi_imatrix_WDATA;
wire   [3:0] dataflow_in_loop_U0_m_axi_imatrix_WSTRB;
wire    dataflow_in_loop_U0_m_axi_imatrix_WLAST;
wire   [0:0] dataflow_in_loop_U0_m_axi_imatrix_WID;
wire   [0:0] dataflow_in_loop_U0_m_axi_imatrix_WUSER;
wire    dataflow_in_loop_U0_m_axi_imatrix_ARVALID;
wire   [63:0] dataflow_in_loop_U0_m_axi_imatrix_ARADDR;
wire   [0:0] dataflow_in_loop_U0_m_axi_imatrix_ARID;
wire   [31:0] dataflow_in_loop_U0_m_axi_imatrix_ARLEN;
wire   [2:0] dataflow_in_loop_U0_m_axi_imatrix_ARSIZE;
wire   [1:0] dataflow_in_loop_U0_m_axi_imatrix_ARBURST;
wire   [1:0] dataflow_in_loop_U0_m_axi_imatrix_ARLOCK;
wire   [3:0] dataflow_in_loop_U0_m_axi_imatrix_ARCACHE;
wire   [2:0] dataflow_in_loop_U0_m_axi_imatrix_ARPROT;
wire   [3:0] dataflow_in_loop_U0_m_axi_imatrix_ARQOS;
wire   [3:0] dataflow_in_loop_U0_m_axi_imatrix_ARREGION;
wire   [0:0] dataflow_in_loop_U0_m_axi_imatrix_ARUSER;
wire    dataflow_in_loop_U0_m_axi_imatrix_RREADY;
wire    dataflow_in_loop_U0_m_axi_imatrix_BREADY;
wire   [61:0] dataflow_in_loop_U0_imatrix_offset;
wire    dataflow_in_loop_U0_m_axi_omatrix_AWVALID;
wire   [63:0] dataflow_in_loop_U0_m_axi_omatrix_AWADDR;
wire   [0:0] dataflow_in_loop_U0_m_axi_omatrix_AWID;
wire   [31:0] dataflow_in_loop_U0_m_axi_omatrix_AWLEN;
wire   [2:0] dataflow_in_loop_U0_m_axi_omatrix_AWSIZE;
wire   [1:0] dataflow_in_loop_U0_m_axi_omatrix_AWBURST;
wire   [1:0] dataflow_in_loop_U0_m_axi_omatrix_AWLOCK;
wire   [3:0] dataflow_in_loop_U0_m_axi_omatrix_AWCACHE;
wire   [2:0] dataflow_in_loop_U0_m_axi_omatrix_AWPROT;
wire   [3:0] dataflow_in_loop_U0_m_axi_omatrix_AWQOS;
wire   [3:0] dataflow_in_loop_U0_m_axi_omatrix_AWREGION;
wire   [0:0] dataflow_in_loop_U0_m_axi_omatrix_AWUSER;
wire    dataflow_in_loop_U0_m_axi_omatrix_WVALID;
wire   [31:0] dataflow_in_loop_U0_m_axi_omatrix_WDATA;
wire   [3:0] dataflow_in_loop_U0_m_axi_omatrix_WSTRB;
wire    dataflow_in_loop_U0_m_axi_omatrix_WLAST;
wire   [0:0] dataflow_in_loop_U0_m_axi_omatrix_WID;
wire   [0:0] dataflow_in_loop_U0_m_axi_omatrix_WUSER;
wire    dataflow_in_loop_U0_m_axi_omatrix_ARVALID;
wire   [63:0] dataflow_in_loop_U0_m_axi_omatrix_ARADDR;
wire   [0:0] dataflow_in_loop_U0_m_axi_omatrix_ARID;
wire   [31:0] dataflow_in_loop_U0_m_axi_omatrix_ARLEN;
wire   [2:0] dataflow_in_loop_U0_m_axi_omatrix_ARSIZE;
wire   [1:0] dataflow_in_loop_U0_m_axi_omatrix_ARBURST;
wire   [1:0] dataflow_in_loop_U0_m_axi_omatrix_ARLOCK;
wire   [3:0] dataflow_in_loop_U0_m_axi_omatrix_ARCACHE;
wire   [2:0] dataflow_in_loop_U0_m_axi_omatrix_ARPROT;
wire   [3:0] dataflow_in_loop_U0_m_axi_omatrix_ARQOS;
wire   [3:0] dataflow_in_loop_U0_m_axi_omatrix_ARREGION;
wire   [0:0] dataflow_in_loop_U0_m_axi_omatrix_ARUSER;
wire    dataflow_in_loop_U0_m_axi_omatrix_RREADY;
wire    dataflow_in_loop_U0_m_axi_omatrix_BREADY;
wire   [61:0] dataflow_in_loop_U0_omatrix_offset;
wire    dataflow_in_loop_U0_ap_done;
reg    dataflow_in_loop_U0_ap_start;
wire    dataflow_in_loop_U0_ap_ready;
wire    dataflow_in_loop_U0_ap_idle;
wire    dataflow_in_loop_U0_ap_continue;
wire    ap_sync_continue;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    loop_dataflow_enable;
reg   [1:0] loop_dataflow_input_count;
reg   [1:0] loop_dataflow_output_count;
reg    loop_dataflow_busy;
wire    dataflow_in_loop_U0_start_full_n;
wire    dataflow_in_loop_U0_start_write;

// power-on initialization
initial begin
#0 loop_dataflow_enable = 1'b0;
#0 loop_dataflow_input_count = 2'd0;
#0 loop_dataflow_output_count = 2'd0;
#0 loop_dataflow_busy = 1'b0;
end

IZigzagMatrix_f2r_forBody_s2e_forEnd_BUS_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_BUS_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_BUS_CTRL_DATA_WIDTH ))
IZigzagMatrix_f2r_forBody_s2e_forEnd_BUS_CTRL_s_axi_U(
    .AWVALID(s_axi_BUS_CTRL_AWVALID),
    .AWREADY(s_axi_BUS_CTRL_AWREADY),
    .AWADDR(s_axi_BUS_CTRL_AWADDR),
    .WVALID(s_axi_BUS_CTRL_WVALID),
    .WREADY(s_axi_BUS_CTRL_WREADY),
    .WDATA(s_axi_BUS_CTRL_WDATA),
    .WSTRB(s_axi_BUS_CTRL_WSTRB),
    .ARVALID(s_axi_BUS_CTRL_ARVALID),
    .ARREADY(s_axi_BUS_CTRL_ARREADY),
    .ARADDR(s_axi_BUS_CTRL_ARADDR),
    .RVALID(s_axi_BUS_CTRL_RVALID),
    .RREADY(s_axi_BUS_CTRL_RREADY),
    .RDATA(s_axi_BUS_CTRL_RDATA),
    .RRESP(s_axi_BUS_CTRL_RRESP),
    .BVALID(s_axi_BUS_CTRL_BVALID),
    .BREADY(s_axi_BUS_CTRL_BREADY),
    .BRESP(s_axi_BUS_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .imatrix(imatrix),
    .omatrix(omatrix)
);

IZigzagMatrix_f2r_forBody_s2e_forEnd_BUS_SRC_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_BUS_SRC_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_BUS_SRC_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_BUS_SRC_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_BUS_SRC_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_BUS_SRC_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_BUS_SRC_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_BUS_SRC_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_BUS_SRC_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_BUS_SRC_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_BUS_SRC_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_BUS_SRC_CACHE_VALUE ))
IZigzagMatrix_f2r_forBody_s2e_forEnd_BUS_SRC_m_axi_U(
    .AWVALID(m_axi_BUS_SRC_AWVALID),
    .AWREADY(m_axi_BUS_SRC_AWREADY),
    .AWADDR(m_axi_BUS_SRC_AWADDR),
    .AWID(m_axi_BUS_SRC_AWID),
    .AWLEN(m_axi_BUS_SRC_AWLEN),
    .AWSIZE(m_axi_BUS_SRC_AWSIZE),
    .AWBURST(m_axi_BUS_SRC_AWBURST),
    .AWLOCK(m_axi_BUS_SRC_AWLOCK),
    .AWCACHE(m_axi_BUS_SRC_AWCACHE),
    .AWPROT(m_axi_BUS_SRC_AWPROT),
    .AWQOS(m_axi_BUS_SRC_AWQOS),
    .AWREGION(m_axi_BUS_SRC_AWREGION),
    .AWUSER(m_axi_BUS_SRC_AWUSER),
    .WVALID(m_axi_BUS_SRC_WVALID),
    .WREADY(m_axi_BUS_SRC_WREADY),
    .WDATA(m_axi_BUS_SRC_WDATA),
    .WSTRB(m_axi_BUS_SRC_WSTRB),
    .WLAST(m_axi_BUS_SRC_WLAST),
    .WID(m_axi_BUS_SRC_WID),
    .WUSER(m_axi_BUS_SRC_WUSER),
    .ARVALID(m_axi_BUS_SRC_ARVALID),
    .ARREADY(m_axi_BUS_SRC_ARREADY),
    .ARADDR(m_axi_BUS_SRC_ARADDR),
    .ARID(m_axi_BUS_SRC_ARID),
    .ARLEN(m_axi_BUS_SRC_ARLEN),
    .ARSIZE(m_axi_BUS_SRC_ARSIZE),
    .ARBURST(m_axi_BUS_SRC_ARBURST),
    .ARLOCK(m_axi_BUS_SRC_ARLOCK),
    .ARCACHE(m_axi_BUS_SRC_ARCACHE),
    .ARPROT(m_axi_BUS_SRC_ARPROT),
    .ARQOS(m_axi_BUS_SRC_ARQOS),
    .ARREGION(m_axi_BUS_SRC_ARREGION),
    .ARUSER(m_axi_BUS_SRC_ARUSER),
    .RVALID(m_axi_BUS_SRC_RVALID),
    .RREADY(m_axi_BUS_SRC_RREADY),
    .RDATA(m_axi_BUS_SRC_RDATA),
    .RLAST(m_axi_BUS_SRC_RLAST),
    .RID(m_axi_BUS_SRC_RID),
    .RUSER(m_axi_BUS_SRC_RUSER),
    .RRESP(m_axi_BUS_SRC_RRESP),
    .BVALID(m_axi_BUS_SRC_BVALID),
    .BREADY(m_axi_BUS_SRC_BREADY),
    .BRESP(m_axi_BUS_SRC_BRESP),
    .BID(m_axi_BUS_SRC_BID),
    .BUSER(m_axi_BUS_SRC_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(dataflow_in_loop_U0_m_axi_imatrix_ARVALID),
    .I_ARREADY(BUS_SRC_ARREADY),
    .I_ARADDR(dataflow_in_loop_U0_m_axi_imatrix_ARADDR),
    .I_ARID(dataflow_in_loop_U0_m_axi_imatrix_ARID),
    .I_ARLEN(dataflow_in_loop_U0_m_axi_imatrix_ARLEN),
    .I_ARSIZE(dataflow_in_loop_U0_m_axi_imatrix_ARSIZE),
    .I_ARLOCK(dataflow_in_loop_U0_m_axi_imatrix_ARLOCK),
    .I_ARCACHE(dataflow_in_loop_U0_m_axi_imatrix_ARCACHE),
    .I_ARQOS(dataflow_in_loop_U0_m_axi_imatrix_ARQOS),
    .I_ARPROT(dataflow_in_loop_U0_m_axi_imatrix_ARPROT),
    .I_ARUSER(dataflow_in_loop_U0_m_axi_imatrix_ARUSER),
    .I_ARBURST(dataflow_in_loop_U0_m_axi_imatrix_ARBURST),
    .I_ARREGION(dataflow_in_loop_U0_m_axi_imatrix_ARREGION),
    .I_RVALID(BUS_SRC_RVALID),
    .I_RREADY(dataflow_in_loop_U0_m_axi_imatrix_RREADY),
    .I_RDATA(BUS_SRC_RDATA),
    .I_RID(BUS_SRC_RID),
    .I_RUSER(BUS_SRC_RUSER),
    .I_RRESP(BUS_SRC_RRESP),
    .I_RLAST(BUS_SRC_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(BUS_SRC_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(BUS_SRC_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(BUS_SRC_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(BUS_SRC_BRESP),
    .I_BID(BUS_SRC_BID),
    .I_BUSER(BUS_SRC_BUSER)
);

IZigzagMatrix_f2r_forBody_s2e_forEnd_BUS_DST_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_BUS_DST_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_BUS_DST_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_BUS_DST_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_BUS_DST_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_BUS_DST_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_BUS_DST_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_BUS_DST_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_BUS_DST_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_BUS_DST_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_BUS_DST_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_BUS_DST_CACHE_VALUE ))
IZigzagMatrix_f2r_forBody_s2e_forEnd_BUS_DST_m_axi_U(
    .AWVALID(m_axi_BUS_DST_AWVALID),
    .AWREADY(m_axi_BUS_DST_AWREADY),
    .AWADDR(m_axi_BUS_DST_AWADDR),
    .AWID(m_axi_BUS_DST_AWID),
    .AWLEN(m_axi_BUS_DST_AWLEN),
    .AWSIZE(m_axi_BUS_DST_AWSIZE),
    .AWBURST(m_axi_BUS_DST_AWBURST),
    .AWLOCK(m_axi_BUS_DST_AWLOCK),
    .AWCACHE(m_axi_BUS_DST_AWCACHE),
    .AWPROT(m_axi_BUS_DST_AWPROT),
    .AWQOS(m_axi_BUS_DST_AWQOS),
    .AWREGION(m_axi_BUS_DST_AWREGION),
    .AWUSER(m_axi_BUS_DST_AWUSER),
    .WVALID(m_axi_BUS_DST_WVALID),
    .WREADY(m_axi_BUS_DST_WREADY),
    .WDATA(m_axi_BUS_DST_WDATA),
    .WSTRB(m_axi_BUS_DST_WSTRB),
    .WLAST(m_axi_BUS_DST_WLAST),
    .WID(m_axi_BUS_DST_WID),
    .WUSER(m_axi_BUS_DST_WUSER),
    .ARVALID(m_axi_BUS_DST_ARVALID),
    .ARREADY(m_axi_BUS_DST_ARREADY),
    .ARADDR(m_axi_BUS_DST_ARADDR),
    .ARID(m_axi_BUS_DST_ARID),
    .ARLEN(m_axi_BUS_DST_ARLEN),
    .ARSIZE(m_axi_BUS_DST_ARSIZE),
    .ARBURST(m_axi_BUS_DST_ARBURST),
    .ARLOCK(m_axi_BUS_DST_ARLOCK),
    .ARCACHE(m_axi_BUS_DST_ARCACHE),
    .ARPROT(m_axi_BUS_DST_ARPROT),
    .ARQOS(m_axi_BUS_DST_ARQOS),
    .ARREGION(m_axi_BUS_DST_ARREGION),
    .ARUSER(m_axi_BUS_DST_ARUSER),
    .RVALID(m_axi_BUS_DST_RVALID),
    .RREADY(m_axi_BUS_DST_RREADY),
    .RDATA(m_axi_BUS_DST_RDATA),
    .RLAST(m_axi_BUS_DST_RLAST),
    .RID(m_axi_BUS_DST_RID),
    .RUSER(m_axi_BUS_DST_RUSER),
    .RRESP(m_axi_BUS_DST_RRESP),
    .BVALID(m_axi_BUS_DST_BVALID),
    .BREADY(m_axi_BUS_DST_BREADY),
    .BRESP(m_axi_BUS_DST_BRESP),
    .BID(m_axi_BUS_DST_BID),
    .BUSER(m_axi_BUS_DST_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(BUS_DST_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(BUS_DST_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(BUS_DST_RDATA),
    .I_RID(BUS_DST_RID),
    .I_RUSER(BUS_DST_RUSER),
    .I_RRESP(BUS_DST_RRESP),
    .I_RLAST(BUS_DST_RLAST),
    .I_AWVALID(dataflow_in_loop_U0_m_axi_omatrix_AWVALID),
    .I_AWREADY(BUS_DST_AWREADY),
    .I_AWADDR(dataflow_in_loop_U0_m_axi_omatrix_AWADDR),
    .I_AWID(dataflow_in_loop_U0_m_axi_omatrix_AWID),
    .I_AWLEN(dataflow_in_loop_U0_m_axi_omatrix_AWLEN),
    .I_AWSIZE(dataflow_in_loop_U0_m_axi_omatrix_AWSIZE),
    .I_AWLOCK(dataflow_in_loop_U0_m_axi_omatrix_AWLOCK),
    .I_AWCACHE(dataflow_in_loop_U0_m_axi_omatrix_AWCACHE),
    .I_AWQOS(dataflow_in_loop_U0_m_axi_omatrix_AWQOS),
    .I_AWPROT(dataflow_in_loop_U0_m_axi_omatrix_AWPROT),
    .I_AWUSER(dataflow_in_loop_U0_m_axi_omatrix_AWUSER),
    .I_AWBURST(dataflow_in_loop_U0_m_axi_omatrix_AWBURST),
    .I_AWREGION(dataflow_in_loop_U0_m_axi_omatrix_AWREGION),
    .I_WVALID(dataflow_in_loop_U0_m_axi_omatrix_WVALID),
    .I_WREADY(BUS_DST_WREADY),
    .I_WDATA(dataflow_in_loop_U0_m_axi_omatrix_WDATA),
    .I_WID(dataflow_in_loop_U0_m_axi_omatrix_WID),
    .I_WUSER(dataflow_in_loop_U0_m_axi_omatrix_WUSER),
    .I_WLAST(dataflow_in_loop_U0_m_axi_omatrix_WLAST),
    .I_WSTRB(dataflow_in_loop_U0_m_axi_omatrix_WSTRB),
    .I_BVALID(BUS_DST_BVALID),
    .I_BREADY(dataflow_in_loop_U0_m_axi_omatrix_BREADY),
    .I_BRESP(BUS_DST_BRESP),
    .I_BID(BUS_DST_BID),
    .I_BUSER(BUS_DST_BUSER)
);

dataflow_in_loop dataflow_in_loop_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .i_0_i_i(loop_dataflow_input_count),
    .m_axi_imatrix_AWVALID(dataflow_in_loop_U0_m_axi_imatrix_AWVALID),
    .m_axi_imatrix_AWREADY(1'b0),
    .m_axi_imatrix_AWADDR(dataflow_in_loop_U0_m_axi_imatrix_AWADDR),
    .m_axi_imatrix_AWID(dataflow_in_loop_U0_m_axi_imatrix_AWID),
    .m_axi_imatrix_AWLEN(dataflow_in_loop_U0_m_axi_imatrix_AWLEN),
    .m_axi_imatrix_AWSIZE(dataflow_in_loop_U0_m_axi_imatrix_AWSIZE),
    .m_axi_imatrix_AWBURST(dataflow_in_loop_U0_m_axi_imatrix_AWBURST),
    .m_axi_imatrix_AWLOCK(dataflow_in_loop_U0_m_axi_imatrix_AWLOCK),
    .m_axi_imatrix_AWCACHE(dataflow_in_loop_U0_m_axi_imatrix_AWCACHE),
    .m_axi_imatrix_AWPROT(dataflow_in_loop_U0_m_axi_imatrix_AWPROT),
    .m_axi_imatrix_AWQOS(dataflow_in_loop_U0_m_axi_imatrix_AWQOS),
    .m_axi_imatrix_AWREGION(dataflow_in_loop_U0_m_axi_imatrix_AWREGION),
    .m_axi_imatrix_AWUSER(dataflow_in_loop_U0_m_axi_imatrix_AWUSER),
    .m_axi_imatrix_WVALID(dataflow_in_loop_U0_m_axi_imatrix_WVALID),
    .m_axi_imatrix_WREADY(1'b0),
    .m_axi_imatrix_WDATA(dataflow_in_loop_U0_m_axi_imatrix_WDATA),
    .m_axi_imatrix_WSTRB(dataflow_in_loop_U0_m_axi_imatrix_WSTRB),
    .m_axi_imatrix_WLAST(dataflow_in_loop_U0_m_axi_imatrix_WLAST),
    .m_axi_imatrix_WID(dataflow_in_loop_U0_m_axi_imatrix_WID),
    .m_axi_imatrix_WUSER(dataflow_in_loop_U0_m_axi_imatrix_WUSER),
    .m_axi_imatrix_ARVALID(dataflow_in_loop_U0_m_axi_imatrix_ARVALID),
    .m_axi_imatrix_ARREADY(BUS_SRC_ARREADY),
    .m_axi_imatrix_ARADDR(dataflow_in_loop_U0_m_axi_imatrix_ARADDR),
    .m_axi_imatrix_ARID(dataflow_in_loop_U0_m_axi_imatrix_ARID),
    .m_axi_imatrix_ARLEN(dataflow_in_loop_U0_m_axi_imatrix_ARLEN),
    .m_axi_imatrix_ARSIZE(dataflow_in_loop_U0_m_axi_imatrix_ARSIZE),
    .m_axi_imatrix_ARBURST(dataflow_in_loop_U0_m_axi_imatrix_ARBURST),
    .m_axi_imatrix_ARLOCK(dataflow_in_loop_U0_m_axi_imatrix_ARLOCK),
    .m_axi_imatrix_ARCACHE(dataflow_in_loop_U0_m_axi_imatrix_ARCACHE),
    .m_axi_imatrix_ARPROT(dataflow_in_loop_U0_m_axi_imatrix_ARPROT),
    .m_axi_imatrix_ARQOS(dataflow_in_loop_U0_m_axi_imatrix_ARQOS),
    .m_axi_imatrix_ARREGION(dataflow_in_loop_U0_m_axi_imatrix_ARREGION),
    .m_axi_imatrix_ARUSER(dataflow_in_loop_U0_m_axi_imatrix_ARUSER),
    .m_axi_imatrix_RVALID(BUS_SRC_RVALID),
    .m_axi_imatrix_RREADY(dataflow_in_loop_U0_m_axi_imatrix_RREADY),
    .m_axi_imatrix_RDATA(BUS_SRC_RDATA),
    .m_axi_imatrix_RLAST(BUS_SRC_RLAST),
    .m_axi_imatrix_RID(BUS_SRC_RID),
    .m_axi_imatrix_RUSER(BUS_SRC_RUSER),
    .m_axi_imatrix_RRESP(BUS_SRC_RRESP),
    .m_axi_imatrix_BVALID(1'b0),
    .m_axi_imatrix_BREADY(dataflow_in_loop_U0_m_axi_imatrix_BREADY),
    .m_axi_imatrix_BRESP(2'd0),
    .m_axi_imatrix_BID(1'd0),
    .m_axi_imatrix_BUSER(1'd0),
    .imatrix_offset(dataflow_in_loop_U0_imatrix_offset),
    .m_axi_omatrix_AWVALID(dataflow_in_loop_U0_m_axi_omatrix_AWVALID),
    .m_axi_omatrix_AWREADY(BUS_DST_AWREADY),
    .m_axi_omatrix_AWADDR(dataflow_in_loop_U0_m_axi_omatrix_AWADDR),
    .m_axi_omatrix_AWID(dataflow_in_loop_U0_m_axi_omatrix_AWID),
    .m_axi_omatrix_AWLEN(dataflow_in_loop_U0_m_axi_omatrix_AWLEN),
    .m_axi_omatrix_AWSIZE(dataflow_in_loop_U0_m_axi_omatrix_AWSIZE),
    .m_axi_omatrix_AWBURST(dataflow_in_loop_U0_m_axi_omatrix_AWBURST),
    .m_axi_omatrix_AWLOCK(dataflow_in_loop_U0_m_axi_omatrix_AWLOCK),
    .m_axi_omatrix_AWCACHE(dataflow_in_loop_U0_m_axi_omatrix_AWCACHE),
    .m_axi_omatrix_AWPROT(dataflow_in_loop_U0_m_axi_omatrix_AWPROT),
    .m_axi_omatrix_AWQOS(dataflow_in_loop_U0_m_axi_omatrix_AWQOS),
    .m_axi_omatrix_AWREGION(dataflow_in_loop_U0_m_axi_omatrix_AWREGION),
    .m_axi_omatrix_AWUSER(dataflow_in_loop_U0_m_axi_omatrix_AWUSER),
    .m_axi_omatrix_WVALID(dataflow_in_loop_U0_m_axi_omatrix_WVALID),
    .m_axi_omatrix_WREADY(BUS_DST_WREADY),
    .m_axi_omatrix_WDATA(dataflow_in_loop_U0_m_axi_omatrix_WDATA),
    .m_axi_omatrix_WSTRB(dataflow_in_loop_U0_m_axi_omatrix_WSTRB),
    .m_axi_omatrix_WLAST(dataflow_in_loop_U0_m_axi_omatrix_WLAST),
    .m_axi_omatrix_WID(dataflow_in_loop_U0_m_axi_omatrix_WID),
    .m_axi_omatrix_WUSER(dataflow_in_loop_U0_m_axi_omatrix_WUSER),
    .m_axi_omatrix_ARVALID(dataflow_in_loop_U0_m_axi_omatrix_ARVALID),
    .m_axi_omatrix_ARREADY(1'b0),
    .m_axi_omatrix_ARADDR(dataflow_in_loop_U0_m_axi_omatrix_ARADDR),
    .m_axi_omatrix_ARID(dataflow_in_loop_U0_m_axi_omatrix_ARID),
    .m_axi_omatrix_ARLEN(dataflow_in_loop_U0_m_axi_omatrix_ARLEN),
    .m_axi_omatrix_ARSIZE(dataflow_in_loop_U0_m_axi_omatrix_ARSIZE),
    .m_axi_omatrix_ARBURST(dataflow_in_loop_U0_m_axi_omatrix_ARBURST),
    .m_axi_omatrix_ARLOCK(dataflow_in_loop_U0_m_axi_omatrix_ARLOCK),
    .m_axi_omatrix_ARCACHE(dataflow_in_loop_U0_m_axi_omatrix_ARCACHE),
    .m_axi_omatrix_ARPROT(dataflow_in_loop_U0_m_axi_omatrix_ARPROT),
    .m_axi_omatrix_ARQOS(dataflow_in_loop_U0_m_axi_omatrix_ARQOS),
    .m_axi_omatrix_ARREGION(dataflow_in_loop_U0_m_axi_omatrix_ARREGION),
    .m_axi_omatrix_ARUSER(dataflow_in_loop_U0_m_axi_omatrix_ARUSER),
    .m_axi_omatrix_RVALID(1'b0),
    .m_axi_omatrix_RREADY(dataflow_in_loop_U0_m_axi_omatrix_RREADY),
    .m_axi_omatrix_RDATA(32'd0),
    .m_axi_omatrix_RLAST(1'b0),
    .m_axi_omatrix_RID(1'd0),
    .m_axi_omatrix_RUSER(1'd0),
    .m_axi_omatrix_RRESP(2'd0),
    .m_axi_omatrix_BVALID(BUS_DST_BVALID),
    .m_axi_omatrix_BREADY(dataflow_in_loop_U0_m_axi_omatrix_BREADY),
    .m_axi_omatrix_BRESP(BUS_DST_BRESP),
    .m_axi_omatrix_BID(BUS_DST_BID),
    .m_axi_omatrix_BUSER(BUS_DST_BUSER),
    .omatrix_offset(dataflow_in_loop_U0_omatrix_offset),
    .i_0_i_i_ap_vld(1'b0),
    .imatrix_offset_ap_vld(1'b1),
    .omatrix_offset_ap_vld(1'b1),
    .ap_done(dataflow_in_loop_U0_ap_done),
    .ap_start(dataflow_in_loop_U0_ap_start),
    .ap_ready(dataflow_in_loop_U0_ap_ready),
    .ap_idle(dataflow_in_loop_U0_ap_idle),
    .ap_continue(dataflow_in_loop_U0_ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        loop_dataflow_busy <= 1'b0;
    end else begin
        if ((loop_dataflow_output_count == 2'd2)) begin
            loop_dataflow_busy <= 1'b0;
        end else if ((ap_start == 1'b1)) begin
            loop_dataflow_busy <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        loop_dataflow_enable <= 1'b0;
    end else begin
        if (((loop_dataflow_enable == 1'b0) & (ap_start == 1'b1))) begin
            loop_dataflow_enable <= 1'b1;
        end else if (((loop_dataflow_input_count == 2'd2) & (loop_dataflow_enable == 1'b1))) begin
            loop_dataflow_enable <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        loop_dataflow_input_count <= 2'd0;
    end else begin
        if (((loop_dataflow_input_count == 2'd2) & (loop_dataflow_enable == 1'b1))) begin
            loop_dataflow_input_count <= 2'd0;
        end else if (((loop_dataflow_enable == 1'b1) & (dataflow_in_loop_U0_ap_ready == 1'b1))) begin
            loop_dataflow_input_count <= (loop_dataflow_input_count + 2'd1);
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        loop_dataflow_output_count <= 2'd0;
    end else begin
        if ((loop_dataflow_output_count == 2'd2)) begin
            loop_dataflow_output_count <= 2'd0;
        end else if ((dataflow_in_loop_U0_ap_done == 1'b1)) begin
            loop_dataflow_output_count <= (loop_dataflow_output_count + 2'd1);
        end
    end
end

always @ (*) begin
    if (((loop_dataflow_output_count == 2'd2) & (loop_dataflow_busy == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((loop_dataflow_input_count == 2'd2)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~(loop_dataflow_input_count == 2'd2) & (loop_dataflow_enable == 1'b1))) begin
        dataflow_in_loop_U0_ap_start = 1'b1;
    end else begin
        dataflow_in_loop_U0_ap_start = 1'b0;
    end
end

assign ap_idle = dataflow_in_loop_U0_ap_idle;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b1;

assign ap_sync_done = dataflow_in_loop_U0_ap_done;

assign ap_sync_ready = dataflow_in_loop_U0_ap_ready;

assign dataflow_in_loop_U0_ap_continue = 1'b1;

assign dataflow_in_loop_U0_imatrix_offset = {{imatrix[63:2]}};

assign dataflow_in_loop_U0_omatrix_offset = {{omatrix[63:2]}};

assign dataflow_in_loop_U0_start_full_n = 1'b1;

assign dataflow_in_loop_U0_start_write = 1'b0;

endmodule //IZigzagMatrix_f2r_forBody_s2e_forEnd

-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dataflow_in_loop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    i_0_i_i : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_imatrix_AWVALID : OUT STD_LOGIC;
    m_axi_imatrix_AWREADY : IN STD_LOGIC;
    m_axi_imatrix_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_imatrix_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_imatrix_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_imatrix_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_imatrix_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_imatrix_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_imatrix_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_imatrix_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_imatrix_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_imatrix_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_imatrix_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_imatrix_WVALID : OUT STD_LOGIC;
    m_axi_imatrix_WREADY : IN STD_LOGIC;
    m_axi_imatrix_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_imatrix_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_imatrix_WLAST : OUT STD_LOGIC;
    m_axi_imatrix_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_imatrix_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_imatrix_ARVALID : OUT STD_LOGIC;
    m_axi_imatrix_ARREADY : IN STD_LOGIC;
    m_axi_imatrix_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_imatrix_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_imatrix_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_imatrix_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_imatrix_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_imatrix_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_imatrix_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_imatrix_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_imatrix_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_imatrix_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_imatrix_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_imatrix_RVALID : IN STD_LOGIC;
    m_axi_imatrix_RREADY : OUT STD_LOGIC;
    m_axi_imatrix_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_imatrix_RLAST : IN STD_LOGIC;
    m_axi_imatrix_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_imatrix_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_imatrix_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_imatrix_BVALID : IN STD_LOGIC;
    m_axi_imatrix_BREADY : OUT STD_LOGIC;
    m_axi_imatrix_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_imatrix_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_imatrix_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    imatrix_offset : IN STD_LOGIC_VECTOR (61 downto 0);
    m_axi_omatrix_AWVALID : OUT STD_LOGIC;
    m_axi_omatrix_AWREADY : IN STD_LOGIC;
    m_axi_omatrix_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_omatrix_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_omatrix_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_omatrix_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_omatrix_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_omatrix_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_omatrix_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_omatrix_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_omatrix_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_omatrix_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_omatrix_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_omatrix_WVALID : OUT STD_LOGIC;
    m_axi_omatrix_WREADY : IN STD_LOGIC;
    m_axi_omatrix_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_omatrix_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_omatrix_WLAST : OUT STD_LOGIC;
    m_axi_omatrix_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_omatrix_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_omatrix_ARVALID : OUT STD_LOGIC;
    m_axi_omatrix_ARREADY : IN STD_LOGIC;
    m_axi_omatrix_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_omatrix_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_omatrix_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_omatrix_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_omatrix_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_omatrix_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_omatrix_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_omatrix_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_omatrix_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_omatrix_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_omatrix_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_omatrix_RVALID : IN STD_LOGIC;
    m_axi_omatrix_RREADY : OUT STD_LOGIC;
    m_axi_omatrix_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_omatrix_RLAST : IN STD_LOGIC;
    m_axi_omatrix_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_omatrix_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_omatrix_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_omatrix_BVALID : IN STD_LOGIC;
    m_axi_omatrix_BREADY : OUT STD_LOGIC;
    m_axi_omatrix_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_omatrix_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_omatrix_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    omatrix_offset : IN STD_LOGIC_VECTOR (61 downto 0);
    i_0_i_i_ap_vld : IN STD_LOGIC;
    imatrix_offset_ap_vld : IN STD_LOGIC;
    omatrix_offset_ap_vld : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of dataflow_in_loop is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

    signal in1_buf_0_i_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_0_t_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_1_i_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_1_t_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_2_i_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_2_t_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_3_i_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_3_t_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_4_i_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_4_t_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_5_i_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_5_t_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_6_i_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_6_t_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_7_i_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_7_t_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_8_i_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_8_t_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_9_i_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_9_t_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_10_i_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_10_t_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_11_i_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_11_t_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_12_i_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_12_t_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_13_i_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_13_t_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_14_i_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_14_t_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_15_i_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in1_buf_15_t_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_buf_0_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_0_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_1_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_1_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_2_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_2_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_3_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_3_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_4_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_4_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_5_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_5_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_6_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_6_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_7_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_7_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_8_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_8_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_9_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_9_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_10_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_10_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_11_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_11_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_12_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_12_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_13_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_13_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_14_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_14_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_15_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_buf_15_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_0_proc19_U0_ap_start : STD_LOGIC;
    signal Loop_0_proc19_U0_ap_done : STD_LOGIC;
    signal Loop_0_proc19_U0_ap_continue : STD_LOGIC;
    signal Loop_0_proc19_U0_ap_idle : STD_LOGIC;
    signal Loop_0_proc19_U0_ap_ready : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_0_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_0_proc19_U0_in1_buf_0_ce0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_0_we0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_0_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_0_proc19_U0_in1_buf_1_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_0_proc19_U0_in1_buf_1_ce0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_1_we0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_1_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_0_proc19_U0_in1_buf_2_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_0_proc19_U0_in1_buf_2_ce0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_2_we0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_2_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_0_proc19_U0_in1_buf_3_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_0_proc19_U0_in1_buf_3_ce0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_3_we0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_3_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_0_proc19_U0_in1_buf_4_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_0_proc19_U0_in1_buf_4_ce0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_4_we0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_4_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_0_proc19_U0_in1_buf_5_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_0_proc19_U0_in1_buf_5_ce0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_5_we0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_5_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_0_proc19_U0_in1_buf_6_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_0_proc19_U0_in1_buf_6_ce0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_6_we0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_6_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_0_proc19_U0_in1_buf_7_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_0_proc19_U0_in1_buf_7_ce0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_7_we0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_7_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_0_proc19_U0_in1_buf_8_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_0_proc19_U0_in1_buf_8_ce0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_8_we0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_8_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_0_proc19_U0_in1_buf_9_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_0_proc19_U0_in1_buf_9_ce0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_9_we0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_9_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_0_proc19_U0_in1_buf_10_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_0_proc19_U0_in1_buf_10_ce0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_10_we0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_10_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_0_proc19_U0_in1_buf_11_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_0_proc19_U0_in1_buf_11_ce0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_11_we0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_11_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_0_proc19_U0_in1_buf_12_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_0_proc19_U0_in1_buf_12_ce0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_12_we0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_12_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_0_proc19_U0_in1_buf_13_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_0_proc19_U0_in1_buf_13_ce0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_13_we0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_13_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_0_proc19_U0_in1_buf_14_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_0_proc19_U0_in1_buf_14_ce0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_14_we0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_14_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_0_proc19_U0_in1_buf_15_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_0_proc19_U0_in1_buf_15_ce0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_15_we0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_15_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_0_proc19_U0_i_0_i_i_c_din : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_0_proc19_U0_i_0_i_i_c_write : STD_LOGIC;
    signal Loop_0_proc19_U0_imatrix_offset_out_din : STD_LOGIC_VECTOR (61 downto 0);
    signal Loop_0_proc19_U0_imatrix_offset_out_write : STD_LOGIC;
    signal Loop_0_proc19_U0_omatrix_offset_out_din : STD_LOGIC_VECTOR (61 downto 0);
    signal Loop_0_proc19_U0_omatrix_offset_out_write : STD_LOGIC;
    signal ap_channel_done_in1_buf_15 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_in1_buf_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_in1_buf_15 : STD_LOGIC;
    signal ap_channel_done_in1_buf_14 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_in1_buf_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_in1_buf_14 : STD_LOGIC;
    signal ap_channel_done_in1_buf_13 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_in1_buf_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_in1_buf_13 : STD_LOGIC;
    signal ap_channel_done_in1_buf_12 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_in1_buf_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_in1_buf_12 : STD_LOGIC;
    signal ap_channel_done_in1_buf_11 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_in1_buf_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_in1_buf_11 : STD_LOGIC;
    signal ap_channel_done_in1_buf_10 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_in1_buf_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_in1_buf_10 : STD_LOGIC;
    signal ap_channel_done_in1_buf_9 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_in1_buf_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_in1_buf_9 : STD_LOGIC;
    signal ap_channel_done_in1_buf_8 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_in1_buf_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_in1_buf_8 : STD_LOGIC;
    signal ap_channel_done_in1_buf_7 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_in1_buf_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_in1_buf_7 : STD_LOGIC;
    signal ap_channel_done_in1_buf_6 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_in1_buf_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_in1_buf_6 : STD_LOGIC;
    signal ap_channel_done_in1_buf_5 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_in1_buf_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_in1_buf_5 : STD_LOGIC;
    signal ap_channel_done_in1_buf_4 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_in1_buf_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_in1_buf_4 : STD_LOGIC;
    signal ap_channel_done_in1_buf_3 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_in1_buf_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_in1_buf_3 : STD_LOGIC;
    signal ap_channel_done_in1_buf_2 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_in1_buf_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_in1_buf_2 : STD_LOGIC;
    signal ap_channel_done_in1_buf_1 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_in1_buf_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_in1_buf_1 : STD_LOGIC;
    signal ap_channel_done_in1_buf_0 : STD_LOGIC;
    signal Loop_0_proc19_U0_in1_buf_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_in1_buf_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_in1_buf_0 : STD_LOGIC;
    signal Loop_1_proc_U0_ap_start : STD_LOGIC;
    signal Loop_1_proc_U0_ap_done : STD_LOGIC;
    signal Loop_1_proc_U0_ap_continue : STD_LOGIC;
    signal Loop_1_proc_U0_ap_idle : STD_LOGIC;
    signal Loop_1_proc_U0_ap_ready : STD_LOGIC;
    signal Loop_1_proc_U0_in1_buf_0_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_in1_buf_0_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_m_axi_imatrix_AWVALID : STD_LOGIC;
    signal Loop_1_proc_U0_m_axi_imatrix_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_WVALID : STD_LOGIC;
    signal Loop_1_proc_U0_m_axi_imatrix_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_WLAST : STD_LOGIC;
    signal Loop_1_proc_U0_m_axi_imatrix_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_ARVALID : STD_LOGIC;
    signal Loop_1_proc_U0_m_axi_imatrix_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_m_axi_imatrix_RREADY : STD_LOGIC;
    signal Loop_1_proc_U0_m_axi_imatrix_BREADY : STD_LOGIC;
    signal Loop_1_proc_U0_imatrix_offset_read : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_0_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_out_buf_0_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_0_we0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_1_proc_U0_in1_buf_1_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_in1_buf_1_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_1_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_out_buf_1_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_1_we0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_1_proc_U0_in1_buf_2_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_in1_buf_2_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_2_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_out_buf_2_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_2_we0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_1_proc_U0_in1_buf_3_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_in1_buf_3_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_3_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_out_buf_3_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_3_we0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_1_proc_U0_in1_buf_4_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_in1_buf_4_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_4_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_out_buf_4_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_4_we0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_1_proc_U0_in1_buf_5_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_in1_buf_5_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_5_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_out_buf_5_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_5_we0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_1_proc_U0_in1_buf_6_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_in1_buf_6_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_6_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_out_buf_6_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_6_we0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_1_proc_U0_in1_buf_7_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_in1_buf_7_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_7_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_out_buf_7_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_7_we0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_1_proc_U0_in1_buf_8_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_in1_buf_8_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_8_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_out_buf_8_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_8_we0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_1_proc_U0_in1_buf_9_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_in1_buf_9_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_9_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_out_buf_9_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_9_we0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_1_proc_U0_in1_buf_10_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_in1_buf_10_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_10_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_out_buf_10_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_10_we0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_10_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_1_proc_U0_in1_buf_11_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_in1_buf_11_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_11_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_out_buf_11_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_11_we0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_11_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_1_proc_U0_in1_buf_12_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_in1_buf_12_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_12_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_out_buf_12_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_12_we0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_12_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_1_proc_U0_in1_buf_13_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_in1_buf_13_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_13_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_out_buf_13_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_13_we0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_13_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_1_proc_U0_in1_buf_14_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_in1_buf_14_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_14_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_out_buf_14_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_14_we0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_14_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_1_proc_U0_in1_buf_15_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_in1_buf_15_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_15_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_1_proc_U0_out_buf_15_ce0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_15_we0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_15_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_out_buf_15 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_buf_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_buf_15 : STD_LOGIC;
    signal ap_channel_done_out_buf_14 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_buf_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_buf_14 : STD_LOGIC;
    signal ap_channel_done_out_buf_13 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_buf_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_buf_13 : STD_LOGIC;
    signal ap_channel_done_out_buf_12 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_buf_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_buf_12 : STD_LOGIC;
    signal ap_channel_done_out_buf_11 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_buf_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_buf_11 : STD_LOGIC;
    signal ap_channel_done_out_buf_10 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_buf_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_buf_10 : STD_LOGIC;
    signal ap_channel_done_out_buf_9 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_buf_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_buf_9 : STD_LOGIC;
    signal ap_channel_done_out_buf_8 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_buf_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_buf_8 : STD_LOGIC;
    signal ap_channel_done_out_buf_7 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_buf_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_buf_7 : STD_LOGIC;
    signal ap_channel_done_out_buf_6 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_buf_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_buf_6 : STD_LOGIC;
    signal ap_channel_done_out_buf_5 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_buf_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_buf_5 : STD_LOGIC;
    signal ap_channel_done_out_buf_4 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_buf_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_buf_4 : STD_LOGIC;
    signal ap_channel_done_out_buf_3 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_buf_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_buf_3 : STD_LOGIC;
    signal ap_channel_done_out_buf_2 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_buf_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_buf_2 : STD_LOGIC;
    signal ap_channel_done_out_buf_1 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_buf_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_buf_1 : STD_LOGIC;
    signal ap_channel_done_out_buf_0 : STD_LOGIC;
    signal Loop_1_proc_U0_out_buf_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_buf_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_buf_0 : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_ap_start : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_ap_done : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_ap_continue : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_ap_idle : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_ap_ready : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_AWVALID : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_WVALID : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_WLAST : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_ARVALID : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_RREADY : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_m_axi_omatrix_BREADY : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_omatrix_offset_read : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_i_0_i_i_c_read : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_out_buf_0_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal memcpy_omatrix_out_b_U0_out_buf_0_ce0 : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_out_buf_1_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal memcpy_omatrix_out_b_U0_out_buf_1_ce0 : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_out_buf_2_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal memcpy_omatrix_out_b_U0_out_buf_2_ce0 : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_out_buf_3_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal memcpy_omatrix_out_b_U0_out_buf_3_ce0 : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_out_buf_4_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal memcpy_omatrix_out_b_U0_out_buf_4_ce0 : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_out_buf_5_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal memcpy_omatrix_out_b_U0_out_buf_5_ce0 : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_out_buf_6_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal memcpy_omatrix_out_b_U0_out_buf_6_ce0 : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_out_buf_7_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal memcpy_omatrix_out_b_U0_out_buf_7_ce0 : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_out_buf_8_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal memcpy_omatrix_out_b_U0_out_buf_8_ce0 : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_out_buf_9_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal memcpy_omatrix_out_b_U0_out_buf_9_ce0 : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_out_buf_10_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal memcpy_omatrix_out_b_U0_out_buf_10_ce0 : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_out_buf_11_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal memcpy_omatrix_out_b_U0_out_buf_11_ce0 : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_out_buf_12_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal memcpy_omatrix_out_b_U0_out_buf_12_ce0 : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_out_buf_13_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal memcpy_omatrix_out_b_U0_out_buf_13_ce0 : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_out_buf_14_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal memcpy_omatrix_out_b_U0_out_buf_14_ce0 : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_out_buf_15_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal memcpy_omatrix_out_b_U0_out_buf_15_ce0 : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal in1_buf_0_i_full_n : STD_LOGIC;
    signal in1_buf_0_t_empty_n : STD_LOGIC;
    signal in1_buf_1_i_full_n : STD_LOGIC;
    signal in1_buf_1_t_empty_n : STD_LOGIC;
    signal in1_buf_2_i_full_n : STD_LOGIC;
    signal in1_buf_2_t_empty_n : STD_LOGIC;
    signal in1_buf_3_i_full_n : STD_LOGIC;
    signal in1_buf_3_t_empty_n : STD_LOGIC;
    signal in1_buf_4_i_full_n : STD_LOGIC;
    signal in1_buf_4_t_empty_n : STD_LOGIC;
    signal in1_buf_5_i_full_n : STD_LOGIC;
    signal in1_buf_5_t_empty_n : STD_LOGIC;
    signal in1_buf_6_i_full_n : STD_LOGIC;
    signal in1_buf_6_t_empty_n : STD_LOGIC;
    signal in1_buf_7_i_full_n : STD_LOGIC;
    signal in1_buf_7_t_empty_n : STD_LOGIC;
    signal in1_buf_8_i_full_n : STD_LOGIC;
    signal in1_buf_8_t_empty_n : STD_LOGIC;
    signal in1_buf_9_i_full_n : STD_LOGIC;
    signal in1_buf_9_t_empty_n : STD_LOGIC;
    signal in1_buf_10_i_full_n : STD_LOGIC;
    signal in1_buf_10_t_empty_n : STD_LOGIC;
    signal in1_buf_11_i_full_n : STD_LOGIC;
    signal in1_buf_11_t_empty_n : STD_LOGIC;
    signal in1_buf_12_i_full_n : STD_LOGIC;
    signal in1_buf_12_t_empty_n : STD_LOGIC;
    signal in1_buf_13_i_full_n : STD_LOGIC;
    signal in1_buf_13_t_empty_n : STD_LOGIC;
    signal in1_buf_14_i_full_n : STD_LOGIC;
    signal in1_buf_14_t_empty_n : STD_LOGIC;
    signal in1_buf_15_i_full_n : STD_LOGIC;
    signal in1_buf_15_t_empty_n : STD_LOGIC;
    signal out_buf_0_i_full_n : STD_LOGIC;
    signal out_buf_0_t_empty_n : STD_LOGIC;
    signal out_buf_1_i_full_n : STD_LOGIC;
    signal out_buf_1_t_empty_n : STD_LOGIC;
    signal out_buf_2_i_full_n : STD_LOGIC;
    signal out_buf_2_t_empty_n : STD_LOGIC;
    signal out_buf_3_i_full_n : STD_LOGIC;
    signal out_buf_3_t_empty_n : STD_LOGIC;
    signal out_buf_4_i_full_n : STD_LOGIC;
    signal out_buf_4_t_empty_n : STD_LOGIC;
    signal out_buf_5_i_full_n : STD_LOGIC;
    signal out_buf_5_t_empty_n : STD_LOGIC;
    signal out_buf_6_i_full_n : STD_LOGIC;
    signal out_buf_6_t_empty_n : STD_LOGIC;
    signal out_buf_7_i_full_n : STD_LOGIC;
    signal out_buf_7_t_empty_n : STD_LOGIC;
    signal out_buf_8_i_full_n : STD_LOGIC;
    signal out_buf_8_t_empty_n : STD_LOGIC;
    signal out_buf_9_i_full_n : STD_LOGIC;
    signal out_buf_9_t_empty_n : STD_LOGIC;
    signal out_buf_10_i_full_n : STD_LOGIC;
    signal out_buf_10_t_empty_n : STD_LOGIC;
    signal out_buf_11_i_full_n : STD_LOGIC;
    signal out_buf_11_t_empty_n : STD_LOGIC;
    signal out_buf_12_i_full_n : STD_LOGIC;
    signal out_buf_12_t_empty_n : STD_LOGIC;
    signal out_buf_13_i_full_n : STD_LOGIC;
    signal out_buf_13_t_empty_n : STD_LOGIC;
    signal out_buf_14_i_full_n : STD_LOGIC;
    signal out_buf_14_t_empty_n : STD_LOGIC;
    signal out_buf_15_i_full_n : STD_LOGIC;
    signal out_buf_15_t_empty_n : STD_LOGIC;
    signal i_0_i_i_c_full_n : STD_LOGIC;
    signal i_0_i_i_c_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i_c_empty_n : STD_LOGIC;
    signal imatrix_offset_c_full_n : STD_LOGIC;
    signal imatrix_offset_c_dout : STD_LOGIC_VECTOR (61 downto 0);
    signal imatrix_offset_c_empty_n : STD_LOGIC;
    signal omatrix_offset_c_full_n : STD_LOGIC;
    signal omatrix_offset_c_dout : STD_LOGIC_VECTOR (61 downto 0);
    signal omatrix_offset_c_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_Loop_0_proc19_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Loop_0_proc19_U0_ap_ready : STD_LOGIC;
    signal Loop_0_proc19_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_Loop_1_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Loop_1_proc_U0_ap_ready : STD_LOGIC;
    signal Loop_1_proc_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal Loop_0_proc19_U0_start_full_n : STD_LOGIC;
    signal Loop_0_proc19_U0_start_write : STD_LOGIC;
    signal Loop_1_proc_U0_start_full_n : STD_LOGIC;
    signal Loop_1_proc_U0_start_write : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_start_full_n : STD_LOGIC;
    signal memcpy_omatrix_out_b_U0_start_write : STD_LOGIC;

    component Loop_0_proc19 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        i_0_i_i : IN STD_LOGIC_VECTOR (1 downto 0);
        in1_buf_0_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_0_ce0 : OUT STD_LOGIC;
        in1_buf_0_we0 : OUT STD_LOGIC;
        in1_buf_0_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        in1_buf_1_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_1_ce0 : OUT STD_LOGIC;
        in1_buf_1_we0 : OUT STD_LOGIC;
        in1_buf_1_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        in1_buf_2_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_2_ce0 : OUT STD_LOGIC;
        in1_buf_2_we0 : OUT STD_LOGIC;
        in1_buf_2_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        in1_buf_3_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_3_ce0 : OUT STD_LOGIC;
        in1_buf_3_we0 : OUT STD_LOGIC;
        in1_buf_3_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        in1_buf_4_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_4_ce0 : OUT STD_LOGIC;
        in1_buf_4_we0 : OUT STD_LOGIC;
        in1_buf_4_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        in1_buf_5_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_5_ce0 : OUT STD_LOGIC;
        in1_buf_5_we0 : OUT STD_LOGIC;
        in1_buf_5_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        in1_buf_6_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_6_ce0 : OUT STD_LOGIC;
        in1_buf_6_we0 : OUT STD_LOGIC;
        in1_buf_6_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        in1_buf_7_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_7_ce0 : OUT STD_LOGIC;
        in1_buf_7_we0 : OUT STD_LOGIC;
        in1_buf_7_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        in1_buf_8_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_8_ce0 : OUT STD_LOGIC;
        in1_buf_8_we0 : OUT STD_LOGIC;
        in1_buf_8_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        in1_buf_9_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_9_ce0 : OUT STD_LOGIC;
        in1_buf_9_we0 : OUT STD_LOGIC;
        in1_buf_9_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        in1_buf_10_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_10_ce0 : OUT STD_LOGIC;
        in1_buf_10_we0 : OUT STD_LOGIC;
        in1_buf_10_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        in1_buf_11_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_11_ce0 : OUT STD_LOGIC;
        in1_buf_11_we0 : OUT STD_LOGIC;
        in1_buf_11_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        in1_buf_12_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_12_ce0 : OUT STD_LOGIC;
        in1_buf_12_we0 : OUT STD_LOGIC;
        in1_buf_12_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        in1_buf_13_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_13_ce0 : OUT STD_LOGIC;
        in1_buf_13_we0 : OUT STD_LOGIC;
        in1_buf_13_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        in1_buf_14_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_14_ce0 : OUT STD_LOGIC;
        in1_buf_14_we0 : OUT STD_LOGIC;
        in1_buf_14_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        in1_buf_15_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_15_ce0 : OUT STD_LOGIC;
        in1_buf_15_we0 : OUT STD_LOGIC;
        in1_buf_15_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        i_0_i_i_c_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        i_0_i_i_c_full_n : IN STD_LOGIC;
        i_0_i_i_c_write : OUT STD_LOGIC;
        imatrix_offset : IN STD_LOGIC_VECTOR (61 downto 0);
        omatrix_offset : IN STD_LOGIC_VECTOR (61 downto 0);
        imatrix_offset_out_din : OUT STD_LOGIC_VECTOR (61 downto 0);
        imatrix_offset_out_full_n : IN STD_LOGIC;
        imatrix_offset_out_write : OUT STD_LOGIC;
        omatrix_offset_out_din : OUT STD_LOGIC_VECTOR (61 downto 0);
        omatrix_offset_out_full_n : IN STD_LOGIC;
        omatrix_offset_out_write : OUT STD_LOGIC );
    end component;


    component Loop_1_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in1_buf_0_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_0_ce0 : OUT STD_LOGIC;
        in1_buf_0_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
        m_axi_imatrix_AWVALID : OUT STD_LOGIC;
        m_axi_imatrix_AWREADY : IN STD_LOGIC;
        m_axi_imatrix_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_imatrix_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_imatrix_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_imatrix_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_imatrix_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_imatrix_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_imatrix_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_imatrix_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_imatrix_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_imatrix_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_imatrix_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_imatrix_WVALID : OUT STD_LOGIC;
        m_axi_imatrix_WREADY : IN STD_LOGIC;
        m_axi_imatrix_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_imatrix_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_imatrix_WLAST : OUT STD_LOGIC;
        m_axi_imatrix_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_imatrix_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_imatrix_ARVALID : OUT STD_LOGIC;
        m_axi_imatrix_ARREADY : IN STD_LOGIC;
        m_axi_imatrix_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_imatrix_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_imatrix_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_imatrix_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_imatrix_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_imatrix_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_imatrix_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_imatrix_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_imatrix_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_imatrix_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_imatrix_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_imatrix_RVALID : IN STD_LOGIC;
        m_axi_imatrix_RREADY : OUT STD_LOGIC;
        m_axi_imatrix_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_imatrix_RLAST : IN STD_LOGIC;
        m_axi_imatrix_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_imatrix_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_imatrix_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_imatrix_BVALID : IN STD_LOGIC;
        m_axi_imatrix_BREADY : OUT STD_LOGIC;
        m_axi_imatrix_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_imatrix_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_imatrix_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        imatrix_offset_dout : IN STD_LOGIC_VECTOR (61 downto 0);
        imatrix_offset_empty_n : IN STD_LOGIC;
        imatrix_offset_read : OUT STD_LOGIC;
        out_buf_0_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_0_ce0 : OUT STD_LOGIC;
        out_buf_0_we0 : OUT STD_LOGIC;
        out_buf_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        in1_buf_1_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_1_ce0 : OUT STD_LOGIC;
        in1_buf_1_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
        out_buf_1_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_1_ce0 : OUT STD_LOGIC;
        out_buf_1_we0 : OUT STD_LOGIC;
        out_buf_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        in1_buf_2_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_2_ce0 : OUT STD_LOGIC;
        in1_buf_2_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
        out_buf_2_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_2_ce0 : OUT STD_LOGIC;
        out_buf_2_we0 : OUT STD_LOGIC;
        out_buf_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        in1_buf_3_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_3_ce0 : OUT STD_LOGIC;
        in1_buf_3_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
        out_buf_3_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_3_ce0 : OUT STD_LOGIC;
        out_buf_3_we0 : OUT STD_LOGIC;
        out_buf_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        in1_buf_4_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_4_ce0 : OUT STD_LOGIC;
        in1_buf_4_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
        out_buf_4_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_4_ce0 : OUT STD_LOGIC;
        out_buf_4_we0 : OUT STD_LOGIC;
        out_buf_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        in1_buf_5_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_5_ce0 : OUT STD_LOGIC;
        in1_buf_5_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
        out_buf_5_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_5_ce0 : OUT STD_LOGIC;
        out_buf_5_we0 : OUT STD_LOGIC;
        out_buf_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        in1_buf_6_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_6_ce0 : OUT STD_LOGIC;
        in1_buf_6_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
        out_buf_6_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_6_ce0 : OUT STD_LOGIC;
        out_buf_6_we0 : OUT STD_LOGIC;
        out_buf_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        in1_buf_7_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_7_ce0 : OUT STD_LOGIC;
        in1_buf_7_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
        out_buf_7_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_7_ce0 : OUT STD_LOGIC;
        out_buf_7_we0 : OUT STD_LOGIC;
        out_buf_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        in1_buf_8_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_8_ce0 : OUT STD_LOGIC;
        in1_buf_8_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
        out_buf_8_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_8_ce0 : OUT STD_LOGIC;
        out_buf_8_we0 : OUT STD_LOGIC;
        out_buf_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        in1_buf_9_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_9_ce0 : OUT STD_LOGIC;
        in1_buf_9_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
        out_buf_9_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_9_ce0 : OUT STD_LOGIC;
        out_buf_9_we0 : OUT STD_LOGIC;
        out_buf_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        in1_buf_10_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_10_ce0 : OUT STD_LOGIC;
        in1_buf_10_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
        out_buf_10_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_10_ce0 : OUT STD_LOGIC;
        out_buf_10_we0 : OUT STD_LOGIC;
        out_buf_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        in1_buf_11_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_11_ce0 : OUT STD_LOGIC;
        in1_buf_11_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
        out_buf_11_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_11_ce0 : OUT STD_LOGIC;
        out_buf_11_we0 : OUT STD_LOGIC;
        out_buf_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        in1_buf_12_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_12_ce0 : OUT STD_LOGIC;
        in1_buf_12_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
        out_buf_12_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_12_ce0 : OUT STD_LOGIC;
        out_buf_12_we0 : OUT STD_LOGIC;
        out_buf_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        in1_buf_13_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_13_ce0 : OUT STD_LOGIC;
        in1_buf_13_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
        out_buf_13_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_13_ce0 : OUT STD_LOGIC;
        out_buf_13_we0 : OUT STD_LOGIC;
        out_buf_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        in1_buf_14_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_14_ce0 : OUT STD_LOGIC;
        in1_buf_14_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
        out_buf_14_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_14_ce0 : OUT STD_LOGIC;
        out_buf_14_we0 : OUT STD_LOGIC;
        out_buf_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        in1_buf_15_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        in1_buf_15_ce0 : OUT STD_LOGIC;
        in1_buf_15_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
        out_buf_15_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_15_ce0 : OUT STD_LOGIC;
        out_buf_15_we0 : OUT STD_LOGIC;
        out_buf_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component memcpy_omatrix_out_b IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_omatrix_AWVALID : OUT STD_LOGIC;
        m_axi_omatrix_AWREADY : IN STD_LOGIC;
        m_axi_omatrix_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_omatrix_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_omatrix_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_omatrix_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_omatrix_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_omatrix_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_omatrix_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_omatrix_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_omatrix_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_omatrix_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_omatrix_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_omatrix_WVALID : OUT STD_LOGIC;
        m_axi_omatrix_WREADY : IN STD_LOGIC;
        m_axi_omatrix_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_omatrix_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_omatrix_WLAST : OUT STD_LOGIC;
        m_axi_omatrix_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_omatrix_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_omatrix_ARVALID : OUT STD_LOGIC;
        m_axi_omatrix_ARREADY : IN STD_LOGIC;
        m_axi_omatrix_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_omatrix_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_omatrix_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_omatrix_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_omatrix_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_omatrix_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_omatrix_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_omatrix_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_omatrix_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_omatrix_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_omatrix_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_omatrix_RVALID : IN STD_LOGIC;
        m_axi_omatrix_RREADY : OUT STD_LOGIC;
        m_axi_omatrix_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_omatrix_RLAST : IN STD_LOGIC;
        m_axi_omatrix_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_omatrix_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_omatrix_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_omatrix_BVALID : IN STD_LOGIC;
        m_axi_omatrix_BREADY : OUT STD_LOGIC;
        m_axi_omatrix_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_omatrix_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_omatrix_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        omatrix_offset_dout : IN STD_LOGIC_VECTOR (61 downto 0);
        omatrix_offset_empty_n : IN STD_LOGIC;
        omatrix_offset_read : OUT STD_LOGIC;
        i_0_i_i_c_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        i_0_i_i_c_empty_n : IN STD_LOGIC;
        i_0_i_i_c_read : OUT STD_LOGIC;
        out_buf_0_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_0_ce0 : OUT STD_LOGIC;
        out_buf_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_buf_1_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_1_ce0 : OUT STD_LOGIC;
        out_buf_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_buf_2_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_2_ce0 : OUT STD_LOGIC;
        out_buf_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_buf_3_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_3_ce0 : OUT STD_LOGIC;
        out_buf_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_buf_4_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_4_ce0 : OUT STD_LOGIC;
        out_buf_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_buf_5_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_5_ce0 : OUT STD_LOGIC;
        out_buf_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_buf_6_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_6_ce0 : OUT STD_LOGIC;
        out_buf_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_buf_7_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_7_ce0 : OUT STD_LOGIC;
        out_buf_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_buf_8_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_8_ce0 : OUT STD_LOGIC;
        out_buf_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_buf_9_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_9_ce0 : OUT STD_LOGIC;
        out_buf_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_buf_10_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_10_ce0 : OUT STD_LOGIC;
        out_buf_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_buf_11_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_11_ce0 : OUT STD_LOGIC;
        out_buf_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_buf_12_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_12_ce0 : OUT STD_LOGIC;
        out_buf_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_buf_13_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_13_ce0 : OUT STD_LOGIC;
        out_buf_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_buf_14_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_14_ce0 : OUT STD_LOGIC;
        out_buf_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_buf_15_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_buf_15_ce0 : OUT STD_LOGIC;
        out_buf_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dataflow_in_loop_dEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (5 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (5 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component dataflow_in_loop_tde IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component fifo_w1_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w62_d1_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (61 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (61 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w62_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (61 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (61 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    in1_buf_0_U : component dataflow_in_loop_dEe
    generic map (
        DataWidth => 6,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_0_proc19_U0_in1_buf_0_address0,
        i_ce0 => Loop_0_proc19_U0_in1_buf_0_ce0,
        i_we0 => Loop_0_proc19_U0_in1_buf_0_we0,
        i_d0 => Loop_0_proc19_U0_in1_buf_0_d0,
        i_q0 => in1_buf_0_i_q0,
        t_address0 => Loop_1_proc_U0_in1_buf_0_address0,
        t_ce0 => Loop_1_proc_U0_in1_buf_0_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv6_0,
        t_q0 => in1_buf_0_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => in1_buf_0_i_full_n,
        i_write => ap_channel_done_in1_buf_0,
        t_empty_n => in1_buf_0_t_empty_n,
        t_read => Loop_1_proc_U0_ap_ready);

    in1_buf_1_U : component dataflow_in_loop_dEe
    generic map (
        DataWidth => 6,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_0_proc19_U0_in1_buf_1_address0,
        i_ce0 => Loop_0_proc19_U0_in1_buf_1_ce0,
        i_we0 => Loop_0_proc19_U0_in1_buf_1_we0,
        i_d0 => Loop_0_proc19_U0_in1_buf_1_d0,
        i_q0 => in1_buf_1_i_q0,
        t_address0 => Loop_1_proc_U0_in1_buf_1_address0,
        t_ce0 => Loop_1_proc_U0_in1_buf_1_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv6_0,
        t_q0 => in1_buf_1_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => in1_buf_1_i_full_n,
        i_write => ap_channel_done_in1_buf_1,
        t_empty_n => in1_buf_1_t_empty_n,
        t_read => Loop_1_proc_U0_ap_ready);

    in1_buf_2_U : component dataflow_in_loop_dEe
    generic map (
        DataWidth => 6,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_0_proc19_U0_in1_buf_2_address0,
        i_ce0 => Loop_0_proc19_U0_in1_buf_2_ce0,
        i_we0 => Loop_0_proc19_U0_in1_buf_2_we0,
        i_d0 => Loop_0_proc19_U0_in1_buf_2_d0,
        i_q0 => in1_buf_2_i_q0,
        t_address0 => Loop_1_proc_U0_in1_buf_2_address0,
        t_ce0 => Loop_1_proc_U0_in1_buf_2_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv6_0,
        t_q0 => in1_buf_2_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => in1_buf_2_i_full_n,
        i_write => ap_channel_done_in1_buf_2,
        t_empty_n => in1_buf_2_t_empty_n,
        t_read => Loop_1_proc_U0_ap_ready);

    in1_buf_3_U : component dataflow_in_loop_dEe
    generic map (
        DataWidth => 6,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_0_proc19_U0_in1_buf_3_address0,
        i_ce0 => Loop_0_proc19_U0_in1_buf_3_ce0,
        i_we0 => Loop_0_proc19_U0_in1_buf_3_we0,
        i_d0 => Loop_0_proc19_U0_in1_buf_3_d0,
        i_q0 => in1_buf_3_i_q0,
        t_address0 => Loop_1_proc_U0_in1_buf_3_address0,
        t_ce0 => Loop_1_proc_U0_in1_buf_3_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv6_0,
        t_q0 => in1_buf_3_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => in1_buf_3_i_full_n,
        i_write => ap_channel_done_in1_buf_3,
        t_empty_n => in1_buf_3_t_empty_n,
        t_read => Loop_1_proc_U0_ap_ready);

    in1_buf_4_U : component dataflow_in_loop_dEe
    generic map (
        DataWidth => 6,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_0_proc19_U0_in1_buf_4_address0,
        i_ce0 => Loop_0_proc19_U0_in1_buf_4_ce0,
        i_we0 => Loop_0_proc19_U0_in1_buf_4_we0,
        i_d0 => Loop_0_proc19_U0_in1_buf_4_d0,
        i_q0 => in1_buf_4_i_q0,
        t_address0 => Loop_1_proc_U0_in1_buf_4_address0,
        t_ce0 => Loop_1_proc_U0_in1_buf_4_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv6_0,
        t_q0 => in1_buf_4_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => in1_buf_4_i_full_n,
        i_write => ap_channel_done_in1_buf_4,
        t_empty_n => in1_buf_4_t_empty_n,
        t_read => Loop_1_proc_U0_ap_ready);

    in1_buf_5_U : component dataflow_in_loop_dEe
    generic map (
        DataWidth => 6,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_0_proc19_U0_in1_buf_5_address0,
        i_ce0 => Loop_0_proc19_U0_in1_buf_5_ce0,
        i_we0 => Loop_0_proc19_U0_in1_buf_5_we0,
        i_d0 => Loop_0_proc19_U0_in1_buf_5_d0,
        i_q0 => in1_buf_5_i_q0,
        t_address0 => Loop_1_proc_U0_in1_buf_5_address0,
        t_ce0 => Loop_1_proc_U0_in1_buf_5_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv6_0,
        t_q0 => in1_buf_5_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => in1_buf_5_i_full_n,
        i_write => ap_channel_done_in1_buf_5,
        t_empty_n => in1_buf_5_t_empty_n,
        t_read => Loop_1_proc_U0_ap_ready);

    in1_buf_6_U : component dataflow_in_loop_dEe
    generic map (
        DataWidth => 6,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_0_proc19_U0_in1_buf_6_address0,
        i_ce0 => Loop_0_proc19_U0_in1_buf_6_ce0,
        i_we0 => Loop_0_proc19_U0_in1_buf_6_we0,
        i_d0 => Loop_0_proc19_U0_in1_buf_6_d0,
        i_q0 => in1_buf_6_i_q0,
        t_address0 => Loop_1_proc_U0_in1_buf_6_address0,
        t_ce0 => Loop_1_proc_U0_in1_buf_6_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv6_0,
        t_q0 => in1_buf_6_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => in1_buf_6_i_full_n,
        i_write => ap_channel_done_in1_buf_6,
        t_empty_n => in1_buf_6_t_empty_n,
        t_read => Loop_1_proc_U0_ap_ready);

    in1_buf_7_U : component dataflow_in_loop_dEe
    generic map (
        DataWidth => 6,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_0_proc19_U0_in1_buf_7_address0,
        i_ce0 => Loop_0_proc19_U0_in1_buf_7_ce0,
        i_we0 => Loop_0_proc19_U0_in1_buf_7_we0,
        i_d0 => Loop_0_proc19_U0_in1_buf_7_d0,
        i_q0 => in1_buf_7_i_q0,
        t_address0 => Loop_1_proc_U0_in1_buf_7_address0,
        t_ce0 => Loop_1_proc_U0_in1_buf_7_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv6_0,
        t_q0 => in1_buf_7_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => in1_buf_7_i_full_n,
        i_write => ap_channel_done_in1_buf_7,
        t_empty_n => in1_buf_7_t_empty_n,
        t_read => Loop_1_proc_U0_ap_ready);

    in1_buf_8_U : component dataflow_in_loop_dEe
    generic map (
        DataWidth => 6,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_0_proc19_U0_in1_buf_8_address0,
        i_ce0 => Loop_0_proc19_U0_in1_buf_8_ce0,
        i_we0 => Loop_0_proc19_U0_in1_buf_8_we0,
        i_d0 => Loop_0_proc19_U0_in1_buf_8_d0,
        i_q0 => in1_buf_8_i_q0,
        t_address0 => Loop_1_proc_U0_in1_buf_8_address0,
        t_ce0 => Loop_1_proc_U0_in1_buf_8_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv6_0,
        t_q0 => in1_buf_8_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => in1_buf_8_i_full_n,
        i_write => ap_channel_done_in1_buf_8,
        t_empty_n => in1_buf_8_t_empty_n,
        t_read => Loop_1_proc_U0_ap_ready);

    in1_buf_9_U : component dataflow_in_loop_dEe
    generic map (
        DataWidth => 6,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_0_proc19_U0_in1_buf_9_address0,
        i_ce0 => Loop_0_proc19_U0_in1_buf_9_ce0,
        i_we0 => Loop_0_proc19_U0_in1_buf_9_we0,
        i_d0 => Loop_0_proc19_U0_in1_buf_9_d0,
        i_q0 => in1_buf_9_i_q0,
        t_address0 => Loop_1_proc_U0_in1_buf_9_address0,
        t_ce0 => Loop_1_proc_U0_in1_buf_9_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv6_0,
        t_q0 => in1_buf_9_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => in1_buf_9_i_full_n,
        i_write => ap_channel_done_in1_buf_9,
        t_empty_n => in1_buf_9_t_empty_n,
        t_read => Loop_1_proc_U0_ap_ready);

    in1_buf_10_U : component dataflow_in_loop_dEe
    generic map (
        DataWidth => 6,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_0_proc19_U0_in1_buf_10_address0,
        i_ce0 => Loop_0_proc19_U0_in1_buf_10_ce0,
        i_we0 => Loop_0_proc19_U0_in1_buf_10_we0,
        i_d0 => Loop_0_proc19_U0_in1_buf_10_d0,
        i_q0 => in1_buf_10_i_q0,
        t_address0 => Loop_1_proc_U0_in1_buf_10_address0,
        t_ce0 => Loop_1_proc_U0_in1_buf_10_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv6_0,
        t_q0 => in1_buf_10_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => in1_buf_10_i_full_n,
        i_write => ap_channel_done_in1_buf_10,
        t_empty_n => in1_buf_10_t_empty_n,
        t_read => Loop_1_proc_U0_ap_ready);

    in1_buf_11_U : component dataflow_in_loop_dEe
    generic map (
        DataWidth => 6,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_0_proc19_U0_in1_buf_11_address0,
        i_ce0 => Loop_0_proc19_U0_in1_buf_11_ce0,
        i_we0 => Loop_0_proc19_U0_in1_buf_11_we0,
        i_d0 => Loop_0_proc19_U0_in1_buf_11_d0,
        i_q0 => in1_buf_11_i_q0,
        t_address0 => Loop_1_proc_U0_in1_buf_11_address0,
        t_ce0 => Loop_1_proc_U0_in1_buf_11_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv6_0,
        t_q0 => in1_buf_11_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => in1_buf_11_i_full_n,
        i_write => ap_channel_done_in1_buf_11,
        t_empty_n => in1_buf_11_t_empty_n,
        t_read => Loop_1_proc_U0_ap_ready);

    in1_buf_12_U : component dataflow_in_loop_dEe
    generic map (
        DataWidth => 6,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_0_proc19_U0_in1_buf_12_address0,
        i_ce0 => Loop_0_proc19_U0_in1_buf_12_ce0,
        i_we0 => Loop_0_proc19_U0_in1_buf_12_we0,
        i_d0 => Loop_0_proc19_U0_in1_buf_12_d0,
        i_q0 => in1_buf_12_i_q0,
        t_address0 => Loop_1_proc_U0_in1_buf_12_address0,
        t_ce0 => Loop_1_proc_U0_in1_buf_12_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv6_0,
        t_q0 => in1_buf_12_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => in1_buf_12_i_full_n,
        i_write => ap_channel_done_in1_buf_12,
        t_empty_n => in1_buf_12_t_empty_n,
        t_read => Loop_1_proc_U0_ap_ready);

    in1_buf_13_U : component dataflow_in_loop_dEe
    generic map (
        DataWidth => 6,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_0_proc19_U0_in1_buf_13_address0,
        i_ce0 => Loop_0_proc19_U0_in1_buf_13_ce0,
        i_we0 => Loop_0_proc19_U0_in1_buf_13_we0,
        i_d0 => Loop_0_proc19_U0_in1_buf_13_d0,
        i_q0 => in1_buf_13_i_q0,
        t_address0 => Loop_1_proc_U0_in1_buf_13_address0,
        t_ce0 => Loop_1_proc_U0_in1_buf_13_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv6_0,
        t_q0 => in1_buf_13_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => in1_buf_13_i_full_n,
        i_write => ap_channel_done_in1_buf_13,
        t_empty_n => in1_buf_13_t_empty_n,
        t_read => Loop_1_proc_U0_ap_ready);

    in1_buf_14_U : component dataflow_in_loop_dEe
    generic map (
        DataWidth => 6,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_0_proc19_U0_in1_buf_14_address0,
        i_ce0 => Loop_0_proc19_U0_in1_buf_14_ce0,
        i_we0 => Loop_0_proc19_U0_in1_buf_14_we0,
        i_d0 => Loop_0_proc19_U0_in1_buf_14_d0,
        i_q0 => in1_buf_14_i_q0,
        t_address0 => Loop_1_proc_U0_in1_buf_14_address0,
        t_ce0 => Loop_1_proc_U0_in1_buf_14_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv6_0,
        t_q0 => in1_buf_14_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => in1_buf_14_i_full_n,
        i_write => ap_channel_done_in1_buf_14,
        t_empty_n => in1_buf_14_t_empty_n,
        t_read => Loop_1_proc_U0_ap_ready);

    in1_buf_15_U : component dataflow_in_loop_dEe
    generic map (
        DataWidth => 6,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_0_proc19_U0_in1_buf_15_address0,
        i_ce0 => Loop_0_proc19_U0_in1_buf_15_ce0,
        i_we0 => Loop_0_proc19_U0_in1_buf_15_we0,
        i_d0 => Loop_0_proc19_U0_in1_buf_15_d0,
        i_q0 => in1_buf_15_i_q0,
        t_address0 => Loop_1_proc_U0_in1_buf_15_address0,
        t_ce0 => Loop_1_proc_U0_in1_buf_15_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv6_0,
        t_q0 => in1_buf_15_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => in1_buf_15_i_full_n,
        i_write => ap_channel_done_in1_buf_15,
        t_empty_n => in1_buf_15_t_empty_n,
        t_read => Loop_1_proc_U0_ap_ready);

    out_buf_0_U : component dataflow_in_loop_tde
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_1_proc_U0_out_buf_0_address0,
        i_ce0 => Loop_1_proc_U0_out_buf_0_ce0,
        i_we0 => Loop_1_proc_U0_out_buf_0_we0,
        i_d0 => Loop_1_proc_U0_out_buf_0_d0,
        i_q0 => out_buf_0_i_q0,
        t_address0 => memcpy_omatrix_out_b_U0_out_buf_0_address0,
        t_ce0 => memcpy_omatrix_out_b_U0_out_buf_0_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => out_buf_0_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_buf_0_i_full_n,
        i_write => ap_channel_done_out_buf_0,
        t_empty_n => out_buf_0_t_empty_n,
        t_read => memcpy_omatrix_out_b_U0_ap_ready);

    out_buf_1_U : component dataflow_in_loop_tde
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_1_proc_U0_out_buf_1_address0,
        i_ce0 => Loop_1_proc_U0_out_buf_1_ce0,
        i_we0 => Loop_1_proc_U0_out_buf_1_we0,
        i_d0 => Loop_1_proc_U0_out_buf_1_d0,
        i_q0 => out_buf_1_i_q0,
        t_address0 => memcpy_omatrix_out_b_U0_out_buf_1_address0,
        t_ce0 => memcpy_omatrix_out_b_U0_out_buf_1_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => out_buf_1_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_buf_1_i_full_n,
        i_write => ap_channel_done_out_buf_1,
        t_empty_n => out_buf_1_t_empty_n,
        t_read => memcpy_omatrix_out_b_U0_ap_ready);

    out_buf_2_U : component dataflow_in_loop_tde
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_1_proc_U0_out_buf_2_address0,
        i_ce0 => Loop_1_proc_U0_out_buf_2_ce0,
        i_we0 => Loop_1_proc_U0_out_buf_2_we0,
        i_d0 => Loop_1_proc_U0_out_buf_2_d0,
        i_q0 => out_buf_2_i_q0,
        t_address0 => memcpy_omatrix_out_b_U0_out_buf_2_address0,
        t_ce0 => memcpy_omatrix_out_b_U0_out_buf_2_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => out_buf_2_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_buf_2_i_full_n,
        i_write => ap_channel_done_out_buf_2,
        t_empty_n => out_buf_2_t_empty_n,
        t_read => memcpy_omatrix_out_b_U0_ap_ready);

    out_buf_3_U : component dataflow_in_loop_tde
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_1_proc_U0_out_buf_3_address0,
        i_ce0 => Loop_1_proc_U0_out_buf_3_ce0,
        i_we0 => Loop_1_proc_U0_out_buf_3_we0,
        i_d0 => Loop_1_proc_U0_out_buf_3_d0,
        i_q0 => out_buf_3_i_q0,
        t_address0 => memcpy_omatrix_out_b_U0_out_buf_3_address0,
        t_ce0 => memcpy_omatrix_out_b_U0_out_buf_3_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => out_buf_3_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_buf_3_i_full_n,
        i_write => ap_channel_done_out_buf_3,
        t_empty_n => out_buf_3_t_empty_n,
        t_read => memcpy_omatrix_out_b_U0_ap_ready);

    out_buf_4_U : component dataflow_in_loop_tde
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_1_proc_U0_out_buf_4_address0,
        i_ce0 => Loop_1_proc_U0_out_buf_4_ce0,
        i_we0 => Loop_1_proc_U0_out_buf_4_we0,
        i_d0 => Loop_1_proc_U0_out_buf_4_d0,
        i_q0 => out_buf_4_i_q0,
        t_address0 => memcpy_omatrix_out_b_U0_out_buf_4_address0,
        t_ce0 => memcpy_omatrix_out_b_U0_out_buf_4_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => out_buf_4_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_buf_4_i_full_n,
        i_write => ap_channel_done_out_buf_4,
        t_empty_n => out_buf_4_t_empty_n,
        t_read => memcpy_omatrix_out_b_U0_ap_ready);

    out_buf_5_U : component dataflow_in_loop_tde
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_1_proc_U0_out_buf_5_address0,
        i_ce0 => Loop_1_proc_U0_out_buf_5_ce0,
        i_we0 => Loop_1_proc_U0_out_buf_5_we0,
        i_d0 => Loop_1_proc_U0_out_buf_5_d0,
        i_q0 => out_buf_5_i_q0,
        t_address0 => memcpy_omatrix_out_b_U0_out_buf_5_address0,
        t_ce0 => memcpy_omatrix_out_b_U0_out_buf_5_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => out_buf_5_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_buf_5_i_full_n,
        i_write => ap_channel_done_out_buf_5,
        t_empty_n => out_buf_5_t_empty_n,
        t_read => memcpy_omatrix_out_b_U0_ap_ready);

    out_buf_6_U : component dataflow_in_loop_tde
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_1_proc_U0_out_buf_6_address0,
        i_ce0 => Loop_1_proc_U0_out_buf_6_ce0,
        i_we0 => Loop_1_proc_U0_out_buf_6_we0,
        i_d0 => Loop_1_proc_U0_out_buf_6_d0,
        i_q0 => out_buf_6_i_q0,
        t_address0 => memcpy_omatrix_out_b_U0_out_buf_6_address0,
        t_ce0 => memcpy_omatrix_out_b_U0_out_buf_6_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => out_buf_6_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_buf_6_i_full_n,
        i_write => ap_channel_done_out_buf_6,
        t_empty_n => out_buf_6_t_empty_n,
        t_read => memcpy_omatrix_out_b_U0_ap_ready);

    out_buf_7_U : component dataflow_in_loop_tde
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_1_proc_U0_out_buf_7_address0,
        i_ce0 => Loop_1_proc_U0_out_buf_7_ce0,
        i_we0 => Loop_1_proc_U0_out_buf_7_we0,
        i_d0 => Loop_1_proc_U0_out_buf_7_d0,
        i_q0 => out_buf_7_i_q0,
        t_address0 => memcpy_omatrix_out_b_U0_out_buf_7_address0,
        t_ce0 => memcpy_omatrix_out_b_U0_out_buf_7_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => out_buf_7_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_buf_7_i_full_n,
        i_write => ap_channel_done_out_buf_7,
        t_empty_n => out_buf_7_t_empty_n,
        t_read => memcpy_omatrix_out_b_U0_ap_ready);

    out_buf_8_U : component dataflow_in_loop_tde
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_1_proc_U0_out_buf_8_address0,
        i_ce0 => Loop_1_proc_U0_out_buf_8_ce0,
        i_we0 => Loop_1_proc_U0_out_buf_8_we0,
        i_d0 => Loop_1_proc_U0_out_buf_8_d0,
        i_q0 => out_buf_8_i_q0,
        t_address0 => memcpy_omatrix_out_b_U0_out_buf_8_address0,
        t_ce0 => memcpy_omatrix_out_b_U0_out_buf_8_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => out_buf_8_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_buf_8_i_full_n,
        i_write => ap_channel_done_out_buf_8,
        t_empty_n => out_buf_8_t_empty_n,
        t_read => memcpy_omatrix_out_b_U0_ap_ready);

    out_buf_9_U : component dataflow_in_loop_tde
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_1_proc_U0_out_buf_9_address0,
        i_ce0 => Loop_1_proc_U0_out_buf_9_ce0,
        i_we0 => Loop_1_proc_U0_out_buf_9_we0,
        i_d0 => Loop_1_proc_U0_out_buf_9_d0,
        i_q0 => out_buf_9_i_q0,
        t_address0 => memcpy_omatrix_out_b_U0_out_buf_9_address0,
        t_ce0 => memcpy_omatrix_out_b_U0_out_buf_9_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => out_buf_9_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_buf_9_i_full_n,
        i_write => ap_channel_done_out_buf_9,
        t_empty_n => out_buf_9_t_empty_n,
        t_read => memcpy_omatrix_out_b_U0_ap_ready);

    out_buf_10_U : component dataflow_in_loop_tde
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_1_proc_U0_out_buf_10_address0,
        i_ce0 => Loop_1_proc_U0_out_buf_10_ce0,
        i_we0 => Loop_1_proc_U0_out_buf_10_we0,
        i_d0 => Loop_1_proc_U0_out_buf_10_d0,
        i_q0 => out_buf_10_i_q0,
        t_address0 => memcpy_omatrix_out_b_U0_out_buf_10_address0,
        t_ce0 => memcpy_omatrix_out_b_U0_out_buf_10_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => out_buf_10_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_buf_10_i_full_n,
        i_write => ap_channel_done_out_buf_10,
        t_empty_n => out_buf_10_t_empty_n,
        t_read => memcpy_omatrix_out_b_U0_ap_ready);

    out_buf_11_U : component dataflow_in_loop_tde
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_1_proc_U0_out_buf_11_address0,
        i_ce0 => Loop_1_proc_U0_out_buf_11_ce0,
        i_we0 => Loop_1_proc_U0_out_buf_11_we0,
        i_d0 => Loop_1_proc_U0_out_buf_11_d0,
        i_q0 => out_buf_11_i_q0,
        t_address0 => memcpy_omatrix_out_b_U0_out_buf_11_address0,
        t_ce0 => memcpy_omatrix_out_b_U0_out_buf_11_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => out_buf_11_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_buf_11_i_full_n,
        i_write => ap_channel_done_out_buf_11,
        t_empty_n => out_buf_11_t_empty_n,
        t_read => memcpy_omatrix_out_b_U0_ap_ready);

    out_buf_12_U : component dataflow_in_loop_tde
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_1_proc_U0_out_buf_12_address0,
        i_ce0 => Loop_1_proc_U0_out_buf_12_ce0,
        i_we0 => Loop_1_proc_U0_out_buf_12_we0,
        i_d0 => Loop_1_proc_U0_out_buf_12_d0,
        i_q0 => out_buf_12_i_q0,
        t_address0 => memcpy_omatrix_out_b_U0_out_buf_12_address0,
        t_ce0 => memcpy_omatrix_out_b_U0_out_buf_12_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => out_buf_12_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_buf_12_i_full_n,
        i_write => ap_channel_done_out_buf_12,
        t_empty_n => out_buf_12_t_empty_n,
        t_read => memcpy_omatrix_out_b_U0_ap_ready);

    out_buf_13_U : component dataflow_in_loop_tde
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_1_proc_U0_out_buf_13_address0,
        i_ce0 => Loop_1_proc_U0_out_buf_13_ce0,
        i_we0 => Loop_1_proc_U0_out_buf_13_we0,
        i_d0 => Loop_1_proc_U0_out_buf_13_d0,
        i_q0 => out_buf_13_i_q0,
        t_address0 => memcpy_omatrix_out_b_U0_out_buf_13_address0,
        t_ce0 => memcpy_omatrix_out_b_U0_out_buf_13_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => out_buf_13_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_buf_13_i_full_n,
        i_write => ap_channel_done_out_buf_13,
        t_empty_n => out_buf_13_t_empty_n,
        t_read => memcpy_omatrix_out_b_U0_ap_ready);

    out_buf_14_U : component dataflow_in_loop_tde
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_1_proc_U0_out_buf_14_address0,
        i_ce0 => Loop_1_proc_U0_out_buf_14_ce0,
        i_we0 => Loop_1_proc_U0_out_buf_14_we0,
        i_d0 => Loop_1_proc_U0_out_buf_14_d0,
        i_q0 => out_buf_14_i_q0,
        t_address0 => memcpy_omatrix_out_b_U0_out_buf_14_address0,
        t_ce0 => memcpy_omatrix_out_b_U0_out_buf_14_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => out_buf_14_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_buf_14_i_full_n,
        i_write => ap_channel_done_out_buf_14,
        t_empty_n => out_buf_14_t_empty_n,
        t_read => memcpy_omatrix_out_b_U0_ap_ready);

    out_buf_15_U : component dataflow_in_loop_tde
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_1_proc_U0_out_buf_15_address0,
        i_ce0 => Loop_1_proc_U0_out_buf_15_ce0,
        i_we0 => Loop_1_proc_U0_out_buf_15_we0,
        i_d0 => Loop_1_proc_U0_out_buf_15_d0,
        i_q0 => out_buf_15_i_q0,
        t_address0 => memcpy_omatrix_out_b_U0_out_buf_15_address0,
        t_ce0 => memcpy_omatrix_out_b_U0_out_buf_15_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => out_buf_15_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_buf_15_i_full_n,
        i_write => ap_channel_done_out_buf_15,
        t_empty_n => out_buf_15_t_empty_n,
        t_read => memcpy_omatrix_out_b_U0_ap_ready);

    Loop_0_proc19_U0 : component Loop_0_proc19
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Loop_0_proc19_U0_ap_start,
        ap_done => Loop_0_proc19_U0_ap_done,
        ap_continue => Loop_0_proc19_U0_ap_continue,
        ap_idle => Loop_0_proc19_U0_ap_idle,
        ap_ready => Loop_0_proc19_U0_ap_ready,
        i_0_i_i => i_0_i_i,
        in1_buf_0_address0 => Loop_0_proc19_U0_in1_buf_0_address0,
        in1_buf_0_ce0 => Loop_0_proc19_U0_in1_buf_0_ce0,
        in1_buf_0_we0 => Loop_0_proc19_U0_in1_buf_0_we0,
        in1_buf_0_d0 => Loop_0_proc19_U0_in1_buf_0_d0,
        in1_buf_1_address0 => Loop_0_proc19_U0_in1_buf_1_address0,
        in1_buf_1_ce0 => Loop_0_proc19_U0_in1_buf_1_ce0,
        in1_buf_1_we0 => Loop_0_proc19_U0_in1_buf_1_we0,
        in1_buf_1_d0 => Loop_0_proc19_U0_in1_buf_1_d0,
        in1_buf_2_address0 => Loop_0_proc19_U0_in1_buf_2_address0,
        in1_buf_2_ce0 => Loop_0_proc19_U0_in1_buf_2_ce0,
        in1_buf_2_we0 => Loop_0_proc19_U0_in1_buf_2_we0,
        in1_buf_2_d0 => Loop_0_proc19_U0_in1_buf_2_d0,
        in1_buf_3_address0 => Loop_0_proc19_U0_in1_buf_3_address0,
        in1_buf_3_ce0 => Loop_0_proc19_U0_in1_buf_3_ce0,
        in1_buf_3_we0 => Loop_0_proc19_U0_in1_buf_3_we0,
        in1_buf_3_d0 => Loop_0_proc19_U0_in1_buf_3_d0,
        in1_buf_4_address0 => Loop_0_proc19_U0_in1_buf_4_address0,
        in1_buf_4_ce0 => Loop_0_proc19_U0_in1_buf_4_ce0,
        in1_buf_4_we0 => Loop_0_proc19_U0_in1_buf_4_we0,
        in1_buf_4_d0 => Loop_0_proc19_U0_in1_buf_4_d0,
        in1_buf_5_address0 => Loop_0_proc19_U0_in1_buf_5_address0,
        in1_buf_5_ce0 => Loop_0_proc19_U0_in1_buf_5_ce0,
        in1_buf_5_we0 => Loop_0_proc19_U0_in1_buf_5_we0,
        in1_buf_5_d0 => Loop_0_proc19_U0_in1_buf_5_d0,
        in1_buf_6_address0 => Loop_0_proc19_U0_in1_buf_6_address0,
        in1_buf_6_ce0 => Loop_0_proc19_U0_in1_buf_6_ce0,
        in1_buf_6_we0 => Loop_0_proc19_U0_in1_buf_6_we0,
        in1_buf_6_d0 => Loop_0_proc19_U0_in1_buf_6_d0,
        in1_buf_7_address0 => Loop_0_proc19_U0_in1_buf_7_address0,
        in1_buf_7_ce0 => Loop_0_proc19_U0_in1_buf_7_ce0,
        in1_buf_7_we0 => Loop_0_proc19_U0_in1_buf_7_we0,
        in1_buf_7_d0 => Loop_0_proc19_U0_in1_buf_7_d0,
        in1_buf_8_address0 => Loop_0_proc19_U0_in1_buf_8_address0,
        in1_buf_8_ce0 => Loop_0_proc19_U0_in1_buf_8_ce0,
        in1_buf_8_we0 => Loop_0_proc19_U0_in1_buf_8_we0,
        in1_buf_8_d0 => Loop_0_proc19_U0_in1_buf_8_d0,
        in1_buf_9_address0 => Loop_0_proc19_U0_in1_buf_9_address0,
        in1_buf_9_ce0 => Loop_0_proc19_U0_in1_buf_9_ce0,
        in1_buf_9_we0 => Loop_0_proc19_U0_in1_buf_9_we0,
        in1_buf_9_d0 => Loop_0_proc19_U0_in1_buf_9_d0,
        in1_buf_10_address0 => Loop_0_proc19_U0_in1_buf_10_address0,
        in1_buf_10_ce0 => Loop_0_proc19_U0_in1_buf_10_ce0,
        in1_buf_10_we0 => Loop_0_proc19_U0_in1_buf_10_we0,
        in1_buf_10_d0 => Loop_0_proc19_U0_in1_buf_10_d0,
        in1_buf_11_address0 => Loop_0_proc19_U0_in1_buf_11_address0,
        in1_buf_11_ce0 => Loop_0_proc19_U0_in1_buf_11_ce0,
        in1_buf_11_we0 => Loop_0_proc19_U0_in1_buf_11_we0,
        in1_buf_11_d0 => Loop_0_proc19_U0_in1_buf_11_d0,
        in1_buf_12_address0 => Loop_0_proc19_U0_in1_buf_12_address0,
        in1_buf_12_ce0 => Loop_0_proc19_U0_in1_buf_12_ce0,
        in1_buf_12_we0 => Loop_0_proc19_U0_in1_buf_12_we0,
        in1_buf_12_d0 => Loop_0_proc19_U0_in1_buf_12_d0,
        in1_buf_13_address0 => Loop_0_proc19_U0_in1_buf_13_address0,
        in1_buf_13_ce0 => Loop_0_proc19_U0_in1_buf_13_ce0,
        in1_buf_13_we0 => Loop_0_proc19_U0_in1_buf_13_we0,
        in1_buf_13_d0 => Loop_0_proc19_U0_in1_buf_13_d0,
        in1_buf_14_address0 => Loop_0_proc19_U0_in1_buf_14_address0,
        in1_buf_14_ce0 => Loop_0_proc19_U0_in1_buf_14_ce0,
        in1_buf_14_we0 => Loop_0_proc19_U0_in1_buf_14_we0,
        in1_buf_14_d0 => Loop_0_proc19_U0_in1_buf_14_d0,
        in1_buf_15_address0 => Loop_0_proc19_U0_in1_buf_15_address0,
        in1_buf_15_ce0 => Loop_0_proc19_U0_in1_buf_15_ce0,
        in1_buf_15_we0 => Loop_0_proc19_U0_in1_buf_15_we0,
        in1_buf_15_d0 => Loop_0_proc19_U0_in1_buf_15_d0,
        i_0_i_i_c_din => Loop_0_proc19_U0_i_0_i_i_c_din,
        i_0_i_i_c_full_n => i_0_i_i_c_full_n,
        i_0_i_i_c_write => Loop_0_proc19_U0_i_0_i_i_c_write,
        imatrix_offset => imatrix_offset,
        omatrix_offset => omatrix_offset,
        imatrix_offset_out_din => Loop_0_proc19_U0_imatrix_offset_out_din,
        imatrix_offset_out_full_n => imatrix_offset_c_full_n,
        imatrix_offset_out_write => Loop_0_proc19_U0_imatrix_offset_out_write,
        omatrix_offset_out_din => Loop_0_proc19_U0_omatrix_offset_out_din,
        omatrix_offset_out_full_n => omatrix_offset_c_full_n,
        omatrix_offset_out_write => Loop_0_proc19_U0_omatrix_offset_out_write);

    Loop_1_proc_U0 : component Loop_1_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Loop_1_proc_U0_ap_start,
        ap_done => Loop_1_proc_U0_ap_done,
        ap_continue => Loop_1_proc_U0_ap_continue,
        ap_idle => Loop_1_proc_U0_ap_idle,
        ap_ready => Loop_1_proc_U0_ap_ready,
        in1_buf_0_address0 => Loop_1_proc_U0_in1_buf_0_address0,
        in1_buf_0_ce0 => Loop_1_proc_U0_in1_buf_0_ce0,
        in1_buf_0_q0 => in1_buf_0_t_q0,
        m_axi_imatrix_AWVALID => Loop_1_proc_U0_m_axi_imatrix_AWVALID,
        m_axi_imatrix_AWREADY => ap_const_logic_0,
        m_axi_imatrix_AWADDR => Loop_1_proc_U0_m_axi_imatrix_AWADDR,
        m_axi_imatrix_AWID => Loop_1_proc_U0_m_axi_imatrix_AWID,
        m_axi_imatrix_AWLEN => Loop_1_proc_U0_m_axi_imatrix_AWLEN,
        m_axi_imatrix_AWSIZE => Loop_1_proc_U0_m_axi_imatrix_AWSIZE,
        m_axi_imatrix_AWBURST => Loop_1_proc_U0_m_axi_imatrix_AWBURST,
        m_axi_imatrix_AWLOCK => Loop_1_proc_U0_m_axi_imatrix_AWLOCK,
        m_axi_imatrix_AWCACHE => Loop_1_proc_U0_m_axi_imatrix_AWCACHE,
        m_axi_imatrix_AWPROT => Loop_1_proc_U0_m_axi_imatrix_AWPROT,
        m_axi_imatrix_AWQOS => Loop_1_proc_U0_m_axi_imatrix_AWQOS,
        m_axi_imatrix_AWREGION => Loop_1_proc_U0_m_axi_imatrix_AWREGION,
        m_axi_imatrix_AWUSER => Loop_1_proc_U0_m_axi_imatrix_AWUSER,
        m_axi_imatrix_WVALID => Loop_1_proc_U0_m_axi_imatrix_WVALID,
        m_axi_imatrix_WREADY => ap_const_logic_0,
        m_axi_imatrix_WDATA => Loop_1_proc_U0_m_axi_imatrix_WDATA,
        m_axi_imatrix_WSTRB => Loop_1_proc_U0_m_axi_imatrix_WSTRB,
        m_axi_imatrix_WLAST => Loop_1_proc_U0_m_axi_imatrix_WLAST,
        m_axi_imatrix_WID => Loop_1_proc_U0_m_axi_imatrix_WID,
        m_axi_imatrix_WUSER => Loop_1_proc_U0_m_axi_imatrix_WUSER,
        m_axi_imatrix_ARVALID => Loop_1_proc_U0_m_axi_imatrix_ARVALID,
        m_axi_imatrix_ARREADY => m_axi_imatrix_ARREADY,
        m_axi_imatrix_ARADDR => Loop_1_proc_U0_m_axi_imatrix_ARADDR,
        m_axi_imatrix_ARID => Loop_1_proc_U0_m_axi_imatrix_ARID,
        m_axi_imatrix_ARLEN => Loop_1_proc_U0_m_axi_imatrix_ARLEN,
        m_axi_imatrix_ARSIZE => Loop_1_proc_U0_m_axi_imatrix_ARSIZE,
        m_axi_imatrix_ARBURST => Loop_1_proc_U0_m_axi_imatrix_ARBURST,
        m_axi_imatrix_ARLOCK => Loop_1_proc_U0_m_axi_imatrix_ARLOCK,
        m_axi_imatrix_ARCACHE => Loop_1_proc_U0_m_axi_imatrix_ARCACHE,
        m_axi_imatrix_ARPROT => Loop_1_proc_U0_m_axi_imatrix_ARPROT,
        m_axi_imatrix_ARQOS => Loop_1_proc_U0_m_axi_imatrix_ARQOS,
        m_axi_imatrix_ARREGION => Loop_1_proc_U0_m_axi_imatrix_ARREGION,
        m_axi_imatrix_ARUSER => Loop_1_proc_U0_m_axi_imatrix_ARUSER,
        m_axi_imatrix_RVALID => m_axi_imatrix_RVALID,
        m_axi_imatrix_RREADY => Loop_1_proc_U0_m_axi_imatrix_RREADY,
        m_axi_imatrix_RDATA => m_axi_imatrix_RDATA,
        m_axi_imatrix_RLAST => m_axi_imatrix_RLAST,
        m_axi_imatrix_RID => m_axi_imatrix_RID,
        m_axi_imatrix_RUSER => m_axi_imatrix_RUSER,
        m_axi_imatrix_RRESP => m_axi_imatrix_RRESP,
        m_axi_imatrix_BVALID => ap_const_logic_0,
        m_axi_imatrix_BREADY => Loop_1_proc_U0_m_axi_imatrix_BREADY,
        m_axi_imatrix_BRESP => ap_const_lv2_0,
        m_axi_imatrix_BID => ap_const_lv1_0,
        m_axi_imatrix_BUSER => ap_const_lv1_0,
        imatrix_offset_dout => imatrix_offset_c_dout,
        imatrix_offset_empty_n => imatrix_offset_c_empty_n,
        imatrix_offset_read => Loop_1_proc_U0_imatrix_offset_read,
        out_buf_0_address0 => Loop_1_proc_U0_out_buf_0_address0,
        out_buf_0_ce0 => Loop_1_proc_U0_out_buf_0_ce0,
        out_buf_0_we0 => Loop_1_proc_U0_out_buf_0_we0,
        out_buf_0_d0 => Loop_1_proc_U0_out_buf_0_d0,
        in1_buf_1_address0 => Loop_1_proc_U0_in1_buf_1_address0,
        in1_buf_1_ce0 => Loop_1_proc_U0_in1_buf_1_ce0,
        in1_buf_1_q0 => in1_buf_1_t_q0,
        out_buf_1_address0 => Loop_1_proc_U0_out_buf_1_address0,
        out_buf_1_ce0 => Loop_1_proc_U0_out_buf_1_ce0,
        out_buf_1_we0 => Loop_1_proc_U0_out_buf_1_we0,
        out_buf_1_d0 => Loop_1_proc_U0_out_buf_1_d0,
        in1_buf_2_address0 => Loop_1_proc_U0_in1_buf_2_address0,
        in1_buf_2_ce0 => Loop_1_proc_U0_in1_buf_2_ce0,
        in1_buf_2_q0 => in1_buf_2_t_q0,
        out_buf_2_address0 => Loop_1_proc_U0_out_buf_2_address0,
        out_buf_2_ce0 => Loop_1_proc_U0_out_buf_2_ce0,
        out_buf_2_we0 => Loop_1_proc_U0_out_buf_2_we0,
        out_buf_2_d0 => Loop_1_proc_U0_out_buf_2_d0,
        in1_buf_3_address0 => Loop_1_proc_U0_in1_buf_3_address0,
        in1_buf_3_ce0 => Loop_1_proc_U0_in1_buf_3_ce0,
        in1_buf_3_q0 => in1_buf_3_t_q0,
        out_buf_3_address0 => Loop_1_proc_U0_out_buf_3_address0,
        out_buf_3_ce0 => Loop_1_proc_U0_out_buf_3_ce0,
        out_buf_3_we0 => Loop_1_proc_U0_out_buf_3_we0,
        out_buf_3_d0 => Loop_1_proc_U0_out_buf_3_d0,
        in1_buf_4_address0 => Loop_1_proc_U0_in1_buf_4_address0,
        in1_buf_4_ce0 => Loop_1_proc_U0_in1_buf_4_ce0,
        in1_buf_4_q0 => in1_buf_4_t_q0,
        out_buf_4_address0 => Loop_1_proc_U0_out_buf_4_address0,
        out_buf_4_ce0 => Loop_1_proc_U0_out_buf_4_ce0,
        out_buf_4_we0 => Loop_1_proc_U0_out_buf_4_we0,
        out_buf_4_d0 => Loop_1_proc_U0_out_buf_4_d0,
        in1_buf_5_address0 => Loop_1_proc_U0_in1_buf_5_address0,
        in1_buf_5_ce0 => Loop_1_proc_U0_in1_buf_5_ce0,
        in1_buf_5_q0 => in1_buf_5_t_q0,
        out_buf_5_address0 => Loop_1_proc_U0_out_buf_5_address0,
        out_buf_5_ce0 => Loop_1_proc_U0_out_buf_5_ce0,
        out_buf_5_we0 => Loop_1_proc_U0_out_buf_5_we0,
        out_buf_5_d0 => Loop_1_proc_U0_out_buf_5_d0,
        in1_buf_6_address0 => Loop_1_proc_U0_in1_buf_6_address0,
        in1_buf_6_ce0 => Loop_1_proc_U0_in1_buf_6_ce0,
        in1_buf_6_q0 => in1_buf_6_t_q0,
        out_buf_6_address0 => Loop_1_proc_U0_out_buf_6_address0,
        out_buf_6_ce0 => Loop_1_proc_U0_out_buf_6_ce0,
        out_buf_6_we0 => Loop_1_proc_U0_out_buf_6_we0,
        out_buf_6_d0 => Loop_1_proc_U0_out_buf_6_d0,
        in1_buf_7_address0 => Loop_1_proc_U0_in1_buf_7_address0,
        in1_buf_7_ce0 => Loop_1_proc_U0_in1_buf_7_ce0,
        in1_buf_7_q0 => in1_buf_7_t_q0,
        out_buf_7_address0 => Loop_1_proc_U0_out_buf_7_address0,
        out_buf_7_ce0 => Loop_1_proc_U0_out_buf_7_ce0,
        out_buf_7_we0 => Loop_1_proc_U0_out_buf_7_we0,
        out_buf_7_d0 => Loop_1_proc_U0_out_buf_7_d0,
        in1_buf_8_address0 => Loop_1_proc_U0_in1_buf_8_address0,
        in1_buf_8_ce0 => Loop_1_proc_U0_in1_buf_8_ce0,
        in1_buf_8_q0 => in1_buf_8_t_q0,
        out_buf_8_address0 => Loop_1_proc_U0_out_buf_8_address0,
        out_buf_8_ce0 => Loop_1_proc_U0_out_buf_8_ce0,
        out_buf_8_we0 => Loop_1_proc_U0_out_buf_8_we0,
        out_buf_8_d0 => Loop_1_proc_U0_out_buf_8_d0,
        in1_buf_9_address0 => Loop_1_proc_U0_in1_buf_9_address0,
        in1_buf_9_ce0 => Loop_1_proc_U0_in1_buf_9_ce0,
        in1_buf_9_q0 => in1_buf_9_t_q0,
        out_buf_9_address0 => Loop_1_proc_U0_out_buf_9_address0,
        out_buf_9_ce0 => Loop_1_proc_U0_out_buf_9_ce0,
        out_buf_9_we0 => Loop_1_proc_U0_out_buf_9_we0,
        out_buf_9_d0 => Loop_1_proc_U0_out_buf_9_d0,
        in1_buf_10_address0 => Loop_1_proc_U0_in1_buf_10_address0,
        in1_buf_10_ce0 => Loop_1_proc_U0_in1_buf_10_ce0,
        in1_buf_10_q0 => in1_buf_10_t_q0,
        out_buf_10_address0 => Loop_1_proc_U0_out_buf_10_address0,
        out_buf_10_ce0 => Loop_1_proc_U0_out_buf_10_ce0,
        out_buf_10_we0 => Loop_1_proc_U0_out_buf_10_we0,
        out_buf_10_d0 => Loop_1_proc_U0_out_buf_10_d0,
        in1_buf_11_address0 => Loop_1_proc_U0_in1_buf_11_address0,
        in1_buf_11_ce0 => Loop_1_proc_U0_in1_buf_11_ce0,
        in1_buf_11_q0 => in1_buf_11_t_q0,
        out_buf_11_address0 => Loop_1_proc_U0_out_buf_11_address0,
        out_buf_11_ce0 => Loop_1_proc_U0_out_buf_11_ce0,
        out_buf_11_we0 => Loop_1_proc_U0_out_buf_11_we0,
        out_buf_11_d0 => Loop_1_proc_U0_out_buf_11_d0,
        in1_buf_12_address0 => Loop_1_proc_U0_in1_buf_12_address0,
        in1_buf_12_ce0 => Loop_1_proc_U0_in1_buf_12_ce0,
        in1_buf_12_q0 => in1_buf_12_t_q0,
        out_buf_12_address0 => Loop_1_proc_U0_out_buf_12_address0,
        out_buf_12_ce0 => Loop_1_proc_U0_out_buf_12_ce0,
        out_buf_12_we0 => Loop_1_proc_U0_out_buf_12_we0,
        out_buf_12_d0 => Loop_1_proc_U0_out_buf_12_d0,
        in1_buf_13_address0 => Loop_1_proc_U0_in1_buf_13_address0,
        in1_buf_13_ce0 => Loop_1_proc_U0_in1_buf_13_ce0,
        in1_buf_13_q0 => in1_buf_13_t_q0,
        out_buf_13_address0 => Loop_1_proc_U0_out_buf_13_address0,
        out_buf_13_ce0 => Loop_1_proc_U0_out_buf_13_ce0,
        out_buf_13_we0 => Loop_1_proc_U0_out_buf_13_we0,
        out_buf_13_d0 => Loop_1_proc_U0_out_buf_13_d0,
        in1_buf_14_address0 => Loop_1_proc_U0_in1_buf_14_address0,
        in1_buf_14_ce0 => Loop_1_proc_U0_in1_buf_14_ce0,
        in1_buf_14_q0 => in1_buf_14_t_q0,
        out_buf_14_address0 => Loop_1_proc_U0_out_buf_14_address0,
        out_buf_14_ce0 => Loop_1_proc_U0_out_buf_14_ce0,
        out_buf_14_we0 => Loop_1_proc_U0_out_buf_14_we0,
        out_buf_14_d0 => Loop_1_proc_U0_out_buf_14_d0,
        in1_buf_15_address0 => Loop_1_proc_U0_in1_buf_15_address0,
        in1_buf_15_ce0 => Loop_1_proc_U0_in1_buf_15_ce0,
        in1_buf_15_q0 => in1_buf_15_t_q0,
        out_buf_15_address0 => Loop_1_proc_U0_out_buf_15_address0,
        out_buf_15_ce0 => Loop_1_proc_U0_out_buf_15_ce0,
        out_buf_15_we0 => Loop_1_proc_U0_out_buf_15_we0,
        out_buf_15_d0 => Loop_1_proc_U0_out_buf_15_d0);

    memcpy_omatrix_out_b_U0 : component memcpy_omatrix_out_b
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => memcpy_omatrix_out_b_U0_ap_start,
        ap_done => memcpy_omatrix_out_b_U0_ap_done,
        ap_continue => memcpy_omatrix_out_b_U0_ap_continue,
        ap_idle => memcpy_omatrix_out_b_U0_ap_idle,
        ap_ready => memcpy_omatrix_out_b_U0_ap_ready,
        m_axi_omatrix_AWVALID => memcpy_omatrix_out_b_U0_m_axi_omatrix_AWVALID,
        m_axi_omatrix_AWREADY => m_axi_omatrix_AWREADY,
        m_axi_omatrix_AWADDR => memcpy_omatrix_out_b_U0_m_axi_omatrix_AWADDR,
        m_axi_omatrix_AWID => memcpy_omatrix_out_b_U0_m_axi_omatrix_AWID,
        m_axi_omatrix_AWLEN => memcpy_omatrix_out_b_U0_m_axi_omatrix_AWLEN,
        m_axi_omatrix_AWSIZE => memcpy_omatrix_out_b_U0_m_axi_omatrix_AWSIZE,
        m_axi_omatrix_AWBURST => memcpy_omatrix_out_b_U0_m_axi_omatrix_AWBURST,
        m_axi_omatrix_AWLOCK => memcpy_omatrix_out_b_U0_m_axi_omatrix_AWLOCK,
        m_axi_omatrix_AWCACHE => memcpy_omatrix_out_b_U0_m_axi_omatrix_AWCACHE,
        m_axi_omatrix_AWPROT => memcpy_omatrix_out_b_U0_m_axi_omatrix_AWPROT,
        m_axi_omatrix_AWQOS => memcpy_omatrix_out_b_U0_m_axi_omatrix_AWQOS,
        m_axi_omatrix_AWREGION => memcpy_omatrix_out_b_U0_m_axi_omatrix_AWREGION,
        m_axi_omatrix_AWUSER => memcpy_omatrix_out_b_U0_m_axi_omatrix_AWUSER,
        m_axi_omatrix_WVALID => memcpy_omatrix_out_b_U0_m_axi_omatrix_WVALID,
        m_axi_omatrix_WREADY => m_axi_omatrix_WREADY,
        m_axi_omatrix_WDATA => memcpy_omatrix_out_b_U0_m_axi_omatrix_WDATA,
        m_axi_omatrix_WSTRB => memcpy_omatrix_out_b_U0_m_axi_omatrix_WSTRB,
        m_axi_omatrix_WLAST => memcpy_omatrix_out_b_U0_m_axi_omatrix_WLAST,
        m_axi_omatrix_WID => memcpy_omatrix_out_b_U0_m_axi_omatrix_WID,
        m_axi_omatrix_WUSER => memcpy_omatrix_out_b_U0_m_axi_omatrix_WUSER,
        m_axi_omatrix_ARVALID => memcpy_omatrix_out_b_U0_m_axi_omatrix_ARVALID,
        m_axi_omatrix_ARREADY => ap_const_logic_0,
        m_axi_omatrix_ARADDR => memcpy_omatrix_out_b_U0_m_axi_omatrix_ARADDR,
        m_axi_omatrix_ARID => memcpy_omatrix_out_b_U0_m_axi_omatrix_ARID,
        m_axi_omatrix_ARLEN => memcpy_omatrix_out_b_U0_m_axi_omatrix_ARLEN,
        m_axi_omatrix_ARSIZE => memcpy_omatrix_out_b_U0_m_axi_omatrix_ARSIZE,
        m_axi_omatrix_ARBURST => memcpy_omatrix_out_b_U0_m_axi_omatrix_ARBURST,
        m_axi_omatrix_ARLOCK => memcpy_omatrix_out_b_U0_m_axi_omatrix_ARLOCK,
        m_axi_omatrix_ARCACHE => memcpy_omatrix_out_b_U0_m_axi_omatrix_ARCACHE,
        m_axi_omatrix_ARPROT => memcpy_omatrix_out_b_U0_m_axi_omatrix_ARPROT,
        m_axi_omatrix_ARQOS => memcpy_omatrix_out_b_U0_m_axi_omatrix_ARQOS,
        m_axi_omatrix_ARREGION => memcpy_omatrix_out_b_U0_m_axi_omatrix_ARREGION,
        m_axi_omatrix_ARUSER => memcpy_omatrix_out_b_U0_m_axi_omatrix_ARUSER,
        m_axi_omatrix_RVALID => ap_const_logic_0,
        m_axi_omatrix_RREADY => memcpy_omatrix_out_b_U0_m_axi_omatrix_RREADY,
        m_axi_omatrix_RDATA => ap_const_lv32_0,
        m_axi_omatrix_RLAST => ap_const_logic_0,
        m_axi_omatrix_RID => ap_const_lv1_0,
        m_axi_omatrix_RUSER => ap_const_lv1_0,
        m_axi_omatrix_RRESP => ap_const_lv2_0,
        m_axi_omatrix_BVALID => m_axi_omatrix_BVALID,
        m_axi_omatrix_BREADY => memcpy_omatrix_out_b_U0_m_axi_omatrix_BREADY,
        m_axi_omatrix_BRESP => m_axi_omatrix_BRESP,
        m_axi_omatrix_BID => m_axi_omatrix_BID,
        m_axi_omatrix_BUSER => m_axi_omatrix_BUSER,
        omatrix_offset_dout => omatrix_offset_c_dout,
        omatrix_offset_empty_n => omatrix_offset_c_empty_n,
        omatrix_offset_read => memcpy_omatrix_out_b_U0_omatrix_offset_read,
        i_0_i_i_c_dout => i_0_i_i_c_dout,
        i_0_i_i_c_empty_n => i_0_i_i_c_empty_n,
        i_0_i_i_c_read => memcpy_omatrix_out_b_U0_i_0_i_i_c_read,
        out_buf_0_address0 => memcpy_omatrix_out_b_U0_out_buf_0_address0,
        out_buf_0_ce0 => memcpy_omatrix_out_b_U0_out_buf_0_ce0,
        out_buf_0_q0 => out_buf_0_t_q0,
        out_buf_1_address0 => memcpy_omatrix_out_b_U0_out_buf_1_address0,
        out_buf_1_ce0 => memcpy_omatrix_out_b_U0_out_buf_1_ce0,
        out_buf_1_q0 => out_buf_1_t_q0,
        out_buf_2_address0 => memcpy_omatrix_out_b_U0_out_buf_2_address0,
        out_buf_2_ce0 => memcpy_omatrix_out_b_U0_out_buf_2_ce0,
        out_buf_2_q0 => out_buf_2_t_q0,
        out_buf_3_address0 => memcpy_omatrix_out_b_U0_out_buf_3_address0,
        out_buf_3_ce0 => memcpy_omatrix_out_b_U0_out_buf_3_ce0,
        out_buf_3_q0 => out_buf_3_t_q0,
        out_buf_4_address0 => memcpy_omatrix_out_b_U0_out_buf_4_address0,
        out_buf_4_ce0 => memcpy_omatrix_out_b_U0_out_buf_4_ce0,
        out_buf_4_q0 => out_buf_4_t_q0,
        out_buf_5_address0 => memcpy_omatrix_out_b_U0_out_buf_5_address0,
        out_buf_5_ce0 => memcpy_omatrix_out_b_U0_out_buf_5_ce0,
        out_buf_5_q0 => out_buf_5_t_q0,
        out_buf_6_address0 => memcpy_omatrix_out_b_U0_out_buf_6_address0,
        out_buf_6_ce0 => memcpy_omatrix_out_b_U0_out_buf_6_ce0,
        out_buf_6_q0 => out_buf_6_t_q0,
        out_buf_7_address0 => memcpy_omatrix_out_b_U0_out_buf_7_address0,
        out_buf_7_ce0 => memcpy_omatrix_out_b_U0_out_buf_7_ce0,
        out_buf_7_q0 => out_buf_7_t_q0,
        out_buf_8_address0 => memcpy_omatrix_out_b_U0_out_buf_8_address0,
        out_buf_8_ce0 => memcpy_omatrix_out_b_U0_out_buf_8_ce0,
        out_buf_8_q0 => out_buf_8_t_q0,
        out_buf_9_address0 => memcpy_omatrix_out_b_U0_out_buf_9_address0,
        out_buf_9_ce0 => memcpy_omatrix_out_b_U0_out_buf_9_ce0,
        out_buf_9_q0 => out_buf_9_t_q0,
        out_buf_10_address0 => memcpy_omatrix_out_b_U0_out_buf_10_address0,
        out_buf_10_ce0 => memcpy_omatrix_out_b_U0_out_buf_10_ce0,
        out_buf_10_q0 => out_buf_10_t_q0,
        out_buf_11_address0 => memcpy_omatrix_out_b_U0_out_buf_11_address0,
        out_buf_11_ce0 => memcpy_omatrix_out_b_U0_out_buf_11_ce0,
        out_buf_11_q0 => out_buf_11_t_q0,
        out_buf_12_address0 => memcpy_omatrix_out_b_U0_out_buf_12_address0,
        out_buf_12_ce0 => memcpy_omatrix_out_b_U0_out_buf_12_ce0,
        out_buf_12_q0 => out_buf_12_t_q0,
        out_buf_13_address0 => memcpy_omatrix_out_b_U0_out_buf_13_address0,
        out_buf_13_ce0 => memcpy_omatrix_out_b_U0_out_buf_13_ce0,
        out_buf_13_q0 => out_buf_13_t_q0,
        out_buf_14_address0 => memcpy_omatrix_out_b_U0_out_buf_14_address0,
        out_buf_14_ce0 => memcpy_omatrix_out_b_U0_out_buf_14_ce0,
        out_buf_14_q0 => out_buf_14_t_q0,
        out_buf_15_address0 => memcpy_omatrix_out_b_U0_out_buf_15_address0,
        out_buf_15_ce0 => memcpy_omatrix_out_b_U0_out_buf_15_ce0,
        out_buf_15_q0 => out_buf_15_t_q0);

    i_0_i_i_c_U : component fifo_w1_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_0_proc19_U0_i_0_i_i_c_din,
        if_full_n => i_0_i_i_c_full_n,
        if_write => Loop_0_proc19_U0_i_0_i_i_c_write,
        if_dout => i_0_i_i_c_dout,
        if_empty_n => i_0_i_i_c_empty_n,
        if_read => memcpy_omatrix_out_b_U0_i_0_i_i_c_read);

    imatrix_offset_c_U : component fifo_w62_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_0_proc19_U0_imatrix_offset_out_din,
        if_full_n => imatrix_offset_c_full_n,
        if_write => Loop_0_proc19_U0_imatrix_offset_out_write,
        if_dout => imatrix_offset_c_dout,
        if_empty_n => imatrix_offset_c_empty_n,
        if_read => Loop_1_proc_U0_imatrix_offset_read);

    omatrix_offset_c_U : component fifo_w62_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_0_proc19_U0_omatrix_offset_out_din,
        if_full_n => omatrix_offset_c_full_n,
        if_write => Loop_0_proc19_U0_omatrix_offset_out_write,
        if_dout => omatrix_offset_c_dout,
        if_empty_n => omatrix_offset_c_empty_n,
        if_read => memcpy_omatrix_out_b_U0_omatrix_offset_read);





    ap_sync_reg_Loop_0_proc19_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_Loop_0_proc19_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Loop_0_proc19_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Loop_0_proc19_U0_ap_ready <= ap_sync_Loop_0_proc19_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_Loop_1_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_Loop_1_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Loop_1_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Loop_1_proc_U0_ap_ready <= ap_sync_Loop_1_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_in1_buf_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_in1_buf_0 <= ap_const_logic_0;
            else
                if (((Loop_0_proc19_U0_ap_done and Loop_0_proc19_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_in1_buf_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_in1_buf_0 <= ap_sync_channel_write_in1_buf_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_in1_buf_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_in1_buf_1 <= ap_const_logic_0;
            else
                if (((Loop_0_proc19_U0_ap_done and Loop_0_proc19_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_in1_buf_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_in1_buf_1 <= ap_sync_channel_write_in1_buf_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_in1_buf_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_in1_buf_10 <= ap_const_logic_0;
            else
                if (((Loop_0_proc19_U0_ap_done and Loop_0_proc19_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_in1_buf_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_in1_buf_10 <= ap_sync_channel_write_in1_buf_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_in1_buf_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_in1_buf_11 <= ap_const_logic_0;
            else
                if (((Loop_0_proc19_U0_ap_done and Loop_0_proc19_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_in1_buf_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_in1_buf_11 <= ap_sync_channel_write_in1_buf_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_in1_buf_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_in1_buf_12 <= ap_const_logic_0;
            else
                if (((Loop_0_proc19_U0_ap_done and Loop_0_proc19_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_in1_buf_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_in1_buf_12 <= ap_sync_channel_write_in1_buf_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_in1_buf_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_in1_buf_13 <= ap_const_logic_0;
            else
                if (((Loop_0_proc19_U0_ap_done and Loop_0_proc19_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_in1_buf_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_in1_buf_13 <= ap_sync_channel_write_in1_buf_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_in1_buf_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_in1_buf_14 <= ap_const_logic_0;
            else
                if (((Loop_0_proc19_U0_ap_done and Loop_0_proc19_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_in1_buf_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_in1_buf_14 <= ap_sync_channel_write_in1_buf_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_in1_buf_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_in1_buf_15 <= ap_const_logic_0;
            else
                if (((Loop_0_proc19_U0_ap_done and Loop_0_proc19_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_in1_buf_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_in1_buf_15 <= ap_sync_channel_write_in1_buf_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_in1_buf_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_in1_buf_2 <= ap_const_logic_0;
            else
                if (((Loop_0_proc19_U0_ap_done and Loop_0_proc19_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_in1_buf_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_in1_buf_2 <= ap_sync_channel_write_in1_buf_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_in1_buf_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_in1_buf_3 <= ap_const_logic_0;
            else
                if (((Loop_0_proc19_U0_ap_done and Loop_0_proc19_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_in1_buf_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_in1_buf_3 <= ap_sync_channel_write_in1_buf_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_in1_buf_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_in1_buf_4 <= ap_const_logic_0;
            else
                if (((Loop_0_proc19_U0_ap_done and Loop_0_proc19_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_in1_buf_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_in1_buf_4 <= ap_sync_channel_write_in1_buf_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_in1_buf_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_in1_buf_5 <= ap_const_logic_0;
            else
                if (((Loop_0_proc19_U0_ap_done and Loop_0_proc19_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_in1_buf_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_in1_buf_5 <= ap_sync_channel_write_in1_buf_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_in1_buf_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_in1_buf_6 <= ap_const_logic_0;
            else
                if (((Loop_0_proc19_U0_ap_done and Loop_0_proc19_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_in1_buf_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_in1_buf_6 <= ap_sync_channel_write_in1_buf_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_in1_buf_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_in1_buf_7 <= ap_const_logic_0;
            else
                if (((Loop_0_proc19_U0_ap_done and Loop_0_proc19_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_in1_buf_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_in1_buf_7 <= ap_sync_channel_write_in1_buf_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_in1_buf_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_in1_buf_8 <= ap_const_logic_0;
            else
                if (((Loop_0_proc19_U0_ap_done and Loop_0_proc19_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_in1_buf_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_in1_buf_8 <= ap_sync_channel_write_in1_buf_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_in1_buf_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_in1_buf_9 <= ap_const_logic_0;
            else
                if (((Loop_0_proc19_U0_ap_done and Loop_0_proc19_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_in1_buf_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_in1_buf_9 <= ap_sync_channel_write_in1_buf_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_buf_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_buf_0 <= ap_const_logic_0;
            else
                if (((Loop_1_proc_U0_ap_done and Loop_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_buf_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_buf_0 <= ap_sync_channel_write_out_buf_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_buf_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_buf_1 <= ap_const_logic_0;
            else
                if (((Loop_1_proc_U0_ap_done and Loop_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_buf_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_buf_1 <= ap_sync_channel_write_out_buf_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_buf_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_buf_10 <= ap_const_logic_0;
            else
                if (((Loop_1_proc_U0_ap_done and Loop_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_buf_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_buf_10 <= ap_sync_channel_write_out_buf_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_buf_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_buf_11 <= ap_const_logic_0;
            else
                if (((Loop_1_proc_U0_ap_done and Loop_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_buf_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_buf_11 <= ap_sync_channel_write_out_buf_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_buf_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_buf_12 <= ap_const_logic_0;
            else
                if (((Loop_1_proc_U0_ap_done and Loop_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_buf_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_buf_12 <= ap_sync_channel_write_out_buf_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_buf_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_buf_13 <= ap_const_logic_0;
            else
                if (((Loop_1_proc_U0_ap_done and Loop_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_buf_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_buf_13 <= ap_sync_channel_write_out_buf_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_buf_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_buf_14 <= ap_const_logic_0;
            else
                if (((Loop_1_proc_U0_ap_done and Loop_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_buf_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_buf_14 <= ap_sync_channel_write_out_buf_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_buf_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_buf_15 <= ap_const_logic_0;
            else
                if (((Loop_1_proc_U0_ap_done and Loop_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_buf_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_buf_15 <= ap_sync_channel_write_out_buf_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_buf_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_buf_2 <= ap_const_logic_0;
            else
                if (((Loop_1_proc_U0_ap_done and Loop_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_buf_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_buf_2 <= ap_sync_channel_write_out_buf_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_buf_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_buf_3 <= ap_const_logic_0;
            else
                if (((Loop_1_proc_U0_ap_done and Loop_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_buf_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_buf_3 <= ap_sync_channel_write_out_buf_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_buf_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_buf_4 <= ap_const_logic_0;
            else
                if (((Loop_1_proc_U0_ap_done and Loop_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_buf_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_buf_4 <= ap_sync_channel_write_out_buf_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_buf_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_buf_5 <= ap_const_logic_0;
            else
                if (((Loop_1_proc_U0_ap_done and Loop_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_buf_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_buf_5 <= ap_sync_channel_write_out_buf_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_buf_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_buf_6 <= ap_const_logic_0;
            else
                if (((Loop_1_proc_U0_ap_done and Loop_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_buf_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_buf_6 <= ap_sync_channel_write_out_buf_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_buf_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_buf_7 <= ap_const_logic_0;
            else
                if (((Loop_1_proc_U0_ap_done and Loop_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_buf_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_buf_7 <= ap_sync_channel_write_out_buf_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_buf_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_buf_8 <= ap_const_logic_0;
            else
                if (((Loop_1_proc_U0_ap_done and Loop_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_buf_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_buf_8 <= ap_sync_channel_write_out_buf_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_buf_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_buf_9 <= ap_const_logic_0;
            else
                if (((Loop_1_proc_U0_ap_done and Loop_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_buf_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_buf_9 <= ap_sync_channel_write_out_buf_9;
                end if; 
            end if;
        end if;
    end process;


    Loop_0_proc19_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_0 = Loop_0_proc19_U0_ap_ready) and (ap_sync_ready = ap_const_logic_1))) then 
                Loop_0_proc19_U0_ap_ready_count <= std_logic_vector(unsigned(Loop_0_proc19_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (ap_const_logic_1 = Loop_0_proc19_U0_ap_ready))) then 
                Loop_0_proc19_U0_ap_ready_count <= std_logic_vector(unsigned(Loop_0_proc19_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    Loop_1_proc_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_0 = Loop_1_proc_U0_ap_ready) and (ap_sync_ready = ap_const_logic_1))) then 
                Loop_1_proc_U0_ap_ready_count <= std_logic_vector(unsigned(Loop_1_proc_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (ap_const_logic_1 = Loop_1_proc_U0_ap_ready))) then 
                Loop_1_proc_U0_ap_ready_count <= std_logic_vector(unsigned(Loop_1_proc_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;
    Loop_0_proc19_U0_ap_continue <= (ap_sync_channel_write_in1_buf_9 and ap_sync_channel_write_in1_buf_8 and ap_sync_channel_write_in1_buf_7 and ap_sync_channel_write_in1_buf_6 and ap_sync_channel_write_in1_buf_5 and ap_sync_channel_write_in1_buf_4 and ap_sync_channel_write_in1_buf_3 and ap_sync_channel_write_in1_buf_2 and ap_sync_channel_write_in1_buf_15 and ap_sync_channel_write_in1_buf_14 and ap_sync_channel_write_in1_buf_13 and ap_sync_channel_write_in1_buf_12 and ap_sync_channel_write_in1_buf_11 and ap_sync_channel_write_in1_buf_10 and ap_sync_channel_write_in1_buf_1 and ap_sync_channel_write_in1_buf_0);
    Loop_0_proc19_U0_ap_start <= ((ap_sync_reg_Loop_0_proc19_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Loop_0_proc19_U0_in1_buf_0_full_n <= in1_buf_0_i_full_n;
    Loop_0_proc19_U0_in1_buf_10_full_n <= in1_buf_10_i_full_n;
    Loop_0_proc19_U0_in1_buf_11_full_n <= in1_buf_11_i_full_n;
    Loop_0_proc19_U0_in1_buf_12_full_n <= in1_buf_12_i_full_n;
    Loop_0_proc19_U0_in1_buf_13_full_n <= in1_buf_13_i_full_n;
    Loop_0_proc19_U0_in1_buf_14_full_n <= in1_buf_14_i_full_n;
    Loop_0_proc19_U0_in1_buf_15_full_n <= in1_buf_15_i_full_n;
    Loop_0_proc19_U0_in1_buf_1_full_n <= in1_buf_1_i_full_n;
    Loop_0_proc19_U0_in1_buf_2_full_n <= in1_buf_2_i_full_n;
    Loop_0_proc19_U0_in1_buf_3_full_n <= in1_buf_3_i_full_n;
    Loop_0_proc19_U0_in1_buf_4_full_n <= in1_buf_4_i_full_n;
    Loop_0_proc19_U0_in1_buf_5_full_n <= in1_buf_5_i_full_n;
    Loop_0_proc19_U0_in1_buf_6_full_n <= in1_buf_6_i_full_n;
    Loop_0_proc19_U0_in1_buf_7_full_n <= in1_buf_7_i_full_n;
    Loop_0_proc19_U0_in1_buf_8_full_n <= in1_buf_8_i_full_n;
    Loop_0_proc19_U0_in1_buf_9_full_n <= in1_buf_9_i_full_n;
    Loop_0_proc19_U0_start_full_n <= ap_const_logic_1;
    Loop_0_proc19_U0_start_write <= ap_const_logic_0;
    Loop_1_proc_U0_ap_continue <= (ap_sync_channel_write_out_buf_9 and ap_sync_channel_write_out_buf_8 and ap_sync_channel_write_out_buf_7 and ap_sync_channel_write_out_buf_6 and ap_sync_channel_write_out_buf_5 and ap_sync_channel_write_out_buf_4 and ap_sync_channel_write_out_buf_3 and ap_sync_channel_write_out_buf_2 and ap_sync_channel_write_out_buf_15 and ap_sync_channel_write_out_buf_14 and ap_sync_channel_write_out_buf_13 and ap_sync_channel_write_out_buf_12 and ap_sync_channel_write_out_buf_11 and ap_sync_channel_write_out_buf_10 and ap_sync_channel_write_out_buf_1 and ap_sync_channel_write_out_buf_0);
    Loop_1_proc_U0_ap_start <= (in1_buf_9_t_empty_n and in1_buf_8_t_empty_n and in1_buf_7_t_empty_n and in1_buf_6_t_empty_n and in1_buf_5_t_empty_n and in1_buf_4_t_empty_n and in1_buf_3_t_empty_n and in1_buf_2_t_empty_n and in1_buf_1_t_empty_n and in1_buf_15_t_empty_n and in1_buf_14_t_empty_n and in1_buf_13_t_empty_n and in1_buf_12_t_empty_n and in1_buf_11_t_empty_n and in1_buf_10_t_empty_n and in1_buf_0_t_empty_n and (ap_sync_reg_Loop_1_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Loop_1_proc_U0_out_buf_0_full_n <= out_buf_0_i_full_n;
    Loop_1_proc_U0_out_buf_10_full_n <= out_buf_10_i_full_n;
    Loop_1_proc_U0_out_buf_11_full_n <= out_buf_11_i_full_n;
    Loop_1_proc_U0_out_buf_12_full_n <= out_buf_12_i_full_n;
    Loop_1_proc_U0_out_buf_13_full_n <= out_buf_13_i_full_n;
    Loop_1_proc_U0_out_buf_14_full_n <= out_buf_14_i_full_n;
    Loop_1_proc_U0_out_buf_15_full_n <= out_buf_15_i_full_n;
    Loop_1_proc_U0_out_buf_1_full_n <= out_buf_1_i_full_n;
    Loop_1_proc_U0_out_buf_2_full_n <= out_buf_2_i_full_n;
    Loop_1_proc_U0_out_buf_3_full_n <= out_buf_3_i_full_n;
    Loop_1_proc_U0_out_buf_4_full_n <= out_buf_4_i_full_n;
    Loop_1_proc_U0_out_buf_5_full_n <= out_buf_5_i_full_n;
    Loop_1_proc_U0_out_buf_6_full_n <= out_buf_6_i_full_n;
    Loop_1_proc_U0_out_buf_7_full_n <= out_buf_7_i_full_n;
    Loop_1_proc_U0_out_buf_8_full_n <= out_buf_8_i_full_n;
    Loop_1_proc_U0_out_buf_9_full_n <= out_buf_9_i_full_n;
    Loop_1_proc_U0_start_full_n <= ap_const_logic_1;
    Loop_1_proc_U0_start_write <= ap_const_logic_0;
    ap_channel_done_in1_buf_0 <= ((ap_sync_reg_channel_write_in1_buf_0 xor ap_const_logic_1) and Loop_0_proc19_U0_ap_done);
    ap_channel_done_in1_buf_1 <= ((ap_sync_reg_channel_write_in1_buf_1 xor ap_const_logic_1) and Loop_0_proc19_U0_ap_done);
    ap_channel_done_in1_buf_10 <= ((ap_sync_reg_channel_write_in1_buf_10 xor ap_const_logic_1) and Loop_0_proc19_U0_ap_done);
    ap_channel_done_in1_buf_11 <= ((ap_sync_reg_channel_write_in1_buf_11 xor ap_const_logic_1) and Loop_0_proc19_U0_ap_done);
    ap_channel_done_in1_buf_12 <= ((ap_sync_reg_channel_write_in1_buf_12 xor ap_const_logic_1) and Loop_0_proc19_U0_ap_done);
    ap_channel_done_in1_buf_13 <= ((ap_sync_reg_channel_write_in1_buf_13 xor ap_const_logic_1) and Loop_0_proc19_U0_ap_done);
    ap_channel_done_in1_buf_14 <= ((ap_sync_reg_channel_write_in1_buf_14 xor ap_const_logic_1) and Loop_0_proc19_U0_ap_done);
    ap_channel_done_in1_buf_15 <= ((ap_sync_reg_channel_write_in1_buf_15 xor ap_const_logic_1) and Loop_0_proc19_U0_ap_done);
    ap_channel_done_in1_buf_2 <= ((ap_sync_reg_channel_write_in1_buf_2 xor ap_const_logic_1) and Loop_0_proc19_U0_ap_done);
    ap_channel_done_in1_buf_3 <= ((ap_sync_reg_channel_write_in1_buf_3 xor ap_const_logic_1) and Loop_0_proc19_U0_ap_done);
    ap_channel_done_in1_buf_4 <= ((ap_sync_reg_channel_write_in1_buf_4 xor ap_const_logic_1) and Loop_0_proc19_U0_ap_done);
    ap_channel_done_in1_buf_5 <= ((ap_sync_reg_channel_write_in1_buf_5 xor ap_const_logic_1) and Loop_0_proc19_U0_ap_done);
    ap_channel_done_in1_buf_6 <= ((ap_sync_reg_channel_write_in1_buf_6 xor ap_const_logic_1) and Loop_0_proc19_U0_ap_done);
    ap_channel_done_in1_buf_7 <= ((ap_sync_reg_channel_write_in1_buf_7 xor ap_const_logic_1) and Loop_0_proc19_U0_ap_done);
    ap_channel_done_in1_buf_8 <= ((ap_sync_reg_channel_write_in1_buf_8 xor ap_const_logic_1) and Loop_0_proc19_U0_ap_done);
    ap_channel_done_in1_buf_9 <= ((ap_sync_reg_channel_write_in1_buf_9 xor ap_const_logic_1) and Loop_0_proc19_U0_ap_done);
    ap_channel_done_out_buf_0 <= ((ap_sync_reg_channel_write_out_buf_0 xor ap_const_logic_1) and Loop_1_proc_U0_ap_done);
    ap_channel_done_out_buf_1 <= ((ap_sync_reg_channel_write_out_buf_1 xor ap_const_logic_1) and Loop_1_proc_U0_ap_done);
    ap_channel_done_out_buf_10 <= ((ap_sync_reg_channel_write_out_buf_10 xor ap_const_logic_1) and Loop_1_proc_U0_ap_done);
    ap_channel_done_out_buf_11 <= ((ap_sync_reg_channel_write_out_buf_11 xor ap_const_logic_1) and Loop_1_proc_U0_ap_done);
    ap_channel_done_out_buf_12 <= ((ap_sync_reg_channel_write_out_buf_12 xor ap_const_logic_1) and Loop_1_proc_U0_ap_done);
    ap_channel_done_out_buf_13 <= ((ap_sync_reg_channel_write_out_buf_13 xor ap_const_logic_1) and Loop_1_proc_U0_ap_done);
    ap_channel_done_out_buf_14 <= ((ap_sync_reg_channel_write_out_buf_14 xor ap_const_logic_1) and Loop_1_proc_U0_ap_done);
    ap_channel_done_out_buf_15 <= ((ap_sync_reg_channel_write_out_buf_15 xor ap_const_logic_1) and Loop_1_proc_U0_ap_done);
    ap_channel_done_out_buf_2 <= ((ap_sync_reg_channel_write_out_buf_2 xor ap_const_logic_1) and Loop_1_proc_U0_ap_done);
    ap_channel_done_out_buf_3 <= ((ap_sync_reg_channel_write_out_buf_3 xor ap_const_logic_1) and Loop_1_proc_U0_ap_done);
    ap_channel_done_out_buf_4 <= ((ap_sync_reg_channel_write_out_buf_4 xor ap_const_logic_1) and Loop_1_proc_U0_ap_done);
    ap_channel_done_out_buf_5 <= ((ap_sync_reg_channel_write_out_buf_5 xor ap_const_logic_1) and Loop_1_proc_U0_ap_done);
    ap_channel_done_out_buf_6 <= ((ap_sync_reg_channel_write_out_buf_6 xor ap_const_logic_1) and Loop_1_proc_U0_ap_done);
    ap_channel_done_out_buf_7 <= ((ap_sync_reg_channel_write_out_buf_7 xor ap_const_logic_1) and Loop_1_proc_U0_ap_done);
    ap_channel_done_out_buf_8 <= ((ap_sync_reg_channel_write_out_buf_8 xor ap_const_logic_1) and Loop_1_proc_U0_ap_done);
    ap_channel_done_out_buf_9 <= ((ap_sync_reg_channel_write_out_buf_9 xor ap_const_logic_1) and Loop_1_proc_U0_ap_done);
    ap_done <= memcpy_omatrix_out_b_U0_ap_done;
    ap_idle <= (memcpy_omatrix_out_b_U0_ap_idle and (out_buf_15_t_empty_n xor ap_const_logic_1) and (out_buf_14_t_empty_n xor ap_const_logic_1) and (out_buf_13_t_empty_n xor ap_const_logic_1) and (out_buf_12_t_empty_n xor ap_const_logic_1) and (out_buf_11_t_empty_n xor ap_const_logic_1) and (out_buf_10_t_empty_n xor ap_const_logic_1) and (out_buf_9_t_empty_n xor ap_const_logic_1) and (out_buf_8_t_empty_n xor ap_const_logic_1) and (out_buf_7_t_empty_n xor ap_const_logic_1) and (out_buf_6_t_empty_n xor ap_const_logic_1) and (out_buf_5_t_empty_n xor ap_const_logic_1) and (out_buf_4_t_empty_n xor ap_const_logic_1) and (out_buf_3_t_empty_n xor ap_const_logic_1) and (out_buf_2_t_empty_n xor ap_const_logic_1) and (out_buf_1_t_empty_n xor ap_const_logic_1) and (out_buf_0_t_empty_n xor ap_const_logic_1) and (in1_buf_15_t_empty_n xor ap_const_logic_1) and (in1_buf_14_t_empty_n xor ap_const_logic_1) and (in1_buf_13_t_empty_n xor ap_const_logic_1) and (in1_buf_12_t_empty_n xor ap_const_logic_1) and (in1_buf_11_t_empty_n xor ap_const_logic_1) and (in1_buf_10_t_empty_n xor ap_const_logic_1) and (in1_buf_9_t_empty_n xor ap_const_logic_1) and (in1_buf_8_t_empty_n xor ap_const_logic_1) and (in1_buf_7_t_empty_n xor ap_const_logic_1) and (in1_buf_6_t_empty_n xor ap_const_logic_1) and (in1_buf_5_t_empty_n xor ap_const_logic_1) and (in1_buf_4_t_empty_n xor ap_const_logic_1) and (in1_buf_3_t_empty_n xor ap_const_logic_1) and (in1_buf_2_t_empty_n xor ap_const_logic_1) and (in1_buf_1_t_empty_n xor ap_const_logic_1) and (in1_buf_0_t_empty_n xor ap_const_logic_1) and Loop_1_proc_U0_ap_idle and Loop_0_proc19_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_Loop_0_proc19_U0_ap_ready <= (ap_sync_reg_Loop_0_proc19_U0_ap_ready or Loop_0_proc19_U0_ap_ready);
    ap_sync_Loop_1_proc_U0_ap_ready <= (ap_sync_reg_Loop_1_proc_U0_ap_ready or Loop_1_proc_U0_ap_ready);
    ap_sync_channel_write_in1_buf_0 <= ((ap_channel_done_in1_buf_0 and Loop_0_proc19_U0_in1_buf_0_full_n) or ap_sync_reg_channel_write_in1_buf_0);
    ap_sync_channel_write_in1_buf_1 <= ((ap_channel_done_in1_buf_1 and Loop_0_proc19_U0_in1_buf_1_full_n) or ap_sync_reg_channel_write_in1_buf_1);
    ap_sync_channel_write_in1_buf_10 <= ((ap_channel_done_in1_buf_10 and Loop_0_proc19_U0_in1_buf_10_full_n) or ap_sync_reg_channel_write_in1_buf_10);
    ap_sync_channel_write_in1_buf_11 <= ((ap_channel_done_in1_buf_11 and Loop_0_proc19_U0_in1_buf_11_full_n) or ap_sync_reg_channel_write_in1_buf_11);
    ap_sync_channel_write_in1_buf_12 <= ((ap_channel_done_in1_buf_12 and Loop_0_proc19_U0_in1_buf_12_full_n) or ap_sync_reg_channel_write_in1_buf_12);
    ap_sync_channel_write_in1_buf_13 <= ((ap_channel_done_in1_buf_13 and Loop_0_proc19_U0_in1_buf_13_full_n) or ap_sync_reg_channel_write_in1_buf_13);
    ap_sync_channel_write_in1_buf_14 <= ((ap_channel_done_in1_buf_14 and Loop_0_proc19_U0_in1_buf_14_full_n) or ap_sync_reg_channel_write_in1_buf_14);
    ap_sync_channel_write_in1_buf_15 <= ((ap_channel_done_in1_buf_15 and Loop_0_proc19_U0_in1_buf_15_full_n) or ap_sync_reg_channel_write_in1_buf_15);
    ap_sync_channel_write_in1_buf_2 <= ((ap_channel_done_in1_buf_2 and Loop_0_proc19_U0_in1_buf_2_full_n) or ap_sync_reg_channel_write_in1_buf_2);
    ap_sync_channel_write_in1_buf_3 <= ((ap_channel_done_in1_buf_3 and Loop_0_proc19_U0_in1_buf_3_full_n) or ap_sync_reg_channel_write_in1_buf_3);
    ap_sync_channel_write_in1_buf_4 <= ((ap_channel_done_in1_buf_4 and Loop_0_proc19_U0_in1_buf_4_full_n) or ap_sync_reg_channel_write_in1_buf_4);
    ap_sync_channel_write_in1_buf_5 <= ((ap_channel_done_in1_buf_5 and Loop_0_proc19_U0_in1_buf_5_full_n) or ap_sync_reg_channel_write_in1_buf_5);
    ap_sync_channel_write_in1_buf_6 <= ((ap_channel_done_in1_buf_6 and Loop_0_proc19_U0_in1_buf_6_full_n) or ap_sync_reg_channel_write_in1_buf_6);
    ap_sync_channel_write_in1_buf_7 <= ((ap_channel_done_in1_buf_7 and Loop_0_proc19_U0_in1_buf_7_full_n) or ap_sync_reg_channel_write_in1_buf_7);
    ap_sync_channel_write_in1_buf_8 <= ((ap_channel_done_in1_buf_8 and Loop_0_proc19_U0_in1_buf_8_full_n) or ap_sync_reg_channel_write_in1_buf_8);
    ap_sync_channel_write_in1_buf_9 <= ((ap_channel_done_in1_buf_9 and Loop_0_proc19_U0_in1_buf_9_full_n) or ap_sync_reg_channel_write_in1_buf_9);
    ap_sync_channel_write_out_buf_0 <= ((ap_channel_done_out_buf_0 and Loop_1_proc_U0_out_buf_0_full_n) or ap_sync_reg_channel_write_out_buf_0);
    ap_sync_channel_write_out_buf_1 <= ((ap_channel_done_out_buf_1 and Loop_1_proc_U0_out_buf_1_full_n) or ap_sync_reg_channel_write_out_buf_1);
    ap_sync_channel_write_out_buf_10 <= ((ap_channel_done_out_buf_10 and Loop_1_proc_U0_out_buf_10_full_n) or ap_sync_reg_channel_write_out_buf_10);
    ap_sync_channel_write_out_buf_11 <= ((ap_channel_done_out_buf_11 and Loop_1_proc_U0_out_buf_11_full_n) or ap_sync_reg_channel_write_out_buf_11);
    ap_sync_channel_write_out_buf_12 <= ((ap_channel_done_out_buf_12 and Loop_1_proc_U0_out_buf_12_full_n) or ap_sync_reg_channel_write_out_buf_12);
    ap_sync_channel_write_out_buf_13 <= ((ap_channel_done_out_buf_13 and Loop_1_proc_U0_out_buf_13_full_n) or ap_sync_reg_channel_write_out_buf_13);
    ap_sync_channel_write_out_buf_14 <= ((ap_channel_done_out_buf_14 and Loop_1_proc_U0_out_buf_14_full_n) or ap_sync_reg_channel_write_out_buf_14);
    ap_sync_channel_write_out_buf_15 <= ((ap_channel_done_out_buf_15 and Loop_1_proc_U0_out_buf_15_full_n) or ap_sync_reg_channel_write_out_buf_15);
    ap_sync_channel_write_out_buf_2 <= ((ap_channel_done_out_buf_2 and Loop_1_proc_U0_out_buf_2_full_n) or ap_sync_reg_channel_write_out_buf_2);
    ap_sync_channel_write_out_buf_3 <= ((ap_channel_done_out_buf_3 and Loop_1_proc_U0_out_buf_3_full_n) or ap_sync_reg_channel_write_out_buf_3);
    ap_sync_channel_write_out_buf_4 <= ((ap_channel_done_out_buf_4 and Loop_1_proc_U0_out_buf_4_full_n) or ap_sync_reg_channel_write_out_buf_4);
    ap_sync_channel_write_out_buf_5 <= ((ap_channel_done_out_buf_5 and Loop_1_proc_U0_out_buf_5_full_n) or ap_sync_reg_channel_write_out_buf_5);
    ap_sync_channel_write_out_buf_6 <= ((ap_channel_done_out_buf_6 and Loop_1_proc_U0_out_buf_6_full_n) or ap_sync_reg_channel_write_out_buf_6);
    ap_sync_channel_write_out_buf_7 <= ((ap_channel_done_out_buf_7 and Loop_1_proc_U0_out_buf_7_full_n) or ap_sync_reg_channel_write_out_buf_7);
    ap_sync_channel_write_out_buf_8 <= ((ap_channel_done_out_buf_8 and Loop_1_proc_U0_out_buf_8_full_n) or ap_sync_reg_channel_write_out_buf_8);
    ap_sync_channel_write_out_buf_9 <= ((ap_channel_done_out_buf_9 and Loop_1_proc_U0_out_buf_9_full_n) or ap_sync_reg_channel_write_out_buf_9);
    ap_sync_continue <= ap_continue;
    ap_sync_done <= memcpy_omatrix_out_b_U0_ap_done;
    ap_sync_ready <= (ap_sync_Loop_1_proc_U0_ap_ready and ap_sync_Loop_0_proc19_U0_ap_ready);
    m_axi_imatrix_ARADDR <= Loop_1_proc_U0_m_axi_imatrix_ARADDR;
    m_axi_imatrix_ARBURST <= Loop_1_proc_U0_m_axi_imatrix_ARBURST;
    m_axi_imatrix_ARCACHE <= Loop_1_proc_U0_m_axi_imatrix_ARCACHE;
    m_axi_imatrix_ARID <= Loop_1_proc_U0_m_axi_imatrix_ARID;
    m_axi_imatrix_ARLEN <= Loop_1_proc_U0_m_axi_imatrix_ARLEN;
    m_axi_imatrix_ARLOCK <= Loop_1_proc_U0_m_axi_imatrix_ARLOCK;
    m_axi_imatrix_ARPROT <= Loop_1_proc_U0_m_axi_imatrix_ARPROT;
    m_axi_imatrix_ARQOS <= Loop_1_proc_U0_m_axi_imatrix_ARQOS;
    m_axi_imatrix_ARREGION <= Loop_1_proc_U0_m_axi_imatrix_ARREGION;
    m_axi_imatrix_ARSIZE <= Loop_1_proc_U0_m_axi_imatrix_ARSIZE;
    m_axi_imatrix_ARUSER <= Loop_1_proc_U0_m_axi_imatrix_ARUSER;
    m_axi_imatrix_ARVALID <= Loop_1_proc_U0_m_axi_imatrix_ARVALID;
    m_axi_imatrix_AWADDR <= ap_const_lv64_0;
    m_axi_imatrix_AWBURST <= ap_const_lv2_0;
    m_axi_imatrix_AWCACHE <= ap_const_lv4_0;
    m_axi_imatrix_AWID <= ap_const_lv1_0;
    m_axi_imatrix_AWLEN <= ap_const_lv32_0;
    m_axi_imatrix_AWLOCK <= ap_const_lv2_0;
    m_axi_imatrix_AWPROT <= ap_const_lv3_0;
    m_axi_imatrix_AWQOS <= ap_const_lv4_0;
    m_axi_imatrix_AWREGION <= ap_const_lv4_0;
    m_axi_imatrix_AWSIZE <= ap_const_lv3_0;
    m_axi_imatrix_AWUSER <= ap_const_lv1_0;
    m_axi_imatrix_AWVALID <= ap_const_logic_0;
    m_axi_imatrix_BREADY <= ap_const_logic_0;
    m_axi_imatrix_RREADY <= Loop_1_proc_U0_m_axi_imatrix_RREADY;
    m_axi_imatrix_WDATA <= ap_const_lv32_0;
    m_axi_imatrix_WID <= ap_const_lv1_0;
    m_axi_imatrix_WLAST <= ap_const_logic_0;
    m_axi_imatrix_WSTRB <= ap_const_lv4_0;
    m_axi_imatrix_WUSER <= ap_const_lv1_0;
    m_axi_imatrix_WVALID <= ap_const_logic_0;
    m_axi_omatrix_ARADDR <= ap_const_lv64_0;
    m_axi_omatrix_ARBURST <= ap_const_lv2_0;
    m_axi_omatrix_ARCACHE <= ap_const_lv4_0;
    m_axi_omatrix_ARID <= ap_const_lv1_0;
    m_axi_omatrix_ARLEN <= ap_const_lv32_0;
    m_axi_omatrix_ARLOCK <= ap_const_lv2_0;
    m_axi_omatrix_ARPROT <= ap_const_lv3_0;
    m_axi_omatrix_ARQOS <= ap_const_lv4_0;
    m_axi_omatrix_ARREGION <= ap_const_lv4_0;
    m_axi_omatrix_ARSIZE <= ap_const_lv3_0;
    m_axi_omatrix_ARUSER <= ap_const_lv1_0;
    m_axi_omatrix_ARVALID <= ap_const_logic_0;
    m_axi_omatrix_AWADDR <= memcpy_omatrix_out_b_U0_m_axi_omatrix_AWADDR;
    m_axi_omatrix_AWBURST <= memcpy_omatrix_out_b_U0_m_axi_omatrix_AWBURST;
    m_axi_omatrix_AWCACHE <= memcpy_omatrix_out_b_U0_m_axi_omatrix_AWCACHE;
    m_axi_omatrix_AWID <= memcpy_omatrix_out_b_U0_m_axi_omatrix_AWID;
    m_axi_omatrix_AWLEN <= memcpy_omatrix_out_b_U0_m_axi_omatrix_AWLEN;
    m_axi_omatrix_AWLOCK <= memcpy_omatrix_out_b_U0_m_axi_omatrix_AWLOCK;
    m_axi_omatrix_AWPROT <= memcpy_omatrix_out_b_U0_m_axi_omatrix_AWPROT;
    m_axi_omatrix_AWQOS <= memcpy_omatrix_out_b_U0_m_axi_omatrix_AWQOS;
    m_axi_omatrix_AWREGION <= memcpy_omatrix_out_b_U0_m_axi_omatrix_AWREGION;
    m_axi_omatrix_AWSIZE <= memcpy_omatrix_out_b_U0_m_axi_omatrix_AWSIZE;
    m_axi_omatrix_AWUSER <= memcpy_omatrix_out_b_U0_m_axi_omatrix_AWUSER;
    m_axi_omatrix_AWVALID <= memcpy_omatrix_out_b_U0_m_axi_omatrix_AWVALID;
    m_axi_omatrix_BREADY <= memcpy_omatrix_out_b_U0_m_axi_omatrix_BREADY;
    m_axi_omatrix_RREADY <= ap_const_logic_0;
    m_axi_omatrix_WDATA <= memcpy_omatrix_out_b_U0_m_axi_omatrix_WDATA;
    m_axi_omatrix_WID <= memcpy_omatrix_out_b_U0_m_axi_omatrix_WID;
    m_axi_omatrix_WLAST <= memcpy_omatrix_out_b_U0_m_axi_omatrix_WLAST;
    m_axi_omatrix_WSTRB <= memcpy_omatrix_out_b_U0_m_axi_omatrix_WSTRB;
    m_axi_omatrix_WUSER <= memcpy_omatrix_out_b_U0_m_axi_omatrix_WUSER;
    m_axi_omatrix_WVALID <= memcpy_omatrix_out_b_U0_m_axi_omatrix_WVALID;
    memcpy_omatrix_out_b_U0_ap_continue <= ap_continue;
    memcpy_omatrix_out_b_U0_ap_start <= (out_buf_9_t_empty_n and out_buf_8_t_empty_n and out_buf_7_t_empty_n and out_buf_6_t_empty_n and out_buf_5_t_empty_n and out_buf_4_t_empty_n and out_buf_3_t_empty_n and out_buf_2_t_empty_n and out_buf_1_t_empty_n and out_buf_15_t_empty_n and out_buf_14_t_empty_n and out_buf_13_t_empty_n and out_buf_12_t_empty_n and out_buf_11_t_empty_n and out_buf_10_t_empty_n and out_buf_0_t_empty_n);
    memcpy_omatrix_out_b_U0_start_full_n <= ap_const_logic_1;
    memcpy_omatrix_out_b_U0_start_write <= ap_const_logic_0;
end behav;

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _memcpy_omatrix_out_b_HH_
#define _memcpy_omatrix_out_b_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "IZigzagMatrix_f2rcud.h"

namespace ap_rtl {

struct memcpy_omatrix_out_b : public sc_module {
    // Port declarations 106
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > m_axi_omatrix_AWVALID;
    sc_in< sc_logic > m_axi_omatrix_AWREADY;
    sc_out< sc_lv<32> > m_axi_omatrix_AWADDR;
    sc_out< sc_lv<1> > m_axi_omatrix_AWID;
    sc_out< sc_lv<32> > m_axi_omatrix_AWLEN;
    sc_out< sc_lv<3> > m_axi_omatrix_AWSIZE;
    sc_out< sc_lv<2> > m_axi_omatrix_AWBURST;
    sc_out< sc_lv<2> > m_axi_omatrix_AWLOCK;
    sc_out< sc_lv<4> > m_axi_omatrix_AWCACHE;
    sc_out< sc_lv<3> > m_axi_omatrix_AWPROT;
    sc_out< sc_lv<4> > m_axi_omatrix_AWQOS;
    sc_out< sc_lv<4> > m_axi_omatrix_AWREGION;
    sc_out< sc_lv<1> > m_axi_omatrix_AWUSER;
    sc_out< sc_logic > m_axi_omatrix_WVALID;
    sc_in< sc_logic > m_axi_omatrix_WREADY;
    sc_out< sc_lv<32> > m_axi_omatrix_WDATA;
    sc_out< sc_lv<4> > m_axi_omatrix_WSTRB;
    sc_out< sc_logic > m_axi_omatrix_WLAST;
    sc_out< sc_lv<1> > m_axi_omatrix_WID;
    sc_out< sc_lv<1> > m_axi_omatrix_WUSER;
    sc_out< sc_logic > m_axi_omatrix_ARVALID;
    sc_in< sc_logic > m_axi_omatrix_ARREADY;
    sc_out< sc_lv<32> > m_axi_omatrix_ARADDR;
    sc_out< sc_lv<1> > m_axi_omatrix_ARID;
    sc_out< sc_lv<32> > m_axi_omatrix_ARLEN;
    sc_out< sc_lv<3> > m_axi_omatrix_ARSIZE;
    sc_out< sc_lv<2> > m_axi_omatrix_ARBURST;
    sc_out< sc_lv<2> > m_axi_omatrix_ARLOCK;
    sc_out< sc_lv<4> > m_axi_omatrix_ARCACHE;
    sc_out< sc_lv<3> > m_axi_omatrix_ARPROT;
    sc_out< sc_lv<4> > m_axi_omatrix_ARQOS;
    sc_out< sc_lv<4> > m_axi_omatrix_ARREGION;
    sc_out< sc_lv<1> > m_axi_omatrix_ARUSER;
    sc_in< sc_logic > m_axi_omatrix_RVALID;
    sc_out< sc_logic > m_axi_omatrix_RREADY;
    sc_in< sc_lv<32> > m_axi_omatrix_RDATA;
    sc_in< sc_logic > m_axi_omatrix_RLAST;
    sc_in< sc_lv<1> > m_axi_omatrix_RID;
    sc_in< sc_lv<1> > m_axi_omatrix_RUSER;
    sc_in< sc_lv<2> > m_axi_omatrix_RRESP;
    sc_in< sc_logic > m_axi_omatrix_BVALID;
    sc_out< sc_logic > m_axi_omatrix_BREADY;
    sc_in< sc_lv<2> > m_axi_omatrix_BRESP;
    sc_in< sc_lv<1> > m_axi_omatrix_BID;
    sc_in< sc_lv<1> > m_axi_omatrix_BUSER;
    sc_in< sc_lv<30> > omatrix_offset_dout;
    sc_in< sc_logic > omatrix_offset_empty_n;
    sc_out< sc_logic > omatrix_offset_read;
    sc_in< sc_lv<1> > i_0_i_i_c_dout;
    sc_in< sc_logic > i_0_i_i_c_empty_n;
    sc_out< sc_logic > i_0_i_i_c_read;
    sc_out< sc_lv<1> > out_buf_0_address0;
    sc_out< sc_logic > out_buf_0_ce0;
    sc_in< sc_lv<32> > out_buf_0_q0;
    sc_out< sc_lv<1> > out_buf_1_address0;
    sc_out< sc_logic > out_buf_1_ce0;
    sc_in< sc_lv<32> > out_buf_1_q0;
    sc_out< sc_lv<1> > out_buf_2_address0;
    sc_out< sc_logic > out_buf_2_ce0;
    sc_in< sc_lv<32> > out_buf_2_q0;
    sc_out< sc_lv<1> > out_buf_3_address0;
    sc_out< sc_logic > out_buf_3_ce0;
    sc_in< sc_lv<32> > out_buf_3_q0;
    sc_out< sc_lv<1> > out_buf_4_address0;
    sc_out< sc_logic > out_buf_4_ce0;
    sc_in< sc_lv<32> > out_buf_4_q0;
    sc_out< sc_lv<1> > out_buf_5_address0;
    sc_out< sc_logic > out_buf_5_ce0;
    sc_in< sc_lv<32> > out_buf_5_q0;
    sc_out< sc_lv<1> > out_buf_6_address0;
    sc_out< sc_logic > out_buf_6_ce0;
    sc_in< sc_lv<32> > out_buf_6_q0;
    sc_out< sc_lv<1> > out_buf_7_address0;
    sc_out< sc_logic > out_buf_7_ce0;
    sc_in< sc_lv<32> > out_buf_7_q0;
    sc_out< sc_lv<1> > out_buf_8_address0;
    sc_out< sc_logic > out_buf_8_ce0;
    sc_in< sc_lv<32> > out_buf_8_q0;
    sc_out< sc_lv<1> > out_buf_9_address0;
    sc_out< sc_logic > out_buf_9_ce0;
    sc_in< sc_lv<32> > out_buf_9_q0;
    sc_out< sc_lv<1> > out_buf_10_address0;
    sc_out< sc_logic > out_buf_10_ce0;
    sc_in< sc_lv<32> > out_buf_10_q0;
    sc_out< sc_lv<1> > out_buf_11_address0;
    sc_out< sc_logic > out_buf_11_ce0;
    sc_in< sc_lv<32> > out_buf_11_q0;
    sc_out< sc_lv<1> > out_buf_12_address0;
    sc_out< sc_logic > out_buf_12_ce0;
    sc_in< sc_lv<32> > out_buf_12_q0;
    sc_out< sc_lv<1> > out_buf_13_address0;
    sc_out< sc_logic > out_buf_13_ce0;
    sc_in< sc_lv<32> > out_buf_13_q0;
    sc_out< sc_lv<1> > out_buf_14_address0;
    sc_out< sc_logic > out_buf_14_ce0;
    sc_in< sc_lv<32> > out_buf_14_q0;
    sc_out< sc_lv<1> > out_buf_15_address0;
    sc_out< sc_logic > out_buf_15_ce0;
    sc_in< sc_lv<32> > out_buf_15_q0;


    // Module declarations
    memcpy_omatrix_out_b(sc_module_name name);
    SC_HAS_PROCESS(memcpy_omatrix_out_b);

    ~memcpy_omatrix_out_b();

    sc_trace_file* mVcdFile;

    IZigzagMatrix_f2rcud<1,1,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,4,32>* IZigzagMatrix_f2rcud_U58;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > omatrix_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > omatrix_blk_n_W;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_i_i_i_i_i_reg_493;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_exitcond_i_i_i_i_i_reg_493;
    sc_signal< sc_logic > omatrix_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > omatrix_offset_blk_n;
    sc_signal< sc_logic > i_0_i_i_c_blk_n;
    sc_signal< sc_lv<6> > indvar_i_i_i_i_i_reg_356;
    sc_signal< sc_lv<31> > sum_i_i_fu_383_p2;
    sc_signal< sc_lv<31> > sum_i_i_reg_482;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_omatrix_AWREADY;
    sc_signal< sc_lv<1> > exitcond_i_i_i_i_i_fu_399_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_omatrix_WREADY;
    sc_signal< bool > ap_block_state5_io;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<6> > indvar_next_i_i_i_i_s_fu_405_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<4> > tmp_fu_441_p1;
    sc_signal< sc_lv<4> > tmp_reg_502;
    sc_signal< sc_lv<32> > tmp_i_i_fu_445_p18;
    sc_signal< sc_lv<32> > tmp_i_i_reg_587;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<64> > newIndex5_i_i_i_i_fu_421_p1;
    sc_signal< sc_lv<64> > sum_cast_i_i_fu_389_p1;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_omatrix_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_omatrix_WREADY;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<6> > offset_i_i_i_fu_367_p3;
    sc_signal< sc_lv<31> > tmp_i_i_cast_i_i_fu_375_p1;
    sc_signal< sc_lv<31> > sext_cast_i_i_fu_379_p1;
    sc_signal< sc_lv<2> > newIndex4_i_i_i_i_fu_411_p4;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_pp0_stage0;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<8> ap_ST_fsm_state9;
    static const sc_lv<8> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_io();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_ap_sig_ioackin_m_axi_omatrix_AWREADY();
    void thread_ap_sig_ioackin_m_axi_omatrix_WREADY();
    void thread_exitcond_i_i_i_i_i_fu_399_p2();
    void thread_i_0_i_i_c_blk_n();
    void thread_i_0_i_i_c_read();
    void thread_indvar_next_i_i_i_i_s_fu_405_p2();
    void thread_m_axi_omatrix_ARADDR();
    void thread_m_axi_omatrix_ARBURST();
    void thread_m_axi_omatrix_ARCACHE();
    void thread_m_axi_omatrix_ARID();
    void thread_m_axi_omatrix_ARLEN();
    void thread_m_axi_omatrix_ARLOCK();
    void thread_m_axi_omatrix_ARPROT();
    void thread_m_axi_omatrix_ARQOS();
    void thread_m_axi_omatrix_ARREGION();
    void thread_m_axi_omatrix_ARSIZE();
    void thread_m_axi_omatrix_ARUSER();
    void thread_m_axi_omatrix_ARVALID();
    void thread_m_axi_omatrix_AWADDR();
    void thread_m_axi_omatrix_AWBURST();
    void thread_m_axi_omatrix_AWCACHE();
    void thread_m_axi_omatrix_AWID();
    void thread_m_axi_omatrix_AWLEN();
    void thread_m_axi_omatrix_AWLOCK();
    void thread_m_axi_omatrix_AWPROT();
    void thread_m_axi_omatrix_AWQOS();
    void thread_m_axi_omatrix_AWREGION();
    void thread_m_axi_omatrix_AWSIZE();
    void thread_m_axi_omatrix_AWUSER();
    void thread_m_axi_omatrix_AWVALID();
    void thread_m_axi_omatrix_BREADY();
    void thread_m_axi_omatrix_RREADY();
    void thread_m_axi_omatrix_WDATA();
    void thread_m_axi_omatrix_WID();
    void thread_m_axi_omatrix_WLAST();
    void thread_m_axi_omatrix_WSTRB();
    void thread_m_axi_omatrix_WUSER();
    void thread_m_axi_omatrix_WVALID();
    void thread_newIndex4_i_i_i_i_fu_411_p4();
    void thread_newIndex5_i_i_i_i_fu_421_p1();
    void thread_offset_i_i_i_fu_367_p3();
    void thread_omatrix_blk_n_AW();
    void thread_omatrix_blk_n_B();
    void thread_omatrix_blk_n_W();
    void thread_omatrix_offset_blk_n();
    void thread_omatrix_offset_read();
    void thread_out_buf_0_address0();
    void thread_out_buf_0_ce0();
    void thread_out_buf_10_address0();
    void thread_out_buf_10_ce0();
    void thread_out_buf_11_address0();
    void thread_out_buf_11_ce0();
    void thread_out_buf_12_address0();
    void thread_out_buf_12_ce0();
    void thread_out_buf_13_address0();
    void thread_out_buf_13_ce0();
    void thread_out_buf_14_address0();
    void thread_out_buf_14_ce0();
    void thread_out_buf_15_address0();
    void thread_out_buf_15_ce0();
    void thread_out_buf_1_address0();
    void thread_out_buf_1_ce0();
    void thread_out_buf_2_address0();
    void thread_out_buf_2_ce0();
    void thread_out_buf_3_address0();
    void thread_out_buf_3_ce0();
    void thread_out_buf_4_address0();
    void thread_out_buf_4_ce0();
    void thread_out_buf_5_address0();
    void thread_out_buf_5_ce0();
    void thread_out_buf_6_address0();
    void thread_out_buf_6_ce0();
    void thread_out_buf_7_address0();
    void thread_out_buf_7_ce0();
    void thread_out_buf_8_address0();
    void thread_out_buf_8_ce0();
    void thread_out_buf_9_address0();
    void thread_out_buf_9_ce0();
    void thread_sext_cast_i_i_fu_379_p1();
    void thread_sum_cast_i_i_fu_389_p1();
    void thread_sum_i_i_fu_383_p2();
    void thread_tmp_fu_441_p1();
    void thread_tmp_i_i_cast_i_i_fu_375_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

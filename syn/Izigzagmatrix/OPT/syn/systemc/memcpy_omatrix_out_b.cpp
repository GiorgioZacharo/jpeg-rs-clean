// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "memcpy_omatrix_out_b.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic memcpy_omatrix_out_b::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic memcpy_omatrix_out_b::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> memcpy_omatrix_out_b::ap_ST_fsm_state1 = "1";
const sc_lv<8> memcpy_omatrix_out_b::ap_ST_fsm_state2 = "10";
const sc_lv<8> memcpy_omatrix_out_b::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<8> memcpy_omatrix_out_b::ap_ST_fsm_state6 = "1000";
const sc_lv<8> memcpy_omatrix_out_b::ap_ST_fsm_state7 = "10000";
const sc_lv<8> memcpy_omatrix_out_b::ap_ST_fsm_state8 = "100000";
const sc_lv<8> memcpy_omatrix_out_b::ap_ST_fsm_state9 = "1000000";
const sc_lv<8> memcpy_omatrix_out_b::ap_ST_fsm_state10 = "10000000";
const sc_lv<32> memcpy_omatrix_out_b::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool memcpy_omatrix_out_b::ap_const_boolean_1 = true;
const sc_lv<1> memcpy_omatrix_out_b::ap_const_lv1_0 = "0";
const sc_lv<3> memcpy_omatrix_out_b::ap_const_lv3_0 = "000";
const sc_lv<2> memcpy_omatrix_out_b::ap_const_lv2_0 = "00";
const sc_lv<4> memcpy_omatrix_out_b::ap_const_lv4_0 = "0000";
const sc_lv<32> memcpy_omatrix_out_b::ap_const_lv32_1 = "1";
const bool memcpy_omatrix_out_b::ap_const_boolean_0 = false;
const sc_lv<32> memcpy_omatrix_out_b::ap_const_lv32_7 = "111";
const sc_lv<32> memcpy_omatrix_out_b::ap_const_lv32_2 = "10";
const sc_lv<1> memcpy_omatrix_out_b::ap_const_lv1_1 = "1";
const sc_lv<6> memcpy_omatrix_out_b::ap_const_lv6_0 = "000000";
const sc_lv<32> memcpy_omatrix_out_b::ap_const_lv32_20 = "100000";
const sc_lv<4> memcpy_omatrix_out_b::ap_const_lv4_F = "1111";
const sc_lv<5> memcpy_omatrix_out_b::ap_const_lv5_0 = "00000";
const sc_lv<6> memcpy_omatrix_out_b::ap_const_lv6_20 = "100000";
const sc_lv<6> memcpy_omatrix_out_b::ap_const_lv6_1 = "1";
const sc_lv<32> memcpy_omatrix_out_b::ap_const_lv32_4 = "100";
const sc_lv<32> memcpy_omatrix_out_b::ap_const_lv32_5 = "101";

memcpy_omatrix_out_b::memcpy_omatrix_out_b(sc_module_name name) : sc_module(name), mVcdFile(0) {
    IZigzagMatrix_f2rcud_U58 = new IZigzagMatrix_f2rcud<1,1,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,4,32>("IZigzagMatrix_f2rcud_U58");
    IZigzagMatrix_f2rcud_U58->din0(out_buf_0_q0);
    IZigzagMatrix_f2rcud_U58->din1(out_buf_1_q0);
    IZigzagMatrix_f2rcud_U58->din2(out_buf_2_q0);
    IZigzagMatrix_f2rcud_U58->din3(out_buf_3_q0);
    IZigzagMatrix_f2rcud_U58->din4(out_buf_4_q0);
    IZigzagMatrix_f2rcud_U58->din5(out_buf_5_q0);
    IZigzagMatrix_f2rcud_U58->din6(out_buf_6_q0);
    IZigzagMatrix_f2rcud_U58->din7(out_buf_7_q0);
    IZigzagMatrix_f2rcud_U58->din8(out_buf_8_q0);
    IZigzagMatrix_f2rcud_U58->din9(out_buf_9_q0);
    IZigzagMatrix_f2rcud_U58->din10(out_buf_10_q0);
    IZigzagMatrix_f2rcud_U58->din11(out_buf_11_q0);
    IZigzagMatrix_f2rcud_U58->din12(out_buf_12_q0);
    IZigzagMatrix_f2rcud_U58->din13(out_buf_13_q0);
    IZigzagMatrix_f2rcud_U58->din14(out_buf_14_q0);
    IZigzagMatrix_f2rcud_U58->din15(out_buf_15_q0);
    IZigzagMatrix_f2rcud_U58->din16(tmp_reg_502);
    IZigzagMatrix_f2rcud_U58->dout(tmp_i_i_fu_445_p18);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( omatrix_offset_empty_n );
    sensitive << ( i_0_i_i_c_empty_n );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state5_io);
    sensitive << ( ap_reg_pp0_iter1_exitcond_i_i_i_i_i_reg_493 );
    sensitive << ( ap_sig_ioackin_m_axi_omatrix_WREADY );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( exitcond_i_i_i_i_i_fu_399_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( m_axi_omatrix_BVALID );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( m_axi_omatrix_BVALID );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_omatrix_AWREADY);
    sensitive << ( m_axi_omatrix_AWREADY );
    sensitive << ( ap_reg_ioackin_m_axi_omatrix_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_omatrix_WREADY);
    sensitive << ( m_axi_omatrix_WREADY );
    sensitive << ( ap_reg_ioackin_m_axi_omatrix_WREADY );

    SC_METHOD(thread_exitcond_i_i_i_i_i_fu_399_p2);
    sensitive << ( indvar_i_i_i_i_i_reg_356 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_i_0_i_i_c_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( i_0_i_i_c_empty_n );

    SC_METHOD(thread_i_0_i_i_c_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( omatrix_offset_empty_n );
    sensitive << ( i_0_i_i_c_empty_n );

    SC_METHOD(thread_indvar_next_i_i_i_i_s_fu_405_p2);
    sensitive << ( indvar_i_i_i_i_i_reg_356 );

    SC_METHOD(thread_m_axi_omatrix_ARADDR);

    SC_METHOD(thread_m_axi_omatrix_ARBURST);

    SC_METHOD(thread_m_axi_omatrix_ARCACHE);

    SC_METHOD(thread_m_axi_omatrix_ARID);

    SC_METHOD(thread_m_axi_omatrix_ARLEN);

    SC_METHOD(thread_m_axi_omatrix_ARLOCK);

    SC_METHOD(thread_m_axi_omatrix_ARPROT);

    SC_METHOD(thread_m_axi_omatrix_ARQOS);

    SC_METHOD(thread_m_axi_omatrix_ARREGION);

    SC_METHOD(thread_m_axi_omatrix_ARSIZE);

    SC_METHOD(thread_m_axi_omatrix_ARUSER);

    SC_METHOD(thread_m_axi_omatrix_ARVALID);

    SC_METHOD(thread_m_axi_omatrix_AWADDR);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( sum_cast_i_i_fu_389_p1 );
    sensitive << ( ap_reg_ioackin_m_axi_omatrix_AWREADY );

    SC_METHOD(thread_m_axi_omatrix_AWBURST);

    SC_METHOD(thread_m_axi_omatrix_AWCACHE);

    SC_METHOD(thread_m_axi_omatrix_AWID);

    SC_METHOD(thread_m_axi_omatrix_AWLEN);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_reg_ioackin_m_axi_omatrix_AWREADY );

    SC_METHOD(thread_m_axi_omatrix_AWLOCK);

    SC_METHOD(thread_m_axi_omatrix_AWPROT);

    SC_METHOD(thread_m_axi_omatrix_AWQOS);

    SC_METHOD(thread_m_axi_omatrix_AWREGION);

    SC_METHOD(thread_m_axi_omatrix_AWSIZE);

    SC_METHOD(thread_m_axi_omatrix_AWUSER);

    SC_METHOD(thread_m_axi_omatrix_AWVALID);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_reg_ioackin_m_axi_omatrix_AWREADY );

    SC_METHOD(thread_m_axi_omatrix_BREADY);
    sensitive << ( m_axi_omatrix_BVALID );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_m_axi_omatrix_RREADY);

    SC_METHOD(thread_m_axi_omatrix_WDATA);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_i_i_i_i_i_reg_493 );
    sensitive << ( tmp_i_i_reg_587 );
    sensitive << ( ap_reg_ioackin_m_axi_omatrix_WREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_omatrix_WID);

    SC_METHOD(thread_m_axi_omatrix_WLAST);

    SC_METHOD(thread_m_axi_omatrix_WSTRB);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_i_i_i_i_i_reg_493 );
    sensitive << ( ap_reg_ioackin_m_axi_omatrix_WREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_omatrix_WUSER);

    SC_METHOD(thread_m_axi_omatrix_WVALID);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_i_i_i_i_i_reg_493 );
    sensitive << ( ap_reg_ioackin_m_axi_omatrix_WREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_newIndex4_i_i_i_i_fu_411_p4);
    sensitive << ( indvar_i_i_i_i_i_reg_356 );

    SC_METHOD(thread_newIndex5_i_i_i_i_fu_421_p1);
    sensitive << ( newIndex4_i_i_i_i_fu_411_p4 );

    SC_METHOD(thread_offset_i_i_i_fu_367_p3);
    sensitive << ( i_0_i_i_c_dout );

    SC_METHOD(thread_omatrix_blk_n_AW);
    sensitive << ( m_axi_omatrix_AWREADY );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_omatrix_blk_n_B);
    sensitive << ( m_axi_omatrix_BVALID );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_omatrix_blk_n_W);
    sensitive << ( m_axi_omatrix_WREADY );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_i_i_i_i_i_reg_493 );

    SC_METHOD(thread_omatrix_offset_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( omatrix_offset_empty_n );

    SC_METHOD(thread_omatrix_offset_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( omatrix_offset_empty_n );
    sensitive << ( i_0_i_i_c_empty_n );

    SC_METHOD(thread_out_buf_0_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( newIndex5_i_i_i_i_fu_421_p1 );

    SC_METHOD(thread_out_buf_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_out_buf_10_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( newIndex5_i_i_i_i_fu_421_p1 );

    SC_METHOD(thread_out_buf_10_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_out_buf_11_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( newIndex5_i_i_i_i_fu_421_p1 );

    SC_METHOD(thread_out_buf_11_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_out_buf_12_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( newIndex5_i_i_i_i_fu_421_p1 );

    SC_METHOD(thread_out_buf_12_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_out_buf_13_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( newIndex5_i_i_i_i_fu_421_p1 );

    SC_METHOD(thread_out_buf_13_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_out_buf_14_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( newIndex5_i_i_i_i_fu_421_p1 );

    SC_METHOD(thread_out_buf_14_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_out_buf_15_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( newIndex5_i_i_i_i_fu_421_p1 );

    SC_METHOD(thread_out_buf_15_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_out_buf_1_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( newIndex5_i_i_i_i_fu_421_p1 );

    SC_METHOD(thread_out_buf_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_out_buf_2_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( newIndex5_i_i_i_i_fu_421_p1 );

    SC_METHOD(thread_out_buf_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_out_buf_3_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( newIndex5_i_i_i_i_fu_421_p1 );

    SC_METHOD(thread_out_buf_3_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_out_buf_4_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( newIndex5_i_i_i_i_fu_421_p1 );

    SC_METHOD(thread_out_buf_4_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_out_buf_5_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( newIndex5_i_i_i_i_fu_421_p1 );

    SC_METHOD(thread_out_buf_5_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_out_buf_6_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( newIndex5_i_i_i_i_fu_421_p1 );

    SC_METHOD(thread_out_buf_6_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_out_buf_7_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( newIndex5_i_i_i_i_fu_421_p1 );

    SC_METHOD(thread_out_buf_7_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_out_buf_8_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( newIndex5_i_i_i_i_fu_421_p1 );

    SC_METHOD(thread_out_buf_8_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_out_buf_9_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( newIndex5_i_i_i_i_fu_421_p1 );

    SC_METHOD(thread_out_buf_9_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_sext_cast_i_i_fu_379_p1);
    sensitive << ( omatrix_offset_dout );

    SC_METHOD(thread_sum_cast_i_i_fu_389_p1);
    sensitive << ( sum_i_i_reg_482 );

    SC_METHOD(thread_sum_i_i_fu_383_p2);
    sensitive << ( tmp_i_i_cast_i_i_fu_375_p1 );
    sensitive << ( sext_cast_i_i_fu_379_p1 );

    SC_METHOD(thread_tmp_fu_441_p1);
    sensitive << ( indvar_i_i_i_i_i_reg_356 );

    SC_METHOD(thread_tmp_i_i_cast_i_i_fu_375_p1);
    sensitive << ( offset_i_i_i_fu_367_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_omatrix_BVALID );
    sensitive << ( omatrix_offset_empty_n );
    sensitive << ( i_0_i_i_c_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_sig_ioackin_m_axi_omatrix_AWREADY );
    sensitive << ( exitcond_i_i_i_i_i_fu_399_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00000001";
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_reg_ioackin_m_axi_omatrix_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_m_axi_omatrix_WREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "memcpy_omatrix_out_b_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_omatrix_AWVALID, "(port)m_axi_omatrix_AWVALID");
    sc_trace(mVcdFile, m_axi_omatrix_AWREADY, "(port)m_axi_omatrix_AWREADY");
    sc_trace(mVcdFile, m_axi_omatrix_AWADDR, "(port)m_axi_omatrix_AWADDR");
    sc_trace(mVcdFile, m_axi_omatrix_AWID, "(port)m_axi_omatrix_AWID");
    sc_trace(mVcdFile, m_axi_omatrix_AWLEN, "(port)m_axi_omatrix_AWLEN");
    sc_trace(mVcdFile, m_axi_omatrix_AWSIZE, "(port)m_axi_omatrix_AWSIZE");
    sc_trace(mVcdFile, m_axi_omatrix_AWBURST, "(port)m_axi_omatrix_AWBURST");
    sc_trace(mVcdFile, m_axi_omatrix_AWLOCK, "(port)m_axi_omatrix_AWLOCK");
    sc_trace(mVcdFile, m_axi_omatrix_AWCACHE, "(port)m_axi_omatrix_AWCACHE");
    sc_trace(mVcdFile, m_axi_omatrix_AWPROT, "(port)m_axi_omatrix_AWPROT");
    sc_trace(mVcdFile, m_axi_omatrix_AWQOS, "(port)m_axi_omatrix_AWQOS");
    sc_trace(mVcdFile, m_axi_omatrix_AWREGION, "(port)m_axi_omatrix_AWREGION");
    sc_trace(mVcdFile, m_axi_omatrix_AWUSER, "(port)m_axi_omatrix_AWUSER");
    sc_trace(mVcdFile, m_axi_omatrix_WVALID, "(port)m_axi_omatrix_WVALID");
    sc_trace(mVcdFile, m_axi_omatrix_WREADY, "(port)m_axi_omatrix_WREADY");
    sc_trace(mVcdFile, m_axi_omatrix_WDATA, "(port)m_axi_omatrix_WDATA");
    sc_trace(mVcdFile, m_axi_omatrix_WSTRB, "(port)m_axi_omatrix_WSTRB");
    sc_trace(mVcdFile, m_axi_omatrix_WLAST, "(port)m_axi_omatrix_WLAST");
    sc_trace(mVcdFile, m_axi_omatrix_WID, "(port)m_axi_omatrix_WID");
    sc_trace(mVcdFile, m_axi_omatrix_WUSER, "(port)m_axi_omatrix_WUSER");
    sc_trace(mVcdFile, m_axi_omatrix_ARVALID, "(port)m_axi_omatrix_ARVALID");
    sc_trace(mVcdFile, m_axi_omatrix_ARREADY, "(port)m_axi_omatrix_ARREADY");
    sc_trace(mVcdFile, m_axi_omatrix_ARADDR, "(port)m_axi_omatrix_ARADDR");
    sc_trace(mVcdFile, m_axi_omatrix_ARID, "(port)m_axi_omatrix_ARID");
    sc_trace(mVcdFile, m_axi_omatrix_ARLEN, "(port)m_axi_omatrix_ARLEN");
    sc_trace(mVcdFile, m_axi_omatrix_ARSIZE, "(port)m_axi_omatrix_ARSIZE");
    sc_trace(mVcdFile, m_axi_omatrix_ARBURST, "(port)m_axi_omatrix_ARBURST");
    sc_trace(mVcdFile, m_axi_omatrix_ARLOCK, "(port)m_axi_omatrix_ARLOCK");
    sc_trace(mVcdFile, m_axi_omatrix_ARCACHE, "(port)m_axi_omatrix_ARCACHE");
    sc_trace(mVcdFile, m_axi_omatrix_ARPROT, "(port)m_axi_omatrix_ARPROT");
    sc_trace(mVcdFile, m_axi_omatrix_ARQOS, "(port)m_axi_omatrix_ARQOS");
    sc_trace(mVcdFile, m_axi_omatrix_ARREGION, "(port)m_axi_omatrix_ARREGION");
    sc_trace(mVcdFile, m_axi_omatrix_ARUSER, "(port)m_axi_omatrix_ARUSER");
    sc_trace(mVcdFile, m_axi_omatrix_RVALID, "(port)m_axi_omatrix_RVALID");
    sc_trace(mVcdFile, m_axi_omatrix_RREADY, "(port)m_axi_omatrix_RREADY");
    sc_trace(mVcdFile, m_axi_omatrix_RDATA, "(port)m_axi_omatrix_RDATA");
    sc_trace(mVcdFile, m_axi_omatrix_RLAST, "(port)m_axi_omatrix_RLAST");
    sc_trace(mVcdFile, m_axi_omatrix_RID, "(port)m_axi_omatrix_RID");
    sc_trace(mVcdFile, m_axi_omatrix_RUSER, "(port)m_axi_omatrix_RUSER");
    sc_trace(mVcdFile, m_axi_omatrix_RRESP, "(port)m_axi_omatrix_RRESP");
    sc_trace(mVcdFile, m_axi_omatrix_BVALID, "(port)m_axi_omatrix_BVALID");
    sc_trace(mVcdFile, m_axi_omatrix_BREADY, "(port)m_axi_omatrix_BREADY");
    sc_trace(mVcdFile, m_axi_omatrix_BRESP, "(port)m_axi_omatrix_BRESP");
    sc_trace(mVcdFile, m_axi_omatrix_BID, "(port)m_axi_omatrix_BID");
    sc_trace(mVcdFile, m_axi_omatrix_BUSER, "(port)m_axi_omatrix_BUSER");
    sc_trace(mVcdFile, omatrix_offset_dout, "(port)omatrix_offset_dout");
    sc_trace(mVcdFile, omatrix_offset_empty_n, "(port)omatrix_offset_empty_n");
    sc_trace(mVcdFile, omatrix_offset_read, "(port)omatrix_offset_read");
    sc_trace(mVcdFile, i_0_i_i_c_dout, "(port)i_0_i_i_c_dout");
    sc_trace(mVcdFile, i_0_i_i_c_empty_n, "(port)i_0_i_i_c_empty_n");
    sc_trace(mVcdFile, i_0_i_i_c_read, "(port)i_0_i_i_c_read");
    sc_trace(mVcdFile, out_buf_0_address0, "(port)out_buf_0_address0");
    sc_trace(mVcdFile, out_buf_0_ce0, "(port)out_buf_0_ce0");
    sc_trace(mVcdFile, out_buf_0_q0, "(port)out_buf_0_q0");
    sc_trace(mVcdFile, out_buf_1_address0, "(port)out_buf_1_address0");
    sc_trace(mVcdFile, out_buf_1_ce0, "(port)out_buf_1_ce0");
    sc_trace(mVcdFile, out_buf_1_q0, "(port)out_buf_1_q0");
    sc_trace(mVcdFile, out_buf_2_address0, "(port)out_buf_2_address0");
    sc_trace(mVcdFile, out_buf_2_ce0, "(port)out_buf_2_ce0");
    sc_trace(mVcdFile, out_buf_2_q0, "(port)out_buf_2_q0");
    sc_trace(mVcdFile, out_buf_3_address0, "(port)out_buf_3_address0");
    sc_trace(mVcdFile, out_buf_3_ce0, "(port)out_buf_3_ce0");
    sc_trace(mVcdFile, out_buf_3_q0, "(port)out_buf_3_q0");
    sc_trace(mVcdFile, out_buf_4_address0, "(port)out_buf_4_address0");
    sc_trace(mVcdFile, out_buf_4_ce0, "(port)out_buf_4_ce0");
    sc_trace(mVcdFile, out_buf_4_q0, "(port)out_buf_4_q0");
    sc_trace(mVcdFile, out_buf_5_address0, "(port)out_buf_5_address0");
    sc_trace(mVcdFile, out_buf_5_ce0, "(port)out_buf_5_ce0");
    sc_trace(mVcdFile, out_buf_5_q0, "(port)out_buf_5_q0");
    sc_trace(mVcdFile, out_buf_6_address0, "(port)out_buf_6_address0");
    sc_trace(mVcdFile, out_buf_6_ce0, "(port)out_buf_6_ce0");
    sc_trace(mVcdFile, out_buf_6_q0, "(port)out_buf_6_q0");
    sc_trace(mVcdFile, out_buf_7_address0, "(port)out_buf_7_address0");
    sc_trace(mVcdFile, out_buf_7_ce0, "(port)out_buf_7_ce0");
    sc_trace(mVcdFile, out_buf_7_q0, "(port)out_buf_7_q0");
    sc_trace(mVcdFile, out_buf_8_address0, "(port)out_buf_8_address0");
    sc_trace(mVcdFile, out_buf_8_ce0, "(port)out_buf_8_ce0");
    sc_trace(mVcdFile, out_buf_8_q0, "(port)out_buf_8_q0");
    sc_trace(mVcdFile, out_buf_9_address0, "(port)out_buf_9_address0");
    sc_trace(mVcdFile, out_buf_9_ce0, "(port)out_buf_9_ce0");
    sc_trace(mVcdFile, out_buf_9_q0, "(port)out_buf_9_q0");
    sc_trace(mVcdFile, out_buf_10_address0, "(port)out_buf_10_address0");
    sc_trace(mVcdFile, out_buf_10_ce0, "(port)out_buf_10_ce0");
    sc_trace(mVcdFile, out_buf_10_q0, "(port)out_buf_10_q0");
    sc_trace(mVcdFile, out_buf_11_address0, "(port)out_buf_11_address0");
    sc_trace(mVcdFile, out_buf_11_ce0, "(port)out_buf_11_ce0");
    sc_trace(mVcdFile, out_buf_11_q0, "(port)out_buf_11_q0");
    sc_trace(mVcdFile, out_buf_12_address0, "(port)out_buf_12_address0");
    sc_trace(mVcdFile, out_buf_12_ce0, "(port)out_buf_12_ce0");
    sc_trace(mVcdFile, out_buf_12_q0, "(port)out_buf_12_q0");
    sc_trace(mVcdFile, out_buf_13_address0, "(port)out_buf_13_address0");
    sc_trace(mVcdFile, out_buf_13_ce0, "(port)out_buf_13_ce0");
    sc_trace(mVcdFile, out_buf_13_q0, "(port)out_buf_13_q0");
    sc_trace(mVcdFile, out_buf_14_address0, "(port)out_buf_14_address0");
    sc_trace(mVcdFile, out_buf_14_ce0, "(port)out_buf_14_ce0");
    sc_trace(mVcdFile, out_buf_14_q0, "(port)out_buf_14_q0");
    sc_trace(mVcdFile, out_buf_15_address0, "(port)out_buf_15_address0");
    sc_trace(mVcdFile, out_buf_15_ce0, "(port)out_buf_15_ce0");
    sc_trace(mVcdFile, out_buf_15_q0, "(port)out_buf_15_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, omatrix_blk_n_AW, "omatrix_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, omatrix_blk_n_W, "omatrix_blk_n_W");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_i_i_i_i_i_reg_493, "exitcond_i_i_i_i_i_reg_493");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_i_i_i_i_i_reg_493, "ap_reg_pp0_iter1_exitcond_i_i_i_i_i_reg_493");
    sc_trace(mVcdFile, omatrix_blk_n_B, "omatrix_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, omatrix_offset_blk_n, "omatrix_offset_blk_n");
    sc_trace(mVcdFile, i_0_i_i_c_blk_n, "i_0_i_i_c_blk_n");
    sc_trace(mVcdFile, indvar_i_i_i_i_i_reg_356, "indvar_i_i_i_i_i_reg_356");
    sc_trace(mVcdFile, sum_i_i_fu_383_p2, "sum_i_i_fu_383_p2");
    sc_trace(mVcdFile, sum_i_i_reg_482, "sum_i_i_reg_482");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_omatrix_AWREADY, "ap_sig_ioackin_m_axi_omatrix_AWREADY");
    sc_trace(mVcdFile, exitcond_i_i_i_i_i_fu_399_p2, "exitcond_i_i_i_i_i_fu_399_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_omatrix_WREADY, "ap_sig_ioackin_m_axi_omatrix_WREADY");
    sc_trace(mVcdFile, ap_block_state5_io, "ap_block_state5_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, indvar_next_i_i_i_i_s_fu_405_p2, "indvar_next_i_i_i_i_s_fu_405_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_fu_441_p1, "tmp_fu_441_p1");
    sc_trace(mVcdFile, tmp_reg_502, "tmp_reg_502");
    sc_trace(mVcdFile, tmp_i_i_fu_445_p18, "tmp_i_i_fu_445_p18");
    sc_trace(mVcdFile, tmp_i_i_reg_587, "tmp_i_i_reg_587");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, newIndex5_i_i_i_i_fu_421_p1, "newIndex5_i_i_i_i_fu_421_p1");
    sc_trace(mVcdFile, sum_cast_i_i_fu_389_p1, "sum_cast_i_i_fu_389_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_omatrix_AWREADY, "ap_reg_ioackin_m_axi_omatrix_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_omatrix_WREADY, "ap_reg_ioackin_m_axi_omatrix_WREADY");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, offset_i_i_i_fu_367_p3, "offset_i_i_i_fu_367_p3");
    sc_trace(mVcdFile, tmp_i_i_cast_i_i_fu_375_p1, "tmp_i_i_cast_i_i_fu_375_p1");
    sc_trace(mVcdFile, sext_cast_i_i_fu_379_p1, "sext_cast_i_i_fu_379_p1");
    sc_trace(mVcdFile, newIndex4_i_i_i_i_fu_411_p4, "newIndex4_i_i_i_i_fu_411_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

memcpy_omatrix_out_b::~memcpy_omatrix_out_b() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete IZigzagMatrix_f2rcud_U58;
}

void memcpy_omatrix_out_b::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                    esl_seteq<1,1,1>(m_axi_omatrix_BVALID.read(), ap_const_logic_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_omatrix_AWREADY.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_omatrix_AWREADY.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_omatrix_AWREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_omatrix_AWREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_m_axi_omatrix_AWREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, m_axi_omatrix_AWREADY.read())) {
                ap_reg_ioackin_m_axi_omatrix_AWREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_omatrix_WREADY = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_i_i_i_i_i_reg_493.read()))) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_m_axi_omatrix_WREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, m_axi_omatrix_WREADY.read()) && 
                        esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
                ap_reg_ioackin_m_axi_omatrix_WREADY = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_i_fu_399_p2.read()))) {
        indvar_i_i_i_i_i_reg_356 = indvar_next_i_i_i_i_s_fu_405_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_omatrix_AWREADY.read(), ap_const_logic_1))) {
        indvar_i_i_i_i_i_reg_356 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond_i_i_i_i_i_reg_493 = exitcond_i_i_i_i_i_reg_493.read();
        exitcond_i_i_i_i_i_reg_493 = exitcond_i_i_i_i_i_fu_399_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, omatrix_offset_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, i_0_i_i_c_empty_n.read())))) {
        sum_i_i_reg_482 = sum_i_i_fu_383_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_i_reg_493.read()))) {
        tmp_i_i_reg_587 = tmp_i_i_fu_445_p18.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_i_fu_399_p2.read()))) {
        tmp_reg_502 = tmp_fu_441_p1.read();
    }
}

void memcpy_omatrix_out_b::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void memcpy_omatrix_out_b::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void memcpy_omatrix_out_b::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[7];
}

void memcpy_omatrix_out_b::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void memcpy_omatrix_out_b::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void memcpy_omatrix_out_b::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void memcpy_omatrix_out_b::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read()));
}

void memcpy_omatrix_out_b::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read()));
}

void memcpy_omatrix_out_b::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, omatrix_offset_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, i_0_i_i_c_empty_n.read()));
}

void memcpy_omatrix_out_b::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void memcpy_omatrix_out_b::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void memcpy_omatrix_out_b::thread_ap_block_state5_io() {
    ap_block_state5_io = (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_i_i_i_i_i_reg_493.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_omatrix_WREADY.read()));
}

void memcpy_omatrix_out_b::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void memcpy_omatrix_out_b::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(exitcond_i_i_i_i_i_fu_399_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(m_axi_omatrix_BVALID.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void memcpy_omatrix_out_b::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void memcpy_omatrix_out_b::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(m_axi_omatrix_BVALID.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_ap_sig_ioackin_m_axi_omatrix_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_omatrix_AWREADY.read())) {
        ap_sig_ioackin_m_axi_omatrix_AWREADY = m_axi_omatrix_AWREADY.read();
    } else {
        ap_sig_ioackin_m_axi_omatrix_AWREADY = ap_const_logic_1;
    }
}

void memcpy_omatrix_out_b::thread_ap_sig_ioackin_m_axi_omatrix_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_omatrix_WREADY.read())) {
        ap_sig_ioackin_m_axi_omatrix_WREADY = m_axi_omatrix_WREADY.read();
    } else {
        ap_sig_ioackin_m_axi_omatrix_WREADY = ap_const_logic_1;
    }
}

void memcpy_omatrix_out_b::thread_exitcond_i_i_i_i_i_fu_399_p2() {
    exitcond_i_i_i_i_i_fu_399_p2 = (!indvar_i_i_i_i_i_reg_356.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(indvar_i_i_i_i_i_reg_356.read() == ap_const_lv6_20);
}

void memcpy_omatrix_out_b::thread_i_0_i_i_c_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_0_i_i_c_blk_n = i_0_i_i_c_empty_n.read();
    } else {
        i_0_i_i_c_blk_n = ap_const_logic_1;
    }
}

void memcpy_omatrix_out_b::thread_i_0_i_i_c_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, omatrix_offset_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, i_0_i_i_c_empty_n.read())))) {
        i_0_i_i_c_read = ap_const_logic_1;
    } else {
        i_0_i_i_c_read = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_indvar_next_i_i_i_i_s_fu_405_p2() {
    indvar_next_i_i_i_i_s_fu_405_p2 = (!indvar_i_i_i_i_i_reg_356.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(indvar_i_i_i_i_i_reg_356.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_ARADDR() {
    m_axi_omatrix_ARADDR = ap_const_lv32_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_ARBURST() {
    m_axi_omatrix_ARBURST = ap_const_lv2_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_ARCACHE() {
    m_axi_omatrix_ARCACHE = ap_const_lv4_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_ARID() {
    m_axi_omatrix_ARID = ap_const_lv1_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_ARLEN() {
    m_axi_omatrix_ARLEN = ap_const_lv32_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_ARLOCK() {
    m_axi_omatrix_ARLOCK = ap_const_lv2_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_ARPROT() {
    m_axi_omatrix_ARPROT = ap_const_lv3_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_ARQOS() {
    m_axi_omatrix_ARQOS = ap_const_lv4_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_ARREGION() {
    m_axi_omatrix_ARREGION = ap_const_lv4_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_ARSIZE() {
    m_axi_omatrix_ARSIZE = ap_const_lv3_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_ARUSER() {
    m_axi_omatrix_ARUSER = ap_const_lv1_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_ARVALID() {
    m_axi_omatrix_ARVALID = ap_const_logic_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_AWADDR() {
    m_axi_omatrix_AWADDR =  (sc_lv<32>) (sum_cast_i_i_fu_389_p1.read());
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_AWBURST() {
    m_axi_omatrix_AWBURST = ap_const_lv2_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_AWCACHE() {
    m_axi_omatrix_AWCACHE = ap_const_lv4_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_AWID() {
    m_axi_omatrix_AWID = ap_const_lv1_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_AWLEN() {
    m_axi_omatrix_AWLEN = ap_const_lv32_20;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_AWLOCK() {
    m_axi_omatrix_AWLOCK = ap_const_lv2_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_AWPROT() {
    m_axi_omatrix_AWPROT = ap_const_lv3_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_AWQOS() {
    m_axi_omatrix_AWQOS = ap_const_lv4_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_AWREGION() {
    m_axi_omatrix_AWREGION = ap_const_lv4_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_AWSIZE() {
    m_axi_omatrix_AWSIZE = ap_const_lv3_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_AWUSER() {
    m_axi_omatrix_AWUSER = ap_const_lv1_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_omatrix_AWREADY.read()))) {
        m_axi_omatrix_AWVALID = ap_const_logic_1;
    } else {
        m_axi_omatrix_AWVALID = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(m_axi_omatrix_BVALID.read(), ap_const_logic_1))) {
        m_axi_omatrix_BREADY = ap_const_logic_1;
    } else {
        m_axi_omatrix_BREADY = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_RREADY() {
    m_axi_omatrix_RREADY = ap_const_logic_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_WDATA() {
    m_axi_omatrix_WDATA = tmp_i_i_reg_587.read();
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_WID() {
    m_axi_omatrix_WID = ap_const_lv1_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_WLAST() {
    m_axi_omatrix_WLAST = ap_const_logic_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_WSTRB() {
    m_axi_omatrix_WSTRB = ap_const_lv4_F;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_WUSER() {
    m_axi_omatrix_WUSER = ap_const_lv1_0;
}

void memcpy_omatrix_out_b::thread_m_axi_omatrix_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_i_i_i_i_i_reg_493.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_omatrix_WREADY.read()))) {
        m_axi_omatrix_WVALID = ap_const_logic_1;
    } else {
        m_axi_omatrix_WVALID = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_newIndex4_i_i_i_i_fu_411_p4() {
    newIndex4_i_i_i_i_fu_411_p4 = indvar_i_i_i_i_i_reg_356.read().range(5, 4);
}

void memcpy_omatrix_out_b::thread_newIndex5_i_i_i_i_fu_421_p1() {
    newIndex5_i_i_i_i_fu_421_p1 = esl_zext<64,2>(newIndex4_i_i_i_i_fu_411_p4.read());
}

void memcpy_omatrix_out_b::thread_offset_i_i_i_fu_367_p3() {
    offset_i_i_i_fu_367_p3 = esl_concat<1,5>(i_0_i_i_c_dout.read(), ap_const_lv5_0);
}

void memcpy_omatrix_out_b::thread_omatrix_blk_n_AW() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        omatrix_blk_n_AW = m_axi_omatrix_AWREADY.read();
    } else {
        omatrix_blk_n_AW = ap_const_logic_1;
    }
}

void memcpy_omatrix_out_b::thread_omatrix_blk_n_B() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        omatrix_blk_n_B = m_axi_omatrix_BVALID.read();
    } else {
        omatrix_blk_n_B = ap_const_logic_1;
    }
}

void memcpy_omatrix_out_b::thread_omatrix_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_i_i_i_i_i_reg_493.read()))) {
        omatrix_blk_n_W = m_axi_omatrix_WREADY.read();
    } else {
        omatrix_blk_n_W = ap_const_logic_1;
    }
}

void memcpy_omatrix_out_b::thread_omatrix_offset_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        omatrix_offset_blk_n = omatrix_offset_empty_n.read();
    } else {
        omatrix_offset_blk_n = ap_const_logic_1;
    }
}

void memcpy_omatrix_out_b::thread_omatrix_offset_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, omatrix_offset_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, i_0_i_i_c_empty_n.read())))) {
        omatrix_offset_read = ap_const_logic_1;
    } else {
        omatrix_offset_read = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_out_buf_0_address0() {
    out_buf_0_address0 =  (sc_lv<1>) (newIndex5_i_i_i_i_fu_421_p1.read());
}

void memcpy_omatrix_out_b::thread_out_buf_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        out_buf_0_ce0 = ap_const_logic_1;
    } else {
        out_buf_0_ce0 = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_out_buf_10_address0() {
    out_buf_10_address0 =  (sc_lv<1>) (newIndex5_i_i_i_i_fu_421_p1.read());
}

void memcpy_omatrix_out_b::thread_out_buf_10_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        out_buf_10_ce0 = ap_const_logic_1;
    } else {
        out_buf_10_ce0 = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_out_buf_11_address0() {
    out_buf_11_address0 =  (sc_lv<1>) (newIndex5_i_i_i_i_fu_421_p1.read());
}

void memcpy_omatrix_out_b::thread_out_buf_11_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        out_buf_11_ce0 = ap_const_logic_1;
    } else {
        out_buf_11_ce0 = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_out_buf_12_address0() {
    out_buf_12_address0 =  (sc_lv<1>) (newIndex5_i_i_i_i_fu_421_p1.read());
}

void memcpy_omatrix_out_b::thread_out_buf_12_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        out_buf_12_ce0 = ap_const_logic_1;
    } else {
        out_buf_12_ce0 = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_out_buf_13_address0() {
    out_buf_13_address0 =  (sc_lv<1>) (newIndex5_i_i_i_i_fu_421_p1.read());
}

void memcpy_omatrix_out_b::thread_out_buf_13_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        out_buf_13_ce0 = ap_const_logic_1;
    } else {
        out_buf_13_ce0 = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_out_buf_14_address0() {
    out_buf_14_address0 =  (sc_lv<1>) (newIndex5_i_i_i_i_fu_421_p1.read());
}

void memcpy_omatrix_out_b::thread_out_buf_14_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        out_buf_14_ce0 = ap_const_logic_1;
    } else {
        out_buf_14_ce0 = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_out_buf_15_address0() {
    out_buf_15_address0 =  (sc_lv<1>) (newIndex5_i_i_i_i_fu_421_p1.read());
}

void memcpy_omatrix_out_b::thread_out_buf_15_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        out_buf_15_ce0 = ap_const_logic_1;
    } else {
        out_buf_15_ce0 = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_out_buf_1_address0() {
    out_buf_1_address0 =  (sc_lv<1>) (newIndex5_i_i_i_i_fu_421_p1.read());
}

void memcpy_omatrix_out_b::thread_out_buf_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        out_buf_1_ce0 = ap_const_logic_1;
    } else {
        out_buf_1_ce0 = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_out_buf_2_address0() {
    out_buf_2_address0 =  (sc_lv<1>) (newIndex5_i_i_i_i_fu_421_p1.read());
}

void memcpy_omatrix_out_b::thread_out_buf_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        out_buf_2_ce0 = ap_const_logic_1;
    } else {
        out_buf_2_ce0 = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_out_buf_3_address0() {
    out_buf_3_address0 =  (sc_lv<1>) (newIndex5_i_i_i_i_fu_421_p1.read());
}

void memcpy_omatrix_out_b::thread_out_buf_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        out_buf_3_ce0 = ap_const_logic_1;
    } else {
        out_buf_3_ce0 = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_out_buf_4_address0() {
    out_buf_4_address0 =  (sc_lv<1>) (newIndex5_i_i_i_i_fu_421_p1.read());
}

void memcpy_omatrix_out_b::thread_out_buf_4_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        out_buf_4_ce0 = ap_const_logic_1;
    } else {
        out_buf_4_ce0 = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_out_buf_5_address0() {
    out_buf_5_address0 =  (sc_lv<1>) (newIndex5_i_i_i_i_fu_421_p1.read());
}

void memcpy_omatrix_out_b::thread_out_buf_5_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        out_buf_5_ce0 = ap_const_logic_1;
    } else {
        out_buf_5_ce0 = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_out_buf_6_address0() {
    out_buf_6_address0 =  (sc_lv<1>) (newIndex5_i_i_i_i_fu_421_p1.read());
}

void memcpy_omatrix_out_b::thread_out_buf_6_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        out_buf_6_ce0 = ap_const_logic_1;
    } else {
        out_buf_6_ce0 = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_out_buf_7_address0() {
    out_buf_7_address0 =  (sc_lv<1>) (newIndex5_i_i_i_i_fu_421_p1.read());
}

void memcpy_omatrix_out_b::thread_out_buf_7_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        out_buf_7_ce0 = ap_const_logic_1;
    } else {
        out_buf_7_ce0 = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_out_buf_8_address0() {
    out_buf_8_address0 =  (sc_lv<1>) (newIndex5_i_i_i_i_fu_421_p1.read());
}

void memcpy_omatrix_out_b::thread_out_buf_8_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        out_buf_8_ce0 = ap_const_logic_1;
    } else {
        out_buf_8_ce0 = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_out_buf_9_address0() {
    out_buf_9_address0 =  (sc_lv<1>) (newIndex5_i_i_i_i_fu_421_p1.read());
}

void memcpy_omatrix_out_b::thread_out_buf_9_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        out_buf_9_ce0 = ap_const_logic_1;
    } else {
        out_buf_9_ce0 = ap_const_logic_0;
    }
}

void memcpy_omatrix_out_b::thread_sext_cast_i_i_fu_379_p1() {
    sext_cast_i_i_fu_379_p1 = esl_zext<31,30>(omatrix_offset_dout.read());
}

void memcpy_omatrix_out_b::thread_sum_cast_i_i_fu_389_p1() {
    sum_cast_i_i_fu_389_p1 = esl_zext<64,31>(sum_i_i_reg_482.read());
}

void memcpy_omatrix_out_b::thread_sum_i_i_fu_383_p2() {
    sum_i_i_fu_383_p2 = (!tmp_i_i_cast_i_i_fu_375_p1.read().is_01() || !sext_cast_i_i_fu_379_p1.read().is_01())? sc_lv<31>(): (sc_biguint<31>(tmp_i_i_cast_i_i_fu_375_p1.read()) + sc_biguint<31>(sext_cast_i_i_fu_379_p1.read()));
}

void memcpy_omatrix_out_b::thread_tmp_fu_441_p1() {
    tmp_fu_441_p1 = indvar_i_i_i_i_i_reg_356.read().range(4-1, 0);
}

void memcpy_omatrix_out_b::thread_tmp_i_i_cast_i_i_fu_375_p1() {
    tmp_i_i_cast_i_i_fu_375_p1 = esl_zext<31,6>(offset_i_i_i_fu_367_p3.read());
}

void memcpy_omatrix_out_b::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, omatrix_offset_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, i_0_i_i_c_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_omatrix_AWREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_i_i_i_i_i_fu_399_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_i_i_i_i_i_fu_399_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(m_axi_omatrix_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXX";
            break;
    }
}

}


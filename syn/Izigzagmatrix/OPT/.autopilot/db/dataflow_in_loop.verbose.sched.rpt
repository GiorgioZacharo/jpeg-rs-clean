

================================================================
== Vivado HLS Report for 'dataflow_in_loop'
================================================================
* Date:           Thu May 17 17:49:42 2018

* Version:        2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)
* Project:        Izigzagmatrix
* Solution:       OPT
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   3.00|      2.62|        0.38|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |  100|  100|   54|   54| dataflow |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 1
  DF-Pipeline-0: Size = 6, States = { 1 2 3 4 5 6 }

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 

* FSM state operations: 

 <State 1> : 1.31ns
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%omatrix_offset_read = call i62 @_ssdm_op_Read.ap_auto.i62(i62 %omatrix_offset)"
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%imatrix_offset_read = call i62 @_ssdm_op_Read.ap_auto.i62(i62 %imatrix_offset)"
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%i_0_i_i_read = call i2 @_ssdm_op_Read.ap_auto.i2(i2 %i_0_i_i)"
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%omatrix_offset_c = alloca i62, align 8"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 1.83> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 1> <Depth = 2> <FIFO>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%imatrix_offset_c = alloca i62, align 8"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 1.83> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 1> <Depth = 2> <FIFO>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%i_0_i_i_c = alloca i1, align 1"   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 1.83> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 1> <Depth = 2> <FIFO>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%in1_buf_0 = alloca [2 x i6], align 1" [../src/decode.c:101]
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%in1_buf_1 = alloca [2 x i6], align 1" [../src/decode.c:101]
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%in1_buf_2 = alloca [2 x i6], align 1" [../src/decode.c:101]
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%in1_buf_3 = alloca [2 x i6], align 1" [../src/decode.c:101]
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%in1_buf_4 = alloca [2 x i6], align 1" [../src/decode.c:101]
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%in1_buf_5 = alloca [2 x i6], align 1" [../src/decode.c:101]
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%in1_buf_6 = alloca [2 x i6], align 1" [../src/decode.c:101]
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%in1_buf_7 = alloca [2 x i6], align 1" [../src/decode.c:101]
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%in1_buf_8 = alloca [2 x i6], align 1" [../src/decode.c:101]
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%in1_buf_9 = alloca [2 x i6], align 1" [../src/decode.c:101]
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%in1_buf_10 = alloca [2 x i6], align 1" [../src/decode.c:101]
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%in1_buf_11 = alloca [2 x i6], align 1" [../src/decode.c:101]
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%in1_buf_12 = alloca [2 x i6], align 1" [../src/decode.c:101]
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%in1_buf_13 = alloca [2 x i6], align 1" [../src/decode.c:101]
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%in1_buf_14 = alloca [2 x i6], align 1" [../src/decode.c:101]
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%in1_buf_15 = alloca [2 x i6], align 1" [../src/decode.c:101]
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%out_buf_0 = alloca [2 x i32], align 4" [../src/decode.c:102]
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%out_buf_1 = alloca [2 x i32], align 4" [../src/decode.c:102]
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%out_buf_2 = alloca [2 x i32], align 4" [../src/decode.c:102]
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%out_buf_3 = alloca [2 x i32], align 4" [../src/decode.c:102]
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%out_buf_4 = alloca [2 x i32], align 4" [../src/decode.c:102]
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%out_buf_5 = alloca [2 x i32], align 4" [../src/decode.c:102]
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%out_buf_6 = alloca [2 x i32], align 4" [../src/decode.c:102]
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%out_buf_7 = alloca [2 x i32], align 4" [../src/decode.c:102]
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%out_buf_8 = alloca [2 x i32], align 4" [../src/decode.c:102]
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%out_buf_9 = alloca [2 x i32], align 4" [../src/decode.c:102]
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%out_buf_10 = alloca [2 x i32], align 4" [../src/decode.c:102]
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%out_buf_11 = alloca [2 x i32], align 4" [../src/decode.c:102]
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%out_buf_12 = alloca [2 x i32], align 4" [../src/decode.c:102]
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%out_buf_13 = alloca [2 x i32], align 4" [../src/decode.c:102]
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%out_buf_14 = alloca [2 x i32], align 4" [../src/decode.c:102]
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%out_buf_15 = alloca [2 x i32], align 4" [../src/decode.c:102]
ST_1 : Operation 45 [2/2] (1.31ns)   --->   "call void @Loop_0_proc19(i2 %i_0_i_i_read, [2 x i6]* %in1_buf_0, [2 x i6]* %in1_buf_1, [2 x i6]* %in1_buf_2, [2 x i6]* %in1_buf_3, [2 x i6]* %in1_buf_4, [2 x i6]* %in1_buf_5, [2 x i6]* %in1_buf_6, [2 x i6]* %in1_buf_7, [2 x i6]* %in1_buf_8, [2 x i6]* %in1_buf_9, [2 x i6]* %in1_buf_10, [2 x i6]* %in1_buf_11, [2 x i6]* %in1_buf_12, [2 x i6]* %in1_buf_13, [2 x i6]* %in1_buf_14, [2 x i6]* %in1_buf_15, i1* %i_0_i_i_c, i62 %imatrix_offset_read, i62 %omatrix_offset_read, i62* %imatrix_offset_c, i62* %omatrix_offset_c)"   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

 <State 2> : 0.00ns
ST_2 : Operation 46 [1/2] (0.00ns)   --->   "call void @Loop_0_proc19(i2 %i_0_i_i_read, [2 x i6]* %in1_buf_0, [2 x i6]* %in1_buf_1, [2 x i6]* %in1_buf_2, [2 x i6]* %in1_buf_3, [2 x i6]* %in1_buf_4, [2 x i6]* %in1_buf_5, [2 x i6]* %in1_buf_6, [2 x i6]* %in1_buf_7, [2 x i6]* %in1_buf_8, [2 x i6]* %in1_buf_9, [2 x i6]* %in1_buf_10, [2 x i6]* %in1_buf_11, [2 x i6]* %in1_buf_12, [2 x i6]* %in1_buf_13, [2 x i6]* %in1_buf_14, [2 x i6]* %in1_buf_15, i1* %i_0_i_i_c, i62 %imatrix_offset_read, i62 %omatrix_offset_read, i62* %imatrix_offset_c, i62* %omatrix_offset_c)"   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

 <State 3> : 0.00ns
ST_3 : Operation 47 [2/2] (0.00ns)   --->   "call void @Loop_1_proc([2 x i6]* %in1_buf_0, i32* %imatrix, i62* nocapture %imatrix_offset_c, [2 x i32]* %out_buf_0, [2 x i6]* %in1_buf_1, [2 x i32]* %out_buf_1, [2 x i6]* %in1_buf_2, [2 x i32]* %out_buf_2, [2 x i6]* %in1_buf_3, [2 x i32]* %out_buf_3, [2 x i6]* %in1_buf_4, [2 x i32]* %out_buf_4, [2 x i6]* %in1_buf_5, [2 x i32]* %out_buf_5, [2 x i6]* %in1_buf_6, [2 x i32]* %out_buf_6, [2 x i6]* %in1_buf_7, [2 x i32]* %out_buf_7, [2 x i6]* %in1_buf_8, [2 x i32]* %out_buf_8, [2 x i6]* %in1_buf_9, [2 x i32]* %out_buf_9, [2 x i6]* %in1_buf_10, [2 x i32]* %out_buf_10, [2 x i6]* %in1_buf_11, [2 x i32]* %out_buf_11, [2 x i6]* %in1_buf_12, [2 x i32]* %out_buf_12, [2 x i6]* %in1_buf_13, [2 x i32]* %out_buf_13, [2 x i6]* %in1_buf_14, [2 x i32]* %out_buf_14, [2 x i6]* %in1_buf_15, [2 x i32]* %out_buf_15)"   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

 <State 4> : 0.00ns
ST_4 : Operation 48 [1/2] (0.00ns)   --->   "call void @Loop_1_proc([2 x i6]* %in1_buf_0, i32* %imatrix, i62* nocapture %imatrix_offset_c, [2 x i32]* %out_buf_0, [2 x i6]* %in1_buf_1, [2 x i32]* %out_buf_1, [2 x i6]* %in1_buf_2, [2 x i32]* %out_buf_2, [2 x i6]* %in1_buf_3, [2 x i32]* %out_buf_3, [2 x i6]* %in1_buf_4, [2 x i32]* %out_buf_4, [2 x i6]* %in1_buf_5, [2 x i32]* %out_buf_5, [2 x i6]* %in1_buf_6, [2 x i32]* %out_buf_6, [2 x i6]* %in1_buf_7, [2 x i32]* %out_buf_7, [2 x i6]* %in1_buf_8, [2 x i32]* %out_buf_8, [2 x i6]* %in1_buf_9, [2 x i32]* %out_buf_9, [2 x i6]* %in1_buf_10, [2 x i32]* %out_buf_10, [2 x i6]* %in1_buf_11, [2 x i32]* %out_buf_11, [2 x i6]* %in1_buf_12, [2 x i32]* %out_buf_12, [2 x i6]* %in1_buf_13, [2 x i32]* %out_buf_13, [2 x i6]* %in1_buf_14, [2 x i32]* %out_buf_14, [2 x i6]* %in1_buf_15, [2 x i32]* %out_buf_15)"   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

 <State 5> : 0.00ns
ST_5 : Operation 49 [2/2] (0.00ns)   --->   "call void @memcpy.omatrix.out_b(i32* %omatrix, i62* nocapture %omatrix_offset_c, i1* %i_0_i_i_c, [2 x i32]* %out_buf_0, [2 x i32]* %out_buf_1, [2 x i32]* %out_buf_2, [2 x i32]* %out_buf_3, [2 x i32]* %out_buf_4, [2 x i32]* %out_buf_5, [2 x i32]* %out_buf_6, [2 x i32]* %out_buf_7, [2 x i32]* %out_buf_8, [2 x i32]* %out_buf_9, [2 x i32]* %out_buf_10, [2 x i32]* %out_buf_11, [2 x i32]* %out_buf_12, [2 x i32]* %out_buf_13, [2 x i32]* %out_buf_14, [2 x i32]* %out_buf_15)"   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

 <State 6> : 0.00ns
ST_6 : Operation 50 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %omatrix, [6 x i8]* @p_str8, i32 0, i32 0, [1 x i8]* @p_str19, i32 0, i32 64, [8 x i8]* @p_str412, [6 x i8]* @p_str311, [1 x i8]* @p_str19, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str19, [1 x i8]* @p_str19)"
ST_6 : Operation 51 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %imatrix, [6 x i8]* @p_str8, i32 0, i32 0, [1 x i8]* @p_str19, i32 0, i32 64, [8 x i8]* @p_str210, [6 x i8]* @p_str311, [1 x i8]* @p_str19, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str19, [1 x i8]* @p_str19)"
ST_6 : Operation 52 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecDataflowPipeline(i32 -1, [1 x i8]* @p_str19) nounwind" [../src/decode.c:108]
ST_6 : Operation 53 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecChannel([10 x i8]* @i_OC_0_OC_i_OC_i_c_s, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 0, i1* %i_0_i_i_c, i1* %i_0_i_i_c)"
ST_6 : Operation 54 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1* %i_0_i_i_c, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_6 : Operation 55 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecChannel([17 x i8]* @imatrix_OC_offset_c_s, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 1, i32 0, i62* %imatrix_offset_c, i62* %imatrix_offset_c)"
ST_6 : Operation 56 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i62* %imatrix_offset_c, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_6 : Operation 57 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecChannel([17 x i8]* @omatrix_OC_offset_c_s, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 0, i62* %omatrix_offset_c, i62* %omatrix_offset_c)"
ST_6 : Operation 58 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i62* %omatrix_offset_c, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"
ST_6 : Operation 59 [1/2] (0.00ns)   --->   "call void @memcpy.omatrix.out_b(i32* %omatrix, i62* nocapture %omatrix_offset_c, i1* %i_0_i_i_c, [2 x i32]* %out_buf_0, [2 x i32]* %out_buf_1, [2 x i32]* %out_buf_2, [2 x i32]* %out_buf_3, [2 x i32]* %out_buf_4, [2 x i32]* %out_buf_5, [2 x i32]* %out_buf_6, [2 x i32]* %out_buf_7, [2 x i32]* %out_buf_8, [2 x i32]* %out_buf_9, [2 x i32]* %out_buf_10, [2 x i32]* %out_buf_11, [2 x i32]* %out_buf_12, [2 x i32]* %out_buf_13, [2 x i32]* %out_buf_14, [2 x i32]* %out_buf_15)"   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 60 [1/1] (0.00ns)   --->   "ret void"


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 3ns, clock uncertainty: 0.375ns.

 <State 1>: 1.31ns
The critical path consists of the following:
	wire read on port 'omatrix_offset' [7]  (0 ns)
	'call' operation to 'Loop_0_proc19' [54]  (1.31 ns)

 <State 2>: 0ns
The critical path consists of the following:

 <State 3>: 0ns
The critical path consists of the following:

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 0ns
The critical path consists of the following:

 <State 6>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

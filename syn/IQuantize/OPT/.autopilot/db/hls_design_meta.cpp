#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axi_BUS_DST_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUS_DST_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_BUS_DST_AWADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_BUS_DST_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_BUS_DST_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_BUS_DST_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_BUS_DST_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_BUS_DST_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_BUS_DST_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_BUS_DST_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_BUS_DST_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_BUS_DST_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_BUS_DST_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_BUS_DST_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUS_DST_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_BUS_DST_WDATA", 32, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUS_DST_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_BUS_DST_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_BUS_DST_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_BUS_DST_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_BUS_DST_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUS_DST_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_BUS_DST_ARADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_BUS_DST_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_BUS_DST_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_BUS_DST_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_BUS_DST_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_BUS_DST_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_BUS_DST_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_BUS_DST_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_BUS_DST_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_BUS_DST_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_BUS_DST_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_BUS_DST_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUS_DST_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_BUS_DST_RDATA", 32, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUS_DST_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_BUS_DST_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_BUS_DST_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_BUS_DST_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_BUS_DST_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUS_DST_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_BUS_DST_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_BUS_DST_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_BUS_DST_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_BUS_SRC_AWVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUS_SRC_AWREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_BUS_SRC_AWADDR", 64, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_BUS_SRC_AWID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_BUS_SRC_AWLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_BUS_SRC_AWSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_BUS_SRC_AWBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_BUS_SRC_AWLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_BUS_SRC_AWCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_BUS_SRC_AWPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_BUS_SRC_AWQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_BUS_SRC_AWREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_BUS_SRC_AWUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_BUS_SRC_WVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUS_SRC_WREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_BUS_SRC_WDATA", 32, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUS_SRC_WSTRB", 4, hls_out, 1, "m_axi", "STRB", 1),
	Port_Property("m_axi_BUS_SRC_WLAST", 1, hls_out, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_BUS_SRC_WID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_BUS_SRC_WUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_BUS_SRC_ARVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUS_SRC_ARREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_BUS_SRC_ARADDR", 64, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_BUS_SRC_ARID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_BUS_SRC_ARLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_BUS_SRC_ARSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_BUS_SRC_ARBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_BUS_SRC_ARLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_BUS_SRC_ARCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_BUS_SRC_ARPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_BUS_SRC_ARQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_BUS_SRC_ARREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_BUS_SRC_ARUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_BUS_SRC_RVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUS_SRC_RREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_BUS_SRC_RDATA", 32, hls_in, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_BUS_SRC_RLAST", 1, hls_in, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_BUS_SRC_RID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_BUS_SRC_RUSER", 1, hls_in, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_BUS_SRC_RRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_BUS_SRC_BVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_BUS_SRC_BREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_BUS_SRC_BRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_BUS_SRC_BID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_BUS_SRC_BUSER", 1, hls_in, 1, "m_axi", "USER", 1),
	Port_Property("s_axi_BUS_CTRL_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_CTRL_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_CTRL_AWADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_CTRL_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_CTRL_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_CTRL_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_CTRL_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_CTRL_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_CTRL_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_CTRL_ARADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_CTRL_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_CTRL_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_CTRL_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_CTRL_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_CTRL_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_CTRL_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_CTRL_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "IQuantize";
